This file explains a possible way to check the Trilinos installation.

After you have configured and compiled Trilinos (that is, typed
"make"), you can execute most of the compiled examples by typing:

    $ make run-examples                                           (1)

See the bottom of this text file for a list of which packages are
supported by which make targets.  Note that command (1) will *not*
compile any examples, therefore if you have configured Trilinos with
--disable-examples, nothing will be run.

If you have configured Trilinos with MPI support, you might need to
initialize the MPI deamon (for example, LAM/MPI requires a call to
lamboot). By default, Trilinos assumes that an MPI executable is run
using

    $ mpirun -np <num-procs> <executable-name>

If not, you can specify the command to be used instead of
"mpirun -np " by setting the environmental variable
TRILINOS_MPI_GO. For example, some DEC machines require the following
(using BASH):

    $ export TRILINOS_MPI_GO="prun -n "

Command (1) should run relatively fast. If you want a more
comprehensive test, simply type

    $ make run-tests                                              (2)

Command (2) will run most of the test harness suite of Trilinos, and
might take some time.

If you have configured Trilinos with Python support, you can also try

    $ make run-pyexamples                                         (3)

or

    $ make run-pytests                                            (4)

Command (3) will check the Python module example scripts, and command
(4) will run the Python module unit tests.

======================================================================

As of 20-Oct-05, these make targets support the following packages:

    run-examples:   epetra, epetraext, aztecoo, ifpack, amesos, ml,
                    nox, didasko, galeri

    run-tests:      epetra, epetraext, aztecoo, ifpack, amesos, ml,
                    nox, didasko, galeri

    run-pyexamples: epetra, epetraext, aztecoo, ifpack, amesos, ml,
                    nox, didasko, galeri

    run-pytests:    epetra, epetraext, new_package, nox, galeri
