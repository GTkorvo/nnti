The Trilinos Project is an effort to facilitate the design, development, 
integration and ongoing support of mathematical software libraries within an 
object-oriented framework for the solution of large-scale, complex multi-physics 
engineering and scientific problems.  Trilinos addresses two fundamental issues 
of developing software for these problems: (i) Providing a streamlined process 
and set of tools for development of new algorithmic implementations and (ii) 
promoting interoperability of independently developed software.  

A unique design feature of Trilinos is its focus on packages.  A Trilinos 
package is an integral unit usually developed by a small team of experts in a 
particular algorithms area such as algebraic preconditioners, nonlinear solvers, 
etc.  Each package is self-contained with its own development team, requirements 
and users. Trilinos uses a two-level design strategy that respects and supports 
package autonomy. Although Trilinos offers services to packages and mechanisms 
for package interoperability, package requirements are minimal. 

Here we present the overall Trilinos design.  We describe how our use of 
abstract interfaces with default concrete implementations of these interfaces 
provides us with full functionality and flexibility.  Finally, we discuss the 
services that Trilinos provides to a prospective package and how these services 
are used by various packages.  
