PROJECT(Trilinos)
SET(TRILINOS_VERSION "9.0d")

SET(CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

# Setup user options ...
OPTION(BUILD_SHARED_LIBS "Build shared libraries." OFF)
OPTION(TRILINOS_ENABLE_ANASAZI "Build the anasazi package." ON)
OPTION(TRILINOS_ENABLE_EPETRA "Build the epetra package." ON)
OPTION(TRILINOS_ENABLE_TEUCHOS "Build the teuchos package." ON)
OPTION(TRILINOS_ENABLE_MPI "Build packages using MPI for parallel codes." OFF)

# Setup global requirements ...
FIND_LIBRARY(TRILINOS_BLAS_LIBRARY NAMES blas blas_win32 DOC "Path to the BLAS implementation")
FIND_LIBRARY(TRILINOS_LAPACK_LIBRARY NAMES lapack lapack_win32 DOC "Path to the LAPACK implementation")

# Set global options that will be inserted into config.h files ...
# Note: we should really be probing for these values, but will hard-code them in the short-term.
# Most of these should be fine for all but ridiculously out-of-date C++ compilers, but you never know.
#SET(HAVE_ALGORITHM TRUE)
#SET(HAVE_CASSERT TRUE)
#SET(HAVE_CERRNO TRUE)
#SET(HAVE_CLIMITS TRUE)
#SET(HAVE_CMATH TRUE)
#SET(HAVE_COMPLEX TRUE)
#SET(HAVE_CSTDARG TRUE)
#SET(HAVE_CSTDIO TRUE)
#SET(HAVE_CSTDLIB TRUE)
#SET(HAVE_CSTRING TRUE)
#SET(HAVE_IOMANIP TRUE)
#SET(HAVE_IOSTREAM TRUE)
#SET(HAVE_LIST TRUE)
#SET(HAVE_MAP TRUE)
#SET(HAVE_MEMORY TRUE)
#SET(HAVE_MUTABLE TRUE)
#SET(HAVE_NAMESPACES TRUE)
#SET(HAVE_NEW_FOR_SCOPING TRUE)
#SET(HAVE_NUMERIC_LIMITS TRUE)
#SET(HAVE_POW TRUE)
#SET(HAVE_SET TRUE)
#SET(HAVE_SSTREAM TRUE)
#SET(HAVE_STDEXCEPT TRUE)
#SET(HAVE_STRING TRUE)

# MPI related configuration
IF(TRILINOS_ENABLE_MPI)
  INCLUDE(ConfigureMPI)
ENDIF(TRILINOS_ENABLE_MPI)

# Setup Fortran name mangling
IF(CYGWIN)
	SET(F77_FUNC "(name,NAME) name ## _")
	SET(F77_FUNC_ "(name,NAME) name ## __")
ENDIF(CYGWIN)

IF(WIN32)
	SET(F77_FUNC "(name,NAME) name ## _")
	SET(F77_FUNC_ "(name,NAME) NAME")
ENDIF(WIN32)

IF(UNIX AND NOT APPLE)
	SET(F77_FUNC "(name,NAME) name ## _")
	SET(F77_FUNC_ "(name,NAME) name ## _")
ENDIF(UNIX AND NOT APPLE)

IF(APPLE)
	SET(F77_FUNC "(name,NAME) name ## _")
	SET(F77_FUNC_ "(name,NAME) name ## __")
ENDIF(APPLE)

# Setup testing ...
INCLUDE(CTest)

# Setup individual packages ...
ADD_SUBDIRECTORY(packages)

# Setup packaging and distribution ...
SET(CPACK_PACKAGE_DESCRIPTION "Trilinos provides algorithms and technologies for the solution of large-scale, complex multi-physics engineering and scientific problems.")
SET(CPACK_PACKAGE_FILE_NAME "trilinos-setup-${TRILINOS_VERSION}")
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "Trilinos ${TRILINOS_VERSION}")
SET(CPACK_PACKAGE_REGISTRY_KEY "Trilinos ${TRILINOS_VERSION}")
SET(CPACK_PACKAGE_NAME "trilinos")
SET(CPACK_PACKAGE_VENDOR "Sandia National Laboratories")
SET(CPACK_PACKAGE_VERSION "${TRILINOS_VERSION}")
SET(CPACK_SOURCE_GENERATOR "TGZ;TBZ2")
SET(CPACK_SOURCE_FILE_NAME "trilinos-source-${TRILINOS_VERSION}")

IF(WIN32)
	SET(CPACK_GENERATOR "NSIS")
ENDIF(WIN32)

INCLUDE(CPack)

# Hide advanced options ...
MARK_AS_ADVANCED(BUILD_SHARED_LIBS)
MARK_AS_ADVANCED(BUILD_TESTING)
MARK_AS_ADVANCED(CMAKE_BACKWARDS_COMPATIBILITY)
MARK_AS_ADVANCED(CMAKE_BUILD_TYPE)
MARK_AS_ADVANCED(CMAKE_INSTALL_PREFIX)
MARK_AS_ADVANCED(DART_TESTING_TIMEOUT)
MARK_AS_ADVANCED(EXECUTABLE_OUTPUT_PATH)
MARK_AS_ADVANCED(LIBRARY_OUTPUT_PATH)
MARK_AS_ADVANCED(CMAKE_OSX_ARCHITECTURES)
MARK_AS_ADVANCED(CMAKE_OSX_SYSROOT)
MARK_AS_ADVANCED(TRILINOS_BLAS_LIBRARY)
MARK_AS_ADVANCED(TRILINOS_LAPACK_LIBRARY)

