INCLUDE(ParseVariableArguments)
INCLUDE(AppendSet)


FUNCTION(TRIBITS_ADD_LIBRARY LIBRARY_NAME)

  PARSE_ARGUMENTS(
    PARSE #prefix
    "HEADERS;NOINSTALLHEADERS;SOURCES;DEPLIBS;IMPORTEDLIBS;DEFINES" # Lists
    "TESTONLY;NO_INSTALL_LIB_OR_HEADERS;CUDALIBRARY" #Options
    ${ARGN} # Remaining arguments passed in
    )

    ADD_LIBRARY(${LIBRARY_NAME}-static STATIC ${PARSE_HEADERS} ${PARSE_NOINSTALLHEADERS}
        ${PARSE_SOURCES})
    SET_TARGET_PROPERTIES(${LIBRARY_NAME}-static PROPERTIES OUTPUT_NAME "${LIBRARY_NAME}" )
    SET_TARGET_PROPERTIES(${LIBRARY_NAME}-static PROPERTIES PREFIX "lib" LINKER_LANGUAGE C)
    add_library(${LIBRARY_NAME} SHARED ${PARSE_HEADERS} ${PARSE_NOINSTALLHEADERS}
        ${PARSE_SOURCES})
    SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES LINKER_LANGUAGE C)

    TARGET_LINK_LIBRARIES(${LIBRARY_NAME}  ${DEPLIBS})
    TARGET_LINK_LIBRARIES(${LIBRARY_NAME}-static  ${DEPLIBS})

    # Add to the install target

    SET(INSTALL_LIB ON)
    SET(INSTALL_HEADERS ON)
    SET(APPEND_LIB_AND_HEADERS_TO_PACKAGE ON)

    IF (INSTALL_LIB)
      SET_PROPERTY(TARGET ${LIBRARY_NAME} PROPERTY INSTALL_RPATH
        "${CMAKE_INSTALL_PREFIX}/${${PROJECT_NAME}_INSTALL_LIB_DIR}")
      INSTALL(
        TARGETS ${LIBRARY_NAME} ${LIBRARY_NAME}-static
        EXPORT ${PROJECT_NAME}
          RUNTIME DESTINATION bin
          LIBRARY DESTINATION lib
          ARCHIVE DESTINATION lib
          COMPONENT ${PACKAGE_NAME}
        )
    ENDIF()

    IF (INSTALL_HEADERS)
      INSTALL(
        FILES ${PARSE_HEADERS}
        DESTINATION include
        COMPONENT ${PACKAGE_NAME}
        )
    ENDIF()

ENDFUNCTION()
