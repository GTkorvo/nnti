[Done] Convert to use distutils
    [Done] Check local installation
    [Done] Update CVS repository

[Done] Get working on Linux

[Done] Remove byteCompile script and usage

[Done] Move pyLocate.py to pyLocate

[Done] Use distutils to find include and build directories
    [Done] Change in pyLocate
    [Done] Change common.mk to use new pyLocate
    [Done] Change setup.py to use new pyLocate
    [Done] Change test/setpath.py to use pyLocate

[Done] Change code to properly define PY_ARRAY_UNIQUE_SYMBOL and
       NO_IMPORT_ARRAY, according to NumPy standards

****** Clean up interface between Numeric arrays, double *'s and Epetra
       objects.
    [Done] Write Epetra_NumPyVector class, that inherits from
           Epetra_Vector, but also has a PyArrayObject pointer, and
           both point to same contiguous data
    [Done] Move Epetra module to RawEpetra
    [Done] Write new Epetra module that redefines Vector class to
    	   inherit from UserArray and Epetra_NumPyVector classes
        ++++++ Epetra_MultiVector
        [Done] Epetra_Vector
        ++++++ Epetra_SerialDenseVector
        ++++++ Epetra_SerialDenseMatrix
        ++++++ Epetra_IntVector
        ++++++ Epetra_IntSerialDenseVector
        ++++++ Epetra_IntSerialDenseMatrix
    ------ Protect Epetra.{Vector,...} against changing array attribute
    ------ Use typemaps to change (double *) or (int *) arguments to
           Numeric arrays

****** Get rid of extraneous C++ code
    [Done] CallbackVectorLoadTest
    [Done] PyObjectHolder
    ------ Epetra_VectorHelper
    ------ NumPyWrapper
    ------ NumPyArray

[Done] Change test scripts to use unittest python module
    [Done] testNonContiguous.py
    [Done] testSerialDense.py
    [Done] testParameter.py
    [Done] testStatusTest.py
    [Done] testEpetraExt.py

****** Make testEpetra more extensive for Epetra.Vector

[Done] Change -c swig option to -noruntime

[Done] Re-wrap Epetra_MultiVector::Print() method

[Done] Get rid of NOX_Parameter_List warnings

[Done] Move NOX_Epetra into NOX directory
    [Done] NOX_Epetra.i -> NOX/Epetra.i
    [Done] Callback.{cxx,h}
    [Done] PyInterface.{cxx,h}

[Done] Inside setup.py, change NOX Extensions to have NOX_ prefix

****** Wrap Epetra_Flops class

****** Have PyInterface automatically set the associated attribute in the
       Problem class, or come up with a cleaner solution.

****** Treat int arrays the same way as double arrays.  That is, convert
       int NumPy arrays to int * the same way double NumPy arrays are
       converted to double *.
    ------ Clean up %typemap(in) (int * Indices)

****** Upgrade PyTrilinos to become a Trilinos package
    [Done] Copy to Trilinos repository
    [Done] Create configure.ac
    [Done] Create Makefile.am's
    [Done] Change to recognize separate source and build directories
    [Done] Change SWIG invocations to use local Trilinos include
           directories
    [Done] Change setup.py to look in local Trilinos source
           directories for libraries
    [Done] Get test scripts to work from build directory
    ------ Check for presence and version of python
    ------ Check for presence and version of Numeric
    ------ Check for presence and version of SWIG
    ------ Check for MPI/serial
    ------ Put in hooks for enabling and disabling modules
    [Done] Have Makefile create setup.txt with python dictionary
    [Done] Change setup.py to use FLIBS configure variable

****** Remove SWIG requirement for distribution
    ------ Save *_wrap.cxx files in repository

****** Move individual package modules to corresponding directories
    ------ Prototype with new_package
    [Done] Epetra
    ------ EpetraExt
    [Done] NOX

==================================================
Summer, 2005, List of Project Tasks (Tentative)

* Complete wrapping of Epetra
  - Epetra_MpiComm() and parallelization
  - Other classes
  - Interfacing with python Numeric
  - Unit tests

* Move python modules to package directories
  - new_package
  - epetraext

* Documentation
  - Manual: differences in C++/python implementations
  - Automatic: moving doxygen comments to python source

* Autotools
  - Check for python
  - Check for swig
  - Check for Numeric
  - Check for MPI/serial
  - Make swig a requirement for developers only

* Software quality
  - Dependencies
  - Unit/regression tests on different platforms
  - Trilinos test harness

* Complete wrapping other modules
  - EpetraExt
  - NOX
  - Unit tests

* Start wrapping new modules
  - Teuchos
  - AztecOO
  - Anasazi
  - Ifpack
  - ML
  - LOCA (with Eric Phipps)
  - etc.

==================================================
