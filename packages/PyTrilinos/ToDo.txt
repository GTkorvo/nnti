=====================
PyTrilinos To Do List
=====================

==================================================
Summer, 2007, List of Project Tasks (Tentative)

* Complete wrapping of Epetra
  - Other classes
  - Interfacing with python Numeric
  - Unit tests
  - Examples

* Documentation
  - Manual: differences in C++/python implementations
  - Automatic: can we use doxygen with interface files?
  - Evaluation of pydoc, happydoc, etc. for generating web pages
  - Users Manual

* Software quality
  - Unit/regression tests on different platforms
  - Trilinos test harness

* Complete wrapping other modules
  - EpetraExt
  - NOX
  - LOCA (with Eric Phipps)
  - Unit tests
  - Examples

* Start wrapping new modules
  - Anasazi (with Heidi Thornquist)
  - Thyra (with Ross Bartlett)
  - etc.

==================================================

Completed Tasks

[Done] Convert to use distutils
    [Done] Check local installation
    [Done] Update CVS repository

[Done] Get working on Linux

[Done] Remove byteCompile script and usage

[Done] Move pyLocate.py to pyLocate

[Done] Use distutils to find include and build directories
    [Done] Change in pyLocate
    [Done] Change common.mk to use new pyLocate
    [Done] Change setup.py to use new pyLocate
    [Done] Change test/setpath.py to use pyLocate

[Done] Change code to properly define PY_ARRAY_UNIQUE_SYMBOL and
       NO_IMPORT_ARRAY, according to NumPy standards

[Done] Change test scripts to use unittest python module
    [Done] testNonContiguous.py
    [Done] testSerialDense.py
    [Done] testParameter.py
    [Done] testStatusTest.py
    [Done] testEpetraExt.py

[Done] Change -c swig option to -noruntime

[Done] Re-wrap Epetra_MultiVector::Print() method

[Done] Get rid of NOX_Parameter_List warnings

[Done] Move NOX_Epetra into NOX directory
    [Done] NOX_Epetra.i -> NOX/Epetra.i
    [Done] Callback.{cxx,h}
    [Done] PyInterface.{cxx,h}

[Done] Inside setup.py, change NOX Extensions to have NOX_ prefix

[Done] Upgrade PyTrilinos to become a Trilinos package
    [Done] Copy to Trilinos repository
    [Done] Create configure.ac
    [Done] Create Makefile.am's
    [Done] Change to recognize separate source and build directories
    [Done] Change SWIG invocations to use local Trilinos include
           directories
    [Done] Change setup.py to look in local Trilinos source
           directories for libraries
    [Done] Get test scripts to work from build directory
    [Done] Check for presence and version of python
    [Done] Check for presence and version of Numeric
    [Done] Check for presence and version of SWIG
    [Done] Put in hooks for enabling and disabling modules
    [Done] Have Makefile create setup.txt with python dictionary
    [Done] Change setup.py to use FLIBS configure variable

[Done] Move individual package modules to corresponding directories
    [Done] Prototype with new_package
    [Done] Epetra
    [Done] EpetraExt
    [Done] NOX (Eric)
    [Done] LOCA (Eric)

[Done] Have PyTrilinos package install a correct __init__.py

[Done] Wrap Epetra_Flops class

[Done] Parallelization (wrap Epetra_MpiComm)

[Done] Clean up interface between Numeric arrays, double *'s and Epetra
       objects.
    [Done] Write Epetra_NumPyVector class, that inherits from
           Epetra_Vector, but also has a PyArrayObject pointer, and
           both point to same contiguous data
    [Done] Move Epetra module to RawEpetra
    [Done] Write new Epetra module that redefines Vector class to
    	   inherit from UserArray and Epetra_NumPyVector classes
        [Done] Epetra_MultiVector
        [Done] Epetra_Vector
        [Done] Epetra_SerialDenseVector
        [Done] Epetra_SerialDenseMatrix
        [Done] Epetra_IntVector
        [Done] Epetra_IntSerialDenseVector
        [Done] Epetra_IntSerialDenseMatrix
    [Done] Protect Epetra.{Vector,...} against changing array attribute
    [Done] Use typemaps to change (double *) or (int *) arguments to
           Numeric arrays

[Done] Treat int arrays the same way as double arrays.  That is, convert
       int NumPy arrays to int * the same way double NumPy arrays are
       converted to double *.
    [Done] Clean up %typemap(in) (int * Indices)

[Done] Make testVector.py unit test more extensive

[Done] Have PyInterface automatically set the associated attribute in
       the Problem class, or come up with a cleaner solution.  Cleaner
       solution: NOX.Epetra.Interface.Required (and Jacobian and
       Preconditioner) can now be inherited from directly in python
       and their computeF(), etc., methods are called back
       automatically.

[Done] Handle conversion between C++ iostreams and python files
    [Done] FileStream class
    [Done] Implement exceptions

[Done] Improve package documentation strings

[Done] Get rid of extraneous C++ code
    [Done] CallbackVectorLoadTest
    [Done] PyObjectHolder
    [Done] Epetra_VectorHelper
    [Done] NumPyWrapper
    [Done] NumPyArray
    [Done] Epetra_DArray
    [Done] Epetra_IArray
    [Done] PyEpetra_Utils.h

