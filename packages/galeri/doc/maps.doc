/*!  \page gl_GalleryMaps Creating an Epetra_Map

A simple code that creates an Epetra_Map is as follows. First, we need to
include \c Galeri_Maps.h, and the required Epetra and Teuchos header files. 

\verbatim
#include "Galeri_Maps.h"
#ifdef HAVE_MPI
#include "mpi.h"
#include "Epetra_MpiComm.h"
#else
#include "Epetra_SerialComm.h"
#endif
#include "Epetra_Map.h"
#include "Teuchos_ParameterList.hpp"
\endverbatim

Then, the basic instructions to create a linear map are:

\verbatim
Epetra_Map* Map = 0; // the map to be created
Teuchos::ParameterList List; // empty right now
string MapType = "Linear";

Map = Galeri.CreateMap(MapType, Comm, List);
\endverbatim

where \c Comm is an \c Epetra_Comm object. The created Epetra_Map must be
free'd by the user using \c delete.

In the previous example, \c List was empty. Let us see know how to create a
map which requires parameters: a Cartesian 2D map. This map contains \c nx
\f$\times\f$ \c ny nodes, and corresponds to a Cartesian grid in the (X,Y)
plane. The nodes are ordered along the X-axis first. If more than one
processor is used, then the grid is partitioned into \c mx \f$\times\f$ \c my
subdomains. Note that \c mx \f$\times\f$ \c my must be the total number of
processors in the communicator.

\verbatim
Epetra_Map* Map = 0; // the map to be created
Teuchos::ParameterList List;
List.set("nx", 10); // 10 nodes along the X-axis
List.set("ny", 10); // 10 nodes along the Y-axis
List.set("mx", 2);  // 2 subdomains along the X-axis
List.set("my", 2);  // 2 subdomains along the Y-axis
string MapType = "Cartesian2D";

Map = Galeri.CreateMap(MapType, Comm, List);
\endverbatim

Other valid choices for \c MapType are:
- \c Cartesian3D: for maps corresponding to a 3D Cartesian grid. The number of
  nodes along the Z-axis is specified by parameter \c nz, and the number of
  subdomains along the Z-axis by parameter \c mz;
- \c Interlaced: Elements are subdivided so that element \c i is
    assigned to process \c i\%NumProcs
- \c Random: assigns each node to a random processor.
*/

/*! \page gl_maps_ex Usage of CreateMap()
  
File galeri/example/Maps.cpp

\include Map.cpp

*/
