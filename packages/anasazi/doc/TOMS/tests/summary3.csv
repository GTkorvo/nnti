Matrix Size ,       OP*x time     ,,       Solve Time    ,,        Restarting   ,,Solve-Operator,            ,    ARPACK  , Anasazi ,    ARPACK  , Anasazi ,    ARPACK  , Anasazi ,ARPACK,Anasazi2500,0.010,0.018,0.470,0.541,0.070,0.099,0.460,0.52310000,0.030,0.082,2.140,2.160,0.130,0.136,2.110,2.07862500,0.400,0.620,17.620,16.570,0.750,0.411,17.220,15.950250000,1.340,2.347,72.030,69.760,2.930,1.386,70.690,67.4131000000,4.750,8.726,279.580,264.800,11.000,5.177,274.830,256.074all times are in seconds,,,,,,,,bases were built 4 times to length 100,,,,,,,,OP*x occurred 370 times for both methods,,,,,,,,OP is a 2-D Laplacian,,,,,,,,anasazi operator was a sparse matrix vector product,,,,,,,,arpack operator was an implicit application of the same operator,,,,,,,,"intel 9.1 compilers with ""-O2 -xP"" on  Intel Pentium D, 3GHz, 1MB L2 cache, 2GB main, Linux/FC5"Anasazi uses BlockKrylovSchurSolMgr with problem marked as non-HermitianARPACK uses dnaupdboth methods orthogonalize new vectors against the full basis and form a Hessenberg matrixboth methods used DKGS orthogonalization"the full Hessenberg matrix (not the ""symmetric"" tridiagonal part) is used for the projected Schur solve"both methods are restarted with 10 vectors
