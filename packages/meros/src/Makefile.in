# Makefile.in generated by automake 1.7.6 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# @HEADER

# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside meros. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
ACLOCAL = @ACLOCAL@
ALTERNATE_AR = @ALTERNATE_AR@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
HAVE_MPI_FALSE = @HAVE_MPI_FALSE@
HAVE_MPI_TRUE = @HAVE_MPI_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
USE_ALTERNATE_AR_FALSE = @USE_ALTERNATE_AR_FALSE@
USE_ALTERNATE_AR_TRUE = @USE_ALTERNATE_AR_TRUE@
VERSION = @VERSION@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@

#
# There is, at present, no distinction between most of the categories, 
# other than those which start with EXTRA_.  All categories which do not
# start with EXTRA_ are included in all builds.  Categories which start
# with EXTRA_ are included in some builds (typically controlled by 
# --with-xyz or --without-xyz)
#
CORE_H = \
          $(srcdir)/Aztec2TSF.h                         \
	  $(srcdir)/ReadPetra.h                         \
          $(srcdir)/TSFLinearOperator2EpetraRowMatrix.h \
          $(srcdir)/KayLoghinRightOperatorSource.h      \
          $(srcdir)/DiagRightOperatorSource.h           \
          $(srcdir)/BJBRightOperatorSource.h            \
          $(srcdir)/RightBlockNSOperatorSource.h        \
          $(srcdir)/Vbr2Petra.h                         \
          $(srcdir)/KayLoghinSchurFactory.h             \
	  $(srcdir)/Epetra2TSFutils.h                   \
          $(srcdir)/DiagSchurFactory.h                  \
          $(srcdir)/BJBSchurFactory.h                   \
          $(srcdir)/SchurFactoryBase.h                  \
	  $(srcdir)/SimpleOperatorSource.h               \
	  $(srcdir)/SimpleCOperatorSource.h               \
	  $(srcdir)/SimpleSchurFactory.h                 \
	  $(srcdir)/SimpleBlockPreconditionerFactory.h   \
	  $(srcdir)/SimpleCBlockPreconditionerFactory.h   \
          $(srcdir)/NSBlockPreconditionerFactory.h       \
	  $(srcdir)/SchurFactory.h                      


CORE = \
          $(srcdir)/Aztec2TSF.cpp                         \
	  $(srcdir)/ReadPetra.cpp                         \
          $(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp \
          $(srcdir)/KayLoghinRightOperatorSource.cpp      \
	  $(srcdir)/Epetra2TSFutils.cpp     	          \
          $(srcdir)/DiagRightOperatorSource.cpp           \
          $(srcdir)/BJBRightOperatorSource.cpp            \
          $(srcdir)/RightBlockNSOperatorSource.cpp        \
          $(srcdir)/Vbr2Petra.cpp                         \
          $(srcdir)/KayLoghinSchurFactory.cpp             \
          $(srcdir)/DiagSchurFactory.cpp                  \
          $(srcdir)/BJBSchurFactory.cpp                   \
          $(srcdir)/SchurFactoryBase.cpp                  \
          $(srcdir)/NSBlockPreconditionerFactory.cpp      \
	  $(srcdir)/SimpleCBlockPreconditionerFactory.cpp   \
	  $(srcdir)/SimpleBlockPreconditionerFactory.cpp   \
          $(srcdir)/SimpleOperatorSource.cpp               \
	  $(srcdir)/SimpleCOperatorSource.cpp		   \
	  $(srcdir)/SimpleSchurFactory.cpp                 \
          $(srcdir)/SchurFactory.cpp                      


UTIL_H = 

UTIL = 

ENUM_H = 

UNIPROC_H = 

UNIPROC = 

SERIAL_H = 

SERIAL = 

#
#  Files which are included in select builds are typically have
#  names that start with EXTRA
#
#  EXTRA_MPI is control by --with-mpi and --without-mpi which is
#  set up by TAC_ARC_CONFIG_MPI 
#
EXTRA_MPI_H = 

EXTRA_MPI = 

@HAVE_MPI_FALSE@MPI_H = 

@HAVE_MPI_TRUE@MPI_H = \
@HAVE_MPI_TRUE@	$(EXTRA_MPI_H)

@HAVE_MPI_FALSE@MPI = 
@HAVE_MPI_TRUE@MPI = \
@HAVE_MPI_TRUE@	$(EXTRA_MPI)


USERBASE_H = 

LANG_WRAPS_H = 

LANG_WRAPS = 

DIST_H = 

DIST = 

COMP_H = 

COMP = 

AM_CPPFLAGS = -I$(top_srcdir)/../epetra/src               \
              -I$(top_builddir)/../epetra/src             \
              -I$(top_srcdir)/../TSF/src/LinearOperators  \
              -I$(top_srcdir)/../TSF/src/Implementations  \
              -I$(top_srcdir)/../TSF/src/LinearProblem    \
              -I$(top_srcdir)/../TSF/src/Vectors          \
              -I$(top_srcdir)/../TSF/src/Support          \
              -I$(top_srcdir)/../TSF/src/Preconditioners  \
              -I$(top_srcdir)/../TSF/src/VectorSpaces     \
              -I$(top_srcdir)/../TSF/src/LinearSolvers    \
              -I$(top_srcdir)/../aztecoo/src              \
              -I$(top_srcdir)/../ml/src/                  \
              -I$(top_srcdir)/../ml/src/Coarsen           \
              -I$(top_srcdir)/../ml/src/Comm              \
              -I$(top_srcdir)/../ml/src/FEGrid            \
              -I$(top_srcdir)/../ml/src/Include           \
              -I$(top_srcdir)/../ml/src/Krylov            \
              -I$(top_srcdir)/../ml/src/Main              \
              -I$(top_srcdir)/../ml/src/Operator          \
              -I$(top_srcdir)/../ml/src/Smoother          \
              -I$(top_srcdir)/../ml/src/Utils             \
              -I$(top_builddir)/../TSF/src/LinearOperators  \
              -I$(top_builddir)/../TSF/src/Implementations  \
              -I$(top_builddir)/../TSF/src/LinearProblem    \
              -I$(top_builddir)/../TSF/src/Vectors          \
              -I$(top_builddir)/../TSF/src/Support          \
              -I$(top_builddir)/../TSF/src/Preconditioners  \
              -I$(top_builddir)/../TSF/src/VectorSpaces     \
              -I$(top_builddir)/../TSF/src/LinearSolvers    \
              -I$(top_builddir)/../aztecoo/src              \
              -I$(top_builddir)/../ml/src/                  \
              -I$(top_builddir)/../ml/src/Coarsen           \
              -I$(top_builddir)/../ml/src/Comm              \
              -I$(top_builddir)/../ml/src/FEGrid            \
              -I$(top_builddir)/../ml/src/Include           \
              -I$(top_builddir)/../ml/src/Krylov            \
              -I$(top_builddir)/../ml/src/Main              \
              -I$(top_builddir)/../ml/src/Operator          \
              -I$(top_builddir)/../ml/src/Smoother          \
              -I$(top_builddir)/../ml/src/Utils



# ------------------------------------------------------------------------
# meros  library specifications
# ------------------------------------------------------------------------
MEROS_LIB = libmeros.a

MEROS_H = \
	$(CORE_H) \
	$(UTIL_H) \
	$(ENUM_H) \
	$(UNIPROC_H) \
	$(SERIAL_H) \
	$(USERBASE_H) \
	$(DIST_H) \
	$(COMP_H) \
	$(MPI_H)


libmeros_a_SOURCES = \
	$(CORE) \
	$(UTIL) \
	$(UNIPROC) \
	$(SERIAL) \
	$(DIST) \
	$(COMP) \
	$(MPI)



#We need the following to support separate build directories
#AM_CPPFLAGS=-I$(builddir)/src
# ------------------------------------------------------------------------
# For using a special archiver
# ------------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@libbpack_a_AR = $(ALTERNATE_AR)

@USE_ALTERNATE_AR_FALSE@libmeros_a_AR = $(AR) cru


# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# ------------------------------------------------------------------------
libmeros_a_LIBADD = $(XTRALDADD)


# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------
lib_LIBRARIES = $(MEROS_LIB)


# ------------------------------------------------------------------------
# List of all headers to install in $(pkgincludedir)
# ------------------------------------------------------------------------
pkginclude_HEADERS = $(MEROS_H) 


# ------------------------------------------------------------------------
# Special stuff to install in our special $(pkgexecincludedir)
# ------------------------------------------------------------------------

# SPECIAL NOTE: meros_config.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.
pkgexecincludedir = $(exec_prefix)/include/meros
nodist_pkgexecinclude_HEADERS = meros_config.h


# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = meros_config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libmeros_a_DEPENDENCIES =
am__libmeros_a_SOURCES_DIST = $(srcdir)/Aztec2TSF.cpp \
	$(srcdir)/ReadPetra.cpp \
	$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp \
	$(srcdir)/KayLoghinRightOperatorSource.cpp \
	$(srcdir)/Epetra2TSFutils.cpp \
	$(srcdir)/DiagRightOperatorSource.cpp \
	$(srcdir)/BJBRightOperatorSource.cpp \
	$(srcdir)/RightBlockNSOperatorSource.cpp \
	$(srcdir)/Vbr2Petra.cpp $(srcdir)/KayLoghinSchurFactory.cpp \
	$(srcdir)/DiagSchurFactory.cpp $(srcdir)/BJBSchurFactory.cpp \
	$(srcdir)/SchurFactoryBase.cpp \
	$(srcdir)/NSBlockPreconditionerFactory.cpp \
	$(srcdir)/SimpleCBlockPreconditionerFactory.cpp \
	$(srcdir)/SimpleBlockPreconditionerFactory.cpp \
	$(srcdir)/SimpleOperatorSource.cpp \
	$(srcdir)/SimpleCOperatorSource.cpp \
	$(srcdir)/SimpleSchurFactory.cpp $(srcdir)/SchurFactory.cpp
am__objects_1 = Aztec2TSF.$(OBJEXT) ReadPetra.$(OBJEXT) \
	TSFLinearOperator2EpetraRowMatrix.$(OBJEXT) \
	KayLoghinRightOperatorSource.$(OBJEXT) \
	Epetra2TSFutils.$(OBJEXT) DiagRightOperatorSource.$(OBJEXT) \
	BJBRightOperatorSource.$(OBJEXT) \
	RightBlockNSOperatorSource.$(OBJEXT) Vbr2Petra.$(OBJEXT) \
	KayLoghinSchurFactory.$(OBJEXT) DiagSchurFactory.$(OBJEXT) \
	BJBSchurFactory.$(OBJEXT) SchurFactoryBase.$(OBJEXT) \
	NSBlockPreconditionerFactory.$(OBJEXT) \
	SimpleCBlockPreconditionerFactory.$(OBJEXT) \
	SimpleBlockPreconditionerFactory.$(OBJEXT) \
	SimpleOperatorSource.$(OBJEXT) SimpleCOperatorSource.$(OBJEXT) \
	SimpleSchurFactory.$(OBJEXT) SchurFactory.$(OBJEXT)
am__objects_2 =
@HAVE_MPI_TRUE@am__objects_3 = $(am__objects_2)
@HAVE_MPI_FALSE@am__objects_3 =
am_libmeros_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_2) $(am__objects_2) $(am__objects_2) \
	$(am__objects_2) $(am__objects_3)
libmeros_a_OBJECTS = $(am_libmeros_a_OBJECTS)

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Aztec2TSF.Po \
@AMDEP_TRUE@	./$(DEPDIR)/BJBRightOperatorSource.Po \
@AMDEP_TRUE@	./$(DEPDIR)/BJBSchurFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DiagRightOperatorSource.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DiagSchurFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra2TSFutils.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KayLoghinRightOperatorSource.Po \
@AMDEP_TRUE@	./$(DEPDIR)/KayLoghinSchurFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/NSBlockPreconditionerFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ReadPetra.Po \
@AMDEP_TRUE@	./$(DEPDIR)/RightBlockNSOperatorSource.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SchurFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SchurFactoryBase.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleBlockPreconditionerFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleCBlockPreconditionerFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleCOperatorSource.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleOperatorSource.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SimpleSchurFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Vbr2Petra.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
DIST_SOURCES = $(am__libmeros_a_SOURCES_DIST)
HEADERS = $(nodist_pkgexecinclude_HEADERS) $(pkginclude_HEADERS)

DIST_COMMON = README $(pkginclude_HEADERS) Makefile.am Makefile.in \
	meros_config.h.in
SOURCES = $(libmeros_a_SOURCES)

all: meros_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

meros_config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/meros_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/meros_config.h

$(srcdir)/meros_config.h.in: @MAINTAINER_MODE_TRUE@ $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/meros_config.h.in

distclean-hdr:
	-rm -f meros_config.h stamp-h1

AR = ar
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libmeros.a: $(libmeros_a_OBJECTS) $(libmeros_a_DEPENDENCIES) 
	-rm -f libmeros.a
	$(libmeros_a_AR) libmeros.a $(libmeros_a_OBJECTS) $(libmeros_a_LIBADD)
	$(RANLIB) libmeros.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Aztec2TSF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BJBRightOperatorSource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BJBSchurFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DiagRightOperatorSource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DiagSchurFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra2TSFutils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KayLoghinRightOperatorSource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/KayLoghinSchurFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NSBlockPreconditionerFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReadPetra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RightBlockNSOperatorSource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SchurFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SchurFactoryBase.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleBlockPreconditionerFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleCBlockPreconditionerFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleCOperatorSource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleOperatorSource.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SimpleSchurFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Vbr2Petra.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

Aztec2TSF.o: $(srcdir)/Aztec2TSF.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Aztec2TSF.o -MD -MP -MF "$(DEPDIR)/Aztec2TSF.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Aztec2TSF.o `test -f '$(srcdir)/Aztec2TSF.cpp' || echo '$(srcdir)/'`$(srcdir)/Aztec2TSF.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Aztec2TSF.Tpo" "$(DEPDIR)/Aztec2TSF.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Aztec2TSF.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Aztec2TSF.cpp' object='Aztec2TSF.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Aztec2TSF.Po' tmpdepfile='$(DEPDIR)/Aztec2TSF.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Aztec2TSF.o `test -f '$(srcdir)/Aztec2TSF.cpp' || echo '$(srcdir)/'`$(srcdir)/Aztec2TSF.cpp

Aztec2TSF.obj: $(srcdir)/Aztec2TSF.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Aztec2TSF.obj -MD -MP -MF "$(DEPDIR)/Aztec2TSF.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Aztec2TSF.obj `if test -f '$(srcdir)/Aztec2TSF.cpp'; then $(CYGPATH_W) '$(srcdir)/Aztec2TSF.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Aztec2TSF.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Aztec2TSF.Tpo" "$(DEPDIR)/Aztec2TSF.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Aztec2TSF.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Aztec2TSF.cpp' object='Aztec2TSF.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Aztec2TSF.Po' tmpdepfile='$(DEPDIR)/Aztec2TSF.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Aztec2TSF.obj `if test -f '$(srcdir)/Aztec2TSF.cpp'; then $(CYGPATH_W) '$(srcdir)/Aztec2TSF.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Aztec2TSF.cpp'; fi`

ReadPetra.o: $(srcdir)/ReadPetra.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ReadPetra.o -MD -MP -MF "$(DEPDIR)/ReadPetra.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ReadPetra.o `test -f '$(srcdir)/ReadPetra.cpp' || echo '$(srcdir)/'`$(srcdir)/ReadPetra.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ReadPetra.Tpo" "$(DEPDIR)/ReadPetra.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ReadPetra.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/ReadPetra.cpp' object='ReadPetra.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ReadPetra.Po' tmpdepfile='$(DEPDIR)/ReadPetra.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ReadPetra.o `test -f '$(srcdir)/ReadPetra.cpp' || echo '$(srcdir)/'`$(srcdir)/ReadPetra.cpp

ReadPetra.obj: $(srcdir)/ReadPetra.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ReadPetra.obj -MD -MP -MF "$(DEPDIR)/ReadPetra.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o ReadPetra.obj `if test -f '$(srcdir)/ReadPetra.cpp'; then $(CYGPATH_W) '$(srcdir)/ReadPetra.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/ReadPetra.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/ReadPetra.Tpo" "$(DEPDIR)/ReadPetra.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/ReadPetra.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/ReadPetra.cpp' object='ReadPetra.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/ReadPetra.Po' tmpdepfile='$(DEPDIR)/ReadPetra.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ReadPetra.obj `if test -f '$(srcdir)/ReadPetra.cpp'; then $(CYGPATH_W) '$(srcdir)/ReadPetra.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/ReadPetra.cpp'; fi`

TSFLinearOperator2EpetraRowMatrix.o: $(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFLinearOperator2EpetraRowMatrix.o -MD -MP -MF "$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o TSFLinearOperator2EpetraRowMatrix.o `test -f '$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Tpo" "$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp' object='TSFLinearOperator2EpetraRowMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Po' tmpdepfile='$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFLinearOperator2EpetraRowMatrix.o `test -f '$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp

TSFLinearOperator2EpetraRowMatrix.obj: $(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFLinearOperator2EpetraRowMatrix.obj -MD -MP -MF "$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o TSFLinearOperator2EpetraRowMatrix.obj `if test -f '$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Tpo" "$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp' object='TSFLinearOperator2EpetraRowMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.Po' tmpdepfile='$(DEPDIR)/TSFLinearOperator2EpetraRowMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFLinearOperator2EpetraRowMatrix.obj `if test -f '$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp'; then $(CYGPATH_W) '$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/TSFLinearOperator2EpetraRowMatrix.cpp'; fi`

KayLoghinRightOperatorSource.o: $(srcdir)/KayLoghinRightOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KayLoghinRightOperatorSource.o -MD -MP -MF "$(DEPDIR)/KayLoghinRightOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KayLoghinRightOperatorSource.o `test -f '$(srcdir)/KayLoghinRightOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/KayLoghinRightOperatorSource.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/KayLoghinRightOperatorSource.Tpo" "$(DEPDIR)/KayLoghinRightOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KayLoghinRightOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/KayLoghinRightOperatorSource.cpp' object='KayLoghinRightOperatorSource.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KayLoghinRightOperatorSource.Po' tmpdepfile='$(DEPDIR)/KayLoghinRightOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KayLoghinRightOperatorSource.o `test -f '$(srcdir)/KayLoghinRightOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/KayLoghinRightOperatorSource.cpp

KayLoghinRightOperatorSource.obj: $(srcdir)/KayLoghinRightOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KayLoghinRightOperatorSource.obj -MD -MP -MF "$(DEPDIR)/KayLoghinRightOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KayLoghinRightOperatorSource.obj `if test -f '$(srcdir)/KayLoghinRightOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/KayLoghinRightOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/KayLoghinRightOperatorSource.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/KayLoghinRightOperatorSource.Tpo" "$(DEPDIR)/KayLoghinRightOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KayLoghinRightOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/KayLoghinRightOperatorSource.cpp' object='KayLoghinRightOperatorSource.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KayLoghinRightOperatorSource.Po' tmpdepfile='$(DEPDIR)/KayLoghinRightOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KayLoghinRightOperatorSource.obj `if test -f '$(srcdir)/KayLoghinRightOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/KayLoghinRightOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/KayLoghinRightOperatorSource.cpp'; fi`

Epetra2TSFutils.o: $(srcdir)/Epetra2TSFutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra2TSFutils.o -MD -MP -MF "$(DEPDIR)/Epetra2TSFutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Epetra2TSFutils.o `test -f '$(srcdir)/Epetra2TSFutils.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra2TSFutils.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra2TSFutils.Tpo" "$(DEPDIR)/Epetra2TSFutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Epetra2TSFutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra2TSFutils.cpp' object='Epetra2TSFutils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra2TSFutils.Po' tmpdepfile='$(DEPDIR)/Epetra2TSFutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra2TSFutils.o `test -f '$(srcdir)/Epetra2TSFutils.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra2TSFutils.cpp

Epetra2TSFutils.obj: $(srcdir)/Epetra2TSFutils.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra2TSFutils.obj -MD -MP -MF "$(DEPDIR)/Epetra2TSFutils.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Epetra2TSFutils.obj `if test -f '$(srcdir)/Epetra2TSFutils.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra2TSFutils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra2TSFutils.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra2TSFutils.Tpo" "$(DEPDIR)/Epetra2TSFutils.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Epetra2TSFutils.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Epetra2TSFutils.cpp' object='Epetra2TSFutils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra2TSFutils.Po' tmpdepfile='$(DEPDIR)/Epetra2TSFutils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra2TSFutils.obj `if test -f '$(srcdir)/Epetra2TSFutils.cpp'; then $(CYGPATH_W) '$(srcdir)/Epetra2TSFutils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Epetra2TSFutils.cpp'; fi`

DiagRightOperatorSource.o: $(srcdir)/DiagRightOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DiagRightOperatorSource.o -MD -MP -MF "$(DEPDIR)/DiagRightOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o DiagRightOperatorSource.o `test -f '$(srcdir)/DiagRightOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/DiagRightOperatorSource.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/DiagRightOperatorSource.Tpo" "$(DEPDIR)/DiagRightOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/DiagRightOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/DiagRightOperatorSource.cpp' object='DiagRightOperatorSource.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DiagRightOperatorSource.Po' tmpdepfile='$(DEPDIR)/DiagRightOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DiagRightOperatorSource.o `test -f '$(srcdir)/DiagRightOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/DiagRightOperatorSource.cpp

DiagRightOperatorSource.obj: $(srcdir)/DiagRightOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DiagRightOperatorSource.obj -MD -MP -MF "$(DEPDIR)/DiagRightOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o DiagRightOperatorSource.obj `if test -f '$(srcdir)/DiagRightOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/DiagRightOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/DiagRightOperatorSource.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/DiagRightOperatorSource.Tpo" "$(DEPDIR)/DiagRightOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/DiagRightOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/DiagRightOperatorSource.cpp' object='DiagRightOperatorSource.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DiagRightOperatorSource.Po' tmpdepfile='$(DEPDIR)/DiagRightOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DiagRightOperatorSource.obj `if test -f '$(srcdir)/DiagRightOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/DiagRightOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/DiagRightOperatorSource.cpp'; fi`

BJBRightOperatorSource.o: $(srcdir)/BJBRightOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BJBRightOperatorSource.o -MD -MP -MF "$(DEPDIR)/BJBRightOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o BJBRightOperatorSource.o `test -f '$(srcdir)/BJBRightOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/BJBRightOperatorSource.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BJBRightOperatorSource.Tpo" "$(DEPDIR)/BJBRightOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/BJBRightOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/BJBRightOperatorSource.cpp' object='BJBRightOperatorSource.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/BJBRightOperatorSource.Po' tmpdepfile='$(DEPDIR)/BJBRightOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BJBRightOperatorSource.o `test -f '$(srcdir)/BJBRightOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/BJBRightOperatorSource.cpp

BJBRightOperatorSource.obj: $(srcdir)/BJBRightOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BJBRightOperatorSource.obj -MD -MP -MF "$(DEPDIR)/BJBRightOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o BJBRightOperatorSource.obj `if test -f '$(srcdir)/BJBRightOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/BJBRightOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/BJBRightOperatorSource.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BJBRightOperatorSource.Tpo" "$(DEPDIR)/BJBRightOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/BJBRightOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/BJBRightOperatorSource.cpp' object='BJBRightOperatorSource.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/BJBRightOperatorSource.Po' tmpdepfile='$(DEPDIR)/BJBRightOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BJBRightOperatorSource.obj `if test -f '$(srcdir)/BJBRightOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/BJBRightOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/BJBRightOperatorSource.cpp'; fi`

RightBlockNSOperatorSource.o: $(srcdir)/RightBlockNSOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RightBlockNSOperatorSource.o -MD -MP -MF "$(DEPDIR)/RightBlockNSOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o RightBlockNSOperatorSource.o `test -f '$(srcdir)/RightBlockNSOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/RightBlockNSOperatorSource.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/RightBlockNSOperatorSource.Tpo" "$(DEPDIR)/RightBlockNSOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/RightBlockNSOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/RightBlockNSOperatorSource.cpp' object='RightBlockNSOperatorSource.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/RightBlockNSOperatorSource.Po' tmpdepfile='$(DEPDIR)/RightBlockNSOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RightBlockNSOperatorSource.o `test -f '$(srcdir)/RightBlockNSOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/RightBlockNSOperatorSource.cpp

RightBlockNSOperatorSource.obj: $(srcdir)/RightBlockNSOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT RightBlockNSOperatorSource.obj -MD -MP -MF "$(DEPDIR)/RightBlockNSOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o RightBlockNSOperatorSource.obj `if test -f '$(srcdir)/RightBlockNSOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/RightBlockNSOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/RightBlockNSOperatorSource.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/RightBlockNSOperatorSource.Tpo" "$(DEPDIR)/RightBlockNSOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/RightBlockNSOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/RightBlockNSOperatorSource.cpp' object='RightBlockNSOperatorSource.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/RightBlockNSOperatorSource.Po' tmpdepfile='$(DEPDIR)/RightBlockNSOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o RightBlockNSOperatorSource.obj `if test -f '$(srcdir)/RightBlockNSOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/RightBlockNSOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/RightBlockNSOperatorSource.cpp'; fi`

Vbr2Petra.o: $(srcdir)/Vbr2Petra.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vbr2Petra.o -MD -MP -MF "$(DEPDIR)/Vbr2Petra.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Vbr2Petra.o `test -f '$(srcdir)/Vbr2Petra.cpp' || echo '$(srcdir)/'`$(srcdir)/Vbr2Petra.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Vbr2Petra.Tpo" "$(DEPDIR)/Vbr2Petra.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Vbr2Petra.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Vbr2Petra.cpp' object='Vbr2Petra.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Vbr2Petra.Po' tmpdepfile='$(DEPDIR)/Vbr2Petra.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vbr2Petra.o `test -f '$(srcdir)/Vbr2Petra.cpp' || echo '$(srcdir)/'`$(srcdir)/Vbr2Petra.cpp

Vbr2Petra.obj: $(srcdir)/Vbr2Petra.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Vbr2Petra.obj -MD -MP -MF "$(DEPDIR)/Vbr2Petra.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o Vbr2Petra.obj `if test -f '$(srcdir)/Vbr2Petra.cpp'; then $(CYGPATH_W) '$(srcdir)/Vbr2Petra.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Vbr2Petra.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Vbr2Petra.Tpo" "$(DEPDIR)/Vbr2Petra.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/Vbr2Petra.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Vbr2Petra.cpp' object='Vbr2Petra.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Vbr2Petra.Po' tmpdepfile='$(DEPDIR)/Vbr2Petra.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Vbr2Petra.obj `if test -f '$(srcdir)/Vbr2Petra.cpp'; then $(CYGPATH_W) '$(srcdir)/Vbr2Petra.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/Vbr2Petra.cpp'; fi`

KayLoghinSchurFactory.o: $(srcdir)/KayLoghinSchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KayLoghinSchurFactory.o -MD -MP -MF "$(DEPDIR)/KayLoghinSchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KayLoghinSchurFactory.o `test -f '$(srcdir)/KayLoghinSchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/KayLoghinSchurFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/KayLoghinSchurFactory.Tpo" "$(DEPDIR)/KayLoghinSchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KayLoghinSchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/KayLoghinSchurFactory.cpp' object='KayLoghinSchurFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KayLoghinSchurFactory.Po' tmpdepfile='$(DEPDIR)/KayLoghinSchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KayLoghinSchurFactory.o `test -f '$(srcdir)/KayLoghinSchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/KayLoghinSchurFactory.cpp

KayLoghinSchurFactory.obj: $(srcdir)/KayLoghinSchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT KayLoghinSchurFactory.obj -MD -MP -MF "$(DEPDIR)/KayLoghinSchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o KayLoghinSchurFactory.obj `if test -f '$(srcdir)/KayLoghinSchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/KayLoghinSchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/KayLoghinSchurFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/KayLoghinSchurFactory.Tpo" "$(DEPDIR)/KayLoghinSchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/KayLoghinSchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/KayLoghinSchurFactory.cpp' object='KayLoghinSchurFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/KayLoghinSchurFactory.Po' tmpdepfile='$(DEPDIR)/KayLoghinSchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o KayLoghinSchurFactory.obj `if test -f '$(srcdir)/KayLoghinSchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/KayLoghinSchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/KayLoghinSchurFactory.cpp'; fi`

DiagSchurFactory.o: $(srcdir)/DiagSchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DiagSchurFactory.o -MD -MP -MF "$(DEPDIR)/DiagSchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o DiagSchurFactory.o `test -f '$(srcdir)/DiagSchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/DiagSchurFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/DiagSchurFactory.Tpo" "$(DEPDIR)/DiagSchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/DiagSchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/DiagSchurFactory.cpp' object='DiagSchurFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DiagSchurFactory.Po' tmpdepfile='$(DEPDIR)/DiagSchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DiagSchurFactory.o `test -f '$(srcdir)/DiagSchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/DiagSchurFactory.cpp

DiagSchurFactory.obj: $(srcdir)/DiagSchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DiagSchurFactory.obj -MD -MP -MF "$(DEPDIR)/DiagSchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o DiagSchurFactory.obj `if test -f '$(srcdir)/DiagSchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/DiagSchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/DiagSchurFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/DiagSchurFactory.Tpo" "$(DEPDIR)/DiagSchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/DiagSchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/DiagSchurFactory.cpp' object='DiagSchurFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/DiagSchurFactory.Po' tmpdepfile='$(DEPDIR)/DiagSchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DiagSchurFactory.obj `if test -f '$(srcdir)/DiagSchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/DiagSchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/DiagSchurFactory.cpp'; fi`

BJBSchurFactory.o: $(srcdir)/BJBSchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BJBSchurFactory.o -MD -MP -MF "$(DEPDIR)/BJBSchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o BJBSchurFactory.o `test -f '$(srcdir)/BJBSchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/BJBSchurFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BJBSchurFactory.Tpo" "$(DEPDIR)/BJBSchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/BJBSchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/BJBSchurFactory.cpp' object='BJBSchurFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/BJBSchurFactory.Po' tmpdepfile='$(DEPDIR)/BJBSchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BJBSchurFactory.o `test -f '$(srcdir)/BJBSchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/BJBSchurFactory.cpp

BJBSchurFactory.obj: $(srcdir)/BJBSchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BJBSchurFactory.obj -MD -MP -MF "$(DEPDIR)/BJBSchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o BJBSchurFactory.obj `if test -f '$(srcdir)/BJBSchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/BJBSchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/BJBSchurFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/BJBSchurFactory.Tpo" "$(DEPDIR)/BJBSchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/BJBSchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/BJBSchurFactory.cpp' object='BJBSchurFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/BJBSchurFactory.Po' tmpdepfile='$(DEPDIR)/BJBSchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BJBSchurFactory.obj `if test -f '$(srcdir)/BJBSchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/BJBSchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/BJBSchurFactory.cpp'; fi`

SchurFactoryBase.o: $(srcdir)/SchurFactoryBase.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SchurFactoryBase.o -MD -MP -MF "$(DEPDIR)/SchurFactoryBase.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SchurFactoryBase.o `test -f '$(srcdir)/SchurFactoryBase.cpp' || echo '$(srcdir)/'`$(srcdir)/SchurFactoryBase.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SchurFactoryBase.Tpo" "$(DEPDIR)/SchurFactoryBase.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SchurFactoryBase.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SchurFactoryBase.cpp' object='SchurFactoryBase.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SchurFactoryBase.Po' tmpdepfile='$(DEPDIR)/SchurFactoryBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SchurFactoryBase.o `test -f '$(srcdir)/SchurFactoryBase.cpp' || echo '$(srcdir)/'`$(srcdir)/SchurFactoryBase.cpp

SchurFactoryBase.obj: $(srcdir)/SchurFactoryBase.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SchurFactoryBase.obj -MD -MP -MF "$(DEPDIR)/SchurFactoryBase.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SchurFactoryBase.obj `if test -f '$(srcdir)/SchurFactoryBase.cpp'; then $(CYGPATH_W) '$(srcdir)/SchurFactoryBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SchurFactoryBase.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SchurFactoryBase.Tpo" "$(DEPDIR)/SchurFactoryBase.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SchurFactoryBase.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SchurFactoryBase.cpp' object='SchurFactoryBase.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SchurFactoryBase.Po' tmpdepfile='$(DEPDIR)/SchurFactoryBase.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SchurFactoryBase.obj `if test -f '$(srcdir)/SchurFactoryBase.cpp'; then $(CYGPATH_W) '$(srcdir)/SchurFactoryBase.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SchurFactoryBase.cpp'; fi`

NSBlockPreconditionerFactory.o: $(srcdir)/NSBlockPreconditionerFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSBlockPreconditionerFactory.o -MD -MP -MF "$(DEPDIR)/NSBlockPreconditionerFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o NSBlockPreconditionerFactory.o `test -f '$(srcdir)/NSBlockPreconditionerFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/NSBlockPreconditionerFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NSBlockPreconditionerFactory.Tpo" "$(DEPDIR)/NSBlockPreconditionerFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/NSBlockPreconditionerFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/NSBlockPreconditionerFactory.cpp' object='NSBlockPreconditionerFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/NSBlockPreconditionerFactory.Po' tmpdepfile='$(DEPDIR)/NSBlockPreconditionerFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSBlockPreconditionerFactory.o `test -f '$(srcdir)/NSBlockPreconditionerFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/NSBlockPreconditionerFactory.cpp

NSBlockPreconditionerFactory.obj: $(srcdir)/NSBlockPreconditionerFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NSBlockPreconditionerFactory.obj -MD -MP -MF "$(DEPDIR)/NSBlockPreconditionerFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o NSBlockPreconditionerFactory.obj `if test -f '$(srcdir)/NSBlockPreconditionerFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/NSBlockPreconditionerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/NSBlockPreconditionerFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NSBlockPreconditionerFactory.Tpo" "$(DEPDIR)/NSBlockPreconditionerFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/NSBlockPreconditionerFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/NSBlockPreconditionerFactory.cpp' object='NSBlockPreconditionerFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/NSBlockPreconditionerFactory.Po' tmpdepfile='$(DEPDIR)/NSBlockPreconditionerFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NSBlockPreconditionerFactory.obj `if test -f '$(srcdir)/NSBlockPreconditionerFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/NSBlockPreconditionerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/NSBlockPreconditionerFactory.cpp'; fi`

SimpleCBlockPreconditionerFactory.o: $(srcdir)/SimpleCBlockPreconditionerFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleCBlockPreconditionerFactory.o -MD -MP -MF "$(DEPDIR)/SimpleCBlockPreconditionerFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleCBlockPreconditionerFactory.o `test -f '$(srcdir)/SimpleCBlockPreconditionerFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleCBlockPreconditionerFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleCBlockPreconditionerFactory.Tpo" "$(DEPDIR)/SimpleCBlockPreconditionerFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleCBlockPreconditionerFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleCBlockPreconditionerFactory.cpp' object='SimpleCBlockPreconditionerFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleCBlockPreconditionerFactory.Po' tmpdepfile='$(DEPDIR)/SimpleCBlockPreconditionerFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleCBlockPreconditionerFactory.o `test -f '$(srcdir)/SimpleCBlockPreconditionerFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleCBlockPreconditionerFactory.cpp

SimpleCBlockPreconditionerFactory.obj: $(srcdir)/SimpleCBlockPreconditionerFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleCBlockPreconditionerFactory.obj -MD -MP -MF "$(DEPDIR)/SimpleCBlockPreconditionerFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleCBlockPreconditionerFactory.obj `if test -f '$(srcdir)/SimpleCBlockPreconditionerFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleCBlockPreconditionerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleCBlockPreconditionerFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleCBlockPreconditionerFactory.Tpo" "$(DEPDIR)/SimpleCBlockPreconditionerFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleCBlockPreconditionerFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleCBlockPreconditionerFactory.cpp' object='SimpleCBlockPreconditionerFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleCBlockPreconditionerFactory.Po' tmpdepfile='$(DEPDIR)/SimpleCBlockPreconditionerFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleCBlockPreconditionerFactory.obj `if test -f '$(srcdir)/SimpleCBlockPreconditionerFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleCBlockPreconditionerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleCBlockPreconditionerFactory.cpp'; fi`

SimpleBlockPreconditionerFactory.o: $(srcdir)/SimpleBlockPreconditionerFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleBlockPreconditionerFactory.o -MD -MP -MF "$(DEPDIR)/SimpleBlockPreconditionerFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleBlockPreconditionerFactory.o `test -f '$(srcdir)/SimpleBlockPreconditionerFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleBlockPreconditionerFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleBlockPreconditionerFactory.Tpo" "$(DEPDIR)/SimpleBlockPreconditionerFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleBlockPreconditionerFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleBlockPreconditionerFactory.cpp' object='SimpleBlockPreconditionerFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleBlockPreconditionerFactory.Po' tmpdepfile='$(DEPDIR)/SimpleBlockPreconditionerFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleBlockPreconditionerFactory.o `test -f '$(srcdir)/SimpleBlockPreconditionerFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleBlockPreconditionerFactory.cpp

SimpleBlockPreconditionerFactory.obj: $(srcdir)/SimpleBlockPreconditionerFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleBlockPreconditionerFactory.obj -MD -MP -MF "$(DEPDIR)/SimpleBlockPreconditionerFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleBlockPreconditionerFactory.obj `if test -f '$(srcdir)/SimpleBlockPreconditionerFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleBlockPreconditionerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleBlockPreconditionerFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleBlockPreconditionerFactory.Tpo" "$(DEPDIR)/SimpleBlockPreconditionerFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleBlockPreconditionerFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleBlockPreconditionerFactory.cpp' object='SimpleBlockPreconditionerFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleBlockPreconditionerFactory.Po' tmpdepfile='$(DEPDIR)/SimpleBlockPreconditionerFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleBlockPreconditionerFactory.obj `if test -f '$(srcdir)/SimpleBlockPreconditionerFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleBlockPreconditionerFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleBlockPreconditionerFactory.cpp'; fi`

SimpleOperatorSource.o: $(srcdir)/SimpleOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleOperatorSource.o -MD -MP -MF "$(DEPDIR)/SimpleOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleOperatorSource.o `test -f '$(srcdir)/SimpleOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleOperatorSource.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleOperatorSource.Tpo" "$(DEPDIR)/SimpleOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleOperatorSource.cpp' object='SimpleOperatorSource.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleOperatorSource.Po' tmpdepfile='$(DEPDIR)/SimpleOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleOperatorSource.o `test -f '$(srcdir)/SimpleOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleOperatorSource.cpp

SimpleOperatorSource.obj: $(srcdir)/SimpleOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleOperatorSource.obj -MD -MP -MF "$(DEPDIR)/SimpleOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleOperatorSource.obj `if test -f '$(srcdir)/SimpleOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleOperatorSource.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleOperatorSource.Tpo" "$(DEPDIR)/SimpleOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleOperatorSource.cpp' object='SimpleOperatorSource.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleOperatorSource.Po' tmpdepfile='$(DEPDIR)/SimpleOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleOperatorSource.obj `if test -f '$(srcdir)/SimpleOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleOperatorSource.cpp'; fi`

SimpleCOperatorSource.o: $(srcdir)/SimpleCOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleCOperatorSource.o -MD -MP -MF "$(DEPDIR)/SimpleCOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleCOperatorSource.o `test -f '$(srcdir)/SimpleCOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleCOperatorSource.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleCOperatorSource.Tpo" "$(DEPDIR)/SimpleCOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleCOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleCOperatorSource.cpp' object='SimpleCOperatorSource.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleCOperatorSource.Po' tmpdepfile='$(DEPDIR)/SimpleCOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleCOperatorSource.o `test -f '$(srcdir)/SimpleCOperatorSource.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleCOperatorSource.cpp

SimpleCOperatorSource.obj: $(srcdir)/SimpleCOperatorSource.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleCOperatorSource.obj -MD -MP -MF "$(DEPDIR)/SimpleCOperatorSource.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleCOperatorSource.obj `if test -f '$(srcdir)/SimpleCOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleCOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleCOperatorSource.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleCOperatorSource.Tpo" "$(DEPDIR)/SimpleCOperatorSource.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleCOperatorSource.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleCOperatorSource.cpp' object='SimpleCOperatorSource.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleCOperatorSource.Po' tmpdepfile='$(DEPDIR)/SimpleCOperatorSource.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleCOperatorSource.obj `if test -f '$(srcdir)/SimpleCOperatorSource.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleCOperatorSource.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleCOperatorSource.cpp'; fi`

SimpleSchurFactory.o: $(srcdir)/SimpleSchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleSchurFactory.o -MD -MP -MF "$(DEPDIR)/SimpleSchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleSchurFactory.o `test -f '$(srcdir)/SimpleSchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleSchurFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleSchurFactory.Tpo" "$(DEPDIR)/SimpleSchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleSchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleSchurFactory.cpp' object='SimpleSchurFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleSchurFactory.Po' tmpdepfile='$(DEPDIR)/SimpleSchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleSchurFactory.o `test -f '$(srcdir)/SimpleSchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/SimpleSchurFactory.cpp

SimpleSchurFactory.obj: $(srcdir)/SimpleSchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SimpleSchurFactory.obj -MD -MP -MF "$(DEPDIR)/SimpleSchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SimpleSchurFactory.obj `if test -f '$(srcdir)/SimpleSchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleSchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleSchurFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SimpleSchurFactory.Tpo" "$(DEPDIR)/SimpleSchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SimpleSchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SimpleSchurFactory.cpp' object='SimpleSchurFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SimpleSchurFactory.Po' tmpdepfile='$(DEPDIR)/SimpleSchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SimpleSchurFactory.obj `if test -f '$(srcdir)/SimpleSchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/SimpleSchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SimpleSchurFactory.cpp'; fi`

SchurFactory.o: $(srcdir)/SchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SchurFactory.o -MD -MP -MF "$(DEPDIR)/SchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SchurFactory.o `test -f '$(srcdir)/SchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/SchurFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SchurFactory.Tpo" "$(DEPDIR)/SchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SchurFactory.cpp' object='SchurFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SchurFactory.Po' tmpdepfile='$(DEPDIR)/SchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SchurFactory.o `test -f '$(srcdir)/SchurFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/SchurFactory.cpp

SchurFactory.obj: $(srcdir)/SchurFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SchurFactory.obj -MD -MP -MF "$(DEPDIR)/SchurFactory.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o SchurFactory.obj `if test -f '$(srcdir)/SchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/SchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SchurFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/SchurFactory.Tpo" "$(DEPDIR)/SchurFactory.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/SchurFactory.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/SchurFactory.cpp' object='SchurFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/SchurFactory.Po' tmpdepfile='$(DEPDIR)/SchurFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SchurFactory.obj `if test -f '$(srcdir)/SchurFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/SchurFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/SchurFactory.cpp'; fi`
uninstall-info-am:
nodist_pkgexecincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-nodist_pkgexecincludeHEADERS: $(nodist_pkgexecinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgexecincludedir)
	@list='$(nodist_pkgexecinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(nodist_pkgexecincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgexecincludedir)/$$f"; \
	  $(nodist_pkgexecincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgexecincludedir)/$$f; \
	done

uninstall-nodist_pkgexecincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkgexecinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgexecincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgexecincludedir)/$$f; \
	done
pkgincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(pkgincludedir)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f"; \
	  $(pkgincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(pkgincludedir)/$$f; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(pkgincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(pkgincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) meros_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) meros_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) meros_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) meros_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS) meros_config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(pkgexecincludedir) $(DESTDIR)$(pkgincludedir)
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-exec-am: install-libLIBRARIES \
	install-nodist_pkgexecincludeHEADERS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-nodist_pkgexecincludeHEADERS \
	uninstall-pkgincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-depend distclean-generic distclean-hdr distclean-tags \
	distdir dvi dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-libLIBRARIES install-man \
	install-nodist_pkgexecincludeHEADERS install-pkgincludeHEADERS \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_pkgexecincludeHEADERS \
	uninstall-pkgincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
