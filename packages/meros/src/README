# ************************************************************************
# 
#              Meros: Segregated Preconditioning Package
#                 Copyright (2004) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# Questions? Contact Michael A. Heroux (maherou@sandia.gov) 
# 
# ************************************************************************


   /* basic block preconditioner code */
   NSBlockPreconditionerFactory.h
   NSBlockPreconditionerFactory.cpp

   /* Operator sources for the block preconditioner using only */
   /* the right factor (DU of the LDU factorization).          */
   /* I.e., the Kay & Loghin style preconditioners will use    */
   /* these.                                                   */
   RightBlockNSOperatorSource.h
   RightBlockNSOperatorSource.cpp

   /* Operator sources specific to the Kay and Loghin   */
   /* version of the preconditioner.                    */
   KayLoghinRightOperatorSource.h
   KayLoghinRightOperatorSource.cpp

   /* Factories to build the Schur complement approximations. */
   SchurFactoryBase.h
   SchurFactoryBase.cpp
   SchurFactory.h
   SchurFactory.cpp

   /* Factories to build the Kay and Loghin specific */
   /* Schur complement approximations. */
   KayLoghinSchurFactory.cpp
   KayLoghinSchurFactory.h





/*****************/
To run meros/examples/saddle_kayloghin.cpp:

   From example directory in your build tree, make a link to the data
   directory in the source tree: meros/example/data
   cd to build tree meros/example/saddle_kayloghin
   make
   ./saddle_kayloghin.exe







