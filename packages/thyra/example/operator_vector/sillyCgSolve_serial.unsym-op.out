
Echoing the command-line:

c:\_mystuff\PROJECTS\Trilinos.base\BUILDS\INTEL\SERIAL_DEBUG\packages\thyra\example\operator_vector\sillyCgSolve_serial.exe --echo-command-line --unsym-op 


***
*** Running silly CG solver using scalar type = 'float' ...
***

Constructing tridiagonal matrix A of dimension = 500 and diagonal multiplier = 1.001 ...

Testing the constructed linear operator A ...
  
  *** Entering LinearOpTester<float,float>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<float>{rangeDim=500,domainDim=500}
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==false: Skipping check of symmetry ...
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<float,float>::check(...)

Setting up normal equations for unsymmetric system A^H*(A*x-b) => new A*x = b ...

Testing the linear operator used with the solve ...
  
  *** Entering LinearOpTester<float,float>::check(op,...) ...
  
  describe op:
    Thyra::DefaultMultipliedLinearOp<float>{numOps = 2}
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==true: Performing check of symmetry ... passed!
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<float,float>::check(...)

Solving the linear system with sillyCgSolve(...) ...
  
  Starting CG solver ...
  
  describe A:
    Thyra::DefaultMultipliedLinearOp<float>{rangeDim=500,domainDim=500}
      numOps=2
      Constituent LinearOpBase objects for M = Op[0]*...*Op[numOps-1]:
        Op[0] =
          DefaultScaledAdjointLinearOp<float>{rangeDim=500,domainDim=500}
            overallScalar=1.000000e+000
            overallTransp=CONJTRANS
            Constituent transformations:
              transp=CONJTRANS
                origOp =
                  ExampleTridiagSerialLinearOp<float>{rangeDim=500,domainDim=500}
        Op[1] =
          ExampleTridiagSerialLinearOp<float>{rangeDim=500,domainDim=500}
  
  describe b:
    DefaultSpmdVector<float>{dim=500}
  
  describe x:
    DefaultSpmdVector<float>{dim=500}
  
  Iter = 0, ||b-A*x||/||b-A*x0|| = 1.000000e+000
  Iter = 4, ||b-A*x||/||b-A*x0|| = 8.968294e-005

Checking the residual ourselves ...
  
  ||b-A*x||/||b|| = 3.804354e-003/4.242347e+001 = 8.967568e-005 <= 10.0*tolerance = 9.999999e-004: passed

Total time = 1.000000e-002 sec

***
*** Running silly CG solver using scalar type = 'double' ...
***

Constructing tridiagonal matrix A of dimension = 500 and diagonal multiplier = 1.001000e+000 ...

Testing the constructed linear operator A ...
  
  *** Entering LinearOpTester<double,double>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<double>{rangeDim=500,domainDim=500}
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==false: Skipping check of symmetry ...
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<double,double>::check(...)

Setting up normal equations for unsymmetric system A^H*(A*x-b) => new A*x = b ...

Testing the linear operator used with the solve ...
  
  *** Entering LinearOpTester<double,double>::check(op,...) ...
  
  describe op:
    Thyra::DefaultMultipliedLinearOp<double>{numOps = 2}
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==true: Performing check of symmetry ... passed!
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<double,double>::check(...)

Solving the linear system with sillyCgSolve(...) ...
  
  Starting CG solver ...
  
  describe A:
    Thyra::DefaultMultipliedLinearOp<double>{rangeDim=500,domainDim=500}
      numOps=2
      Constituent LinearOpBase objects for M = Op[0]*...*Op[numOps-1]:
        Op[0] =
          DefaultScaledAdjointLinearOp<double>{rangeDim=500,domainDim=500}
            overallScalar=1.000000e+000
            overallTransp=CONJTRANS
            Constituent transformations:
              transp=CONJTRANS
                origOp =
                  ExampleTridiagSerialLinearOp<double>{rangeDim=500,domainDim=500}
        Op[1] =
          ExampleTridiagSerialLinearOp<double>{rangeDim=500,domainDim=500}
  
  describe b:
    DefaultSpmdVector<double>{dim=500}
  
  describe x:
    DefaultSpmdVector<double>{dim=500}
  
  Iter = 0, ||b-A*x||/||b-A*x0|| = 1.000000e+000
  Iter = 6, ||b-A*x||/||b-A*x0|| = 3.765055e-005

Checking the residual ourselves ...
  
  ||b-A*x||/||b|| = 1.236975e-003/3.285412e+001 = 3.765055e-005 <= 10.0*tolerance = 1.000000e-003: passed

Total time = 1.000000e-002 sec

Congratulations! All of the tests checked out!
