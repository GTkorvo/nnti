/*! \mainpage RTOp : Vector Reduction Transformation Operators

This doxygen collection contains documentation to RTOp
(reduction/transformation operators) which provides the basic mechanism for
implementing vector operations in a flexible and efficient manner.

\section RTOpPack_software_sec Software Documented in this Doxygen Collection

<ul>

<li> <b>Base interfaces and related code</b>: By far the most important
members in this collection is the templated abstract interface for vector
reduction/transformation operators <tt>RTOpPack::RTOpT</tt>, the abstract
reduction object interface <tt>RTOpPack::ReductTarget</tt>.  The types
<tt>RTOpPack::SubVectorT</tt> and <tt>RTOpPack::MutableSubVectorT</tt>
represent chunks of non-<tt>const</tt> and <tt>const</tt> vector data
presented to <tt>RTOpPack::RTOpT::apply_op()</tt>.

<li><b>Support code</b>: Several different types of support code is also
provided.

  <ul>

  <li><b>MPI Support</b>: The templated functions <tt>RTOpPack::MPI_apply_op()</tt> help
  handle MPI communication when using RTOp.  These function rely on the traits 
  classes <tt>Teuchos::RawMPITraits</tt> and <tt>Teuchos::PrimitiveTypeTraits</tt> to
  perform all of the marshaling and unmarshaling of data.  The function <tt>RTOp_parallel_calc_overlap()</tt>
  is used by vector subclasses to figure out what processors have data associated with
  a particular RTOp application.

  <li><b>Support for creating concrete %RTOPPack::RTOpT subclasses</b>:  Several node subclasses
  and utility macros are provided to help in creating concrete implementations of <tt>%RTOpPack::RTOpT</tt>
  and these are documented \ref RTOpPack_RTOpTHelpers_grp "here".

  <li><b>Support for client/server and master/slave configurations</b>: The
  class <tt>RTOpPack::RTOpServer</tt> stores and returns
  <tt>Teuchos::AbstractFactory</tt> objects for creating <tt>%RTOpPack::RTOpT</tt> objects
  just given a name.

  </ul>

<li><b>Library of RTOp subclasses</b>: Many different RTOp subclasses are also
provided.  While this list is not meant to be (nor does it need to be)
exhaustive, it does meet the needs of many different types of ANAs.

  <ul>

  <li><b>RTOp subclasses for all <tt>Scalar</tt> types</b>

    <ul>

    <li> <b>Reduction operators</b>

      <ul>
      <li><tt>RTOpPack::ROpCountNanInf</tt>
      <li><tt>RTOpPack::ROpDotProd</tt>
      <li><tt>RTOpPack::ROpGetSubVector</tt>
      <li><tt>RTOpPack::ROpNorm1</tt>
      <li><tt>RTOpPack::ROpNorm2</tt>
      <li><tt>RTOpPack::ROpNormInf</tt>
      <li><tt>RTOpPack::ROpSum</tt>
      <li><tt>RTOpPack::ROpWeightedNorm2</tt>
      </ul>

    <li> <b>Transformation operators</b>

      <ul>
      <li><tt>RTOpPack::TOpAXPY</tt>
      <li><tt>RTOpPack::TOpAbs</tt>
      <li><tt>RTOpPack::TOpAddScalar</tt>
      <li><tt>RTOpPack::TOpAssignScalar</tt>
      <li><tt>RTOpPack::TOpAssignVectors</tt>
      <li><tt>RTOpPack::TOpEleWiseDivide</tt>
      <li><tt>RTOpPack::TOpEleWiseProd</tt>
      <li><tt>RTOpPack::TOpLinearCombination</tt>
      <li><tt>RTOpPack::TOpRandomize</tt>
      <li><tt>RTOpPack::TOpReciprocal</tt>
      <li><tt>RTOpPack::TOpScaleVector</tt>
      <li><tt>RTOpPack::TOpSetSubVector</tt>
      </ul>

    </ul>

  <li><b>RTOp subclasses for <tt>Scalar</tt> types where <tt>Teuchos::ScalarTraits<Scalar>::isComparable == true</tt></b>

      <ul>
      <li><tt>RTOpPack::ROpMax</tt>
      <li><tt>RTOpPack::ROpMaxIndex</tt>
      <li><tt>RTOpPack::ROpMaxIndexLessThanBound</tt>
      <li><tt>RTOpPack::ROpMin</tt>
      <li><tt>RTOpPack::ROpMinIndex</tt>
      <li><tt>RTOpPack::ROpMinIndexGreaterThanBound</tt>
      </ul>

  </ul>

</ul>

\section RTOpPack_links_to_other_documentation_sec Links to Other Documentation Collections

Below are links to other related documentation:

<ul>

<li><b><a href="../../../../../doc/html/index.html">Main Thyra Package
Documentation</a></b>: This is the main documentation page for the %Thyra
package which provides an outline for all %Thyra software.

</ul>
   
*/

/** \defgroup RTOpPack_parallel_helpers_grp Utility code for working in SPMD mode with MPI

These functions are used by implementations of RTOp-compatible vector classes
to use RTOp objects and performed global reductions correctly using MPI.

*/

/** \defgroup RTOpPack_RTOpTHelpers_grp Utility code for creating concrete RTOpPack::RTOpT subclasses.

This utility code makes it easier to define most concrete subclasses of
<tt>RTOpPack::RTOpT</tt>.

*/

/** \defgroup RTOpPack_Client_Server_support_grp Utility interfaces and code for supporting basic client/server and master/slave configurations.

This code allows <tt>RTOpPack::RTOpT</tt> to be reassembled on a server just
given the name of the RTOp subclass and its instance data.

*/
