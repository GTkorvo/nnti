Problems existing in Zoltan.
This file was last updated on $Date$

-------------------------------------------------------------------------------
ERROR CONDITIONS IN ZOLTAN
When a processor returns from Zoltan to the application due to an error
condition, other processors do not necessarily return the same condition.
In fact, other processors may not know that the processor has quit Zoltan,
and may hang in a communication (waiting for a message that is not sent 
due to the error condition).  The parallel error-handling capabilities of
Zoltan will be improved in future releases.
-------------------------------------------------------------------------------
ERROR CONDITIONS IN OCTREE, PARMETIS AND JOSTLE
On failure, OCTREE, ParMETIS and Jostle methods abort rather than return 
error codes.  
-------------------------------------------------------------------------------
HETEROGENEOUS ENVIRONMENTS
Some parts of Zoltan currently assume that basic data types like 
integers and real numbers (floats) have identical representation
on all processors. This may not be true in a heterogeneous
environment. Specifically, the unstructured (irregular) communication
library is unsafe in a heterogeneous environment. This problem
will be corrected in a future release of Zoltan for heterogeneous
systems.
-------------------------------------------------------------------------------
F90 ISSUES
Pacific Sierra Research (PSR) Vastf90 is not currently supported due to bugs 
in the compiler with no known workarounds. It is not known when or if this 
compiler will be supported. 

N.A.Software FortranPlus is not currently supported due to problems with the 
query functions. We anticipate that this problem can be overcome, and support 
will be added soon. 
-------------------------------------------------------------------------------
PROBLEMS EXISTING IN PARMETIS 
(reported to the ParMETIS development team at the University of Minnesota)

Name: tpwgts ignored for small graphs.
Version: ParMETIS 3.0
Symptom: incorrect output (partitioning)
Description:
   When using ParMETIS_V3_PartKway to partition into partitions
   of unequal sizes, the input array tpwgts is ignored and
   uniform-sized patrtitions are computed. This bug shows up when
   (a) the number of vertices is < 10000 and (b) only one weight
   per vertex is given (ncon=1).
Reported: Reported to George Karypis and metis@cs.umn.edu on 2002/10/30.
Status: Acknowledged by GK. He said it will be fixed in a few weeks.


Name: AdaptiveRepart crashes on partless test.
Version: ParMETIS 3.0
Symptom: run-time segmentation violation. 
Description:
   ParMETIS_V3_AdaptiveRepart crashes with a SIGSEGV if
   the input array _part_ contains any value greater then
   the desired number of partitions, nparts. This shows up
   in Zoltan's "partless" test cases. 
Reported: Reported to George Karypis and metis@cs.umn.edu on 2002/12/02.
Status: 


Name: load imbalance tolerance
Version: ParMETIS 2.0
Symptom: missing feature
Description:
   The load imbalance parameter UNBALANCE_FRACTION can
   only be set at compile-time. With Zoltan it is
   necessary to be able to set this parameter at run-time.
Reported: Reported to metis@cs.umn.edu on 19 Aug 1999.
Status: Fixed in version 3.0.


Name: no edges
Version: ParMETIS 2.0
Symptom: segmentation fault at run time
Description:
   ParMETIS crashes if the input graph has no edges and
   ParMETIS_PartKway is called. We suspect all the graph based
   methods crash. From the documentation it is unclear if
   a NULL pointer is a valid input for the adjncy array.
   Apparently, the bug occurs both with NULL as input or
   a valid pointer to an array.
Reported: Reported to metis@cs.umn.edu on 5 Oct 1999.
Status: Fixed in version 3.0.


Name: no vertices
Version: ParMETIS 2.0
Symptom: segmentation fault at run time
Description:
   ParMETIS may crash if a processor owns no vertices.
   The extent of this bug is not known (which methods are affected).
   Again, it is unclear if NULL pointers are valid input.
Reported: Reported to metis@cs.umn.edu on 6 Oct 1999.
Status: George Karypis says it will be fixed in the next release.
        Unclear if it has been fixed in version 3.0.


Name: partgeom bug
Version: ParMETIS 2.0
Symptom: floating point exception
Description:
   For domains where the global delta_x, delta_y, or delta_z (in 3D)
   is zero (e.g., all nodes lie along the y-axis), a floating point
   exception can occur when the partgeom algorithm is used.
Reported: kirk@cs.umn.edu in Jan 2001.
Status: Fixed in version 3.0.

-------------------------------------------------------------------------------

