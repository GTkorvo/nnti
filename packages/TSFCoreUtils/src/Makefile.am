# @HEADER
# @HEADER

MoochoUtilities_SOURCES_H=\
$(srcdir)/MoochoUtilities/AbstractFactory.hpp\
$(srcdir)/MoochoUtilities/AbstractFactoryStd.hpp\
$(srcdir)/MoochoUtilities/Range1D.hpp\
$(srcdir)/MoochoUtilities/StandardAggregationMacros.hpp\
$(srcdir)/MoochoUtilities/StandardCompositionMacros.hpp\
$(srcdir)/MoochoUtilities/StandardCompositionRelationshipsPack.hpp\
$(srcdir)/MoochoUtilities/StandardMemberCompositionMacros.hpp\
$(srcdir)/MoochoUtilities/ThrowException.hpp\
$(srcdir)/MoochoUtilities/WorkspacePack.hpp\
$(srcdir)/MoochoUtilities/dynamic_cast_verbose.hpp\
$(srcdir)/MoochoUtilities/ref_count_ptr.hpp\
$(srcdir)/MoochoUtilities/ref_count_ptr_decl.hpp\
$(srcdir)/MoochoUtilities/ReleaseResource_ref_count_ptr.hpp\
$(srcdir)/MoochoUtilities/ReleaseResource.hpp

MoochoUtilities_SOURCES=\
$(srcdir)/MoochoUtilities/Range1D.cpp\
$(srcdir)/MoochoUtilities/ThrowException.cpp\
$(srcdir)/MoochoUtilities/WorkspacePack.cpp\
$(srcdir)/MoochoUtilities/dynamic_cast_verbose.cpp\
$(srcdir)/MoochoUtilities/ref_count_ptr.cpp

RTOp_C_SOURCES_H=\
$(srcdir)/RTOpPack/RTOp.h\
$(srcdir)/RTOpPack/RTOpToMPI.h\
$(srcdir)/RTOpPack/RTOp_RTOp_C_Cpp.h\
$(srcdir)/RTOpPack/RTOp_SparseSubVector.h\
$(srcdir)/RTOpPack/RTOp_apply_op_mpi.h\
$(srcdir)/RTOpPack/RTOp_apply_op_serial.h\
$(srcdir)/RTOpPack/RTOp_config.h\
$(srcdir)/RTOpPack/RTOp_mpi.h\
$(srcdir)/RTOpPack/RTOp_obj_free_free.h\
$(srcdir)/RTOpPack/RTOp_obj_index_vtbl.h\
$(srcdir)/RTOpPack/RTOp_obj_null_vtbl.h\
$(srcdir)/RTOpPack/RTOp_obj_value_index_vtbl.h\
$(srcdir)/RTOpPack/RTOp_obj_value_value_vtbl.h\
$(srcdir)/RTOpPack/RTOp_obj_value_vtbl.h\
$(srcdir)/RTOpPack/RTOp_obj_values_vtbl.h\
$(srcdir)/RTOpPack/RTOp_parallel_helpers.h\
$(srcdir)/RTOpPack/RTOp_reduct_max_value.h\
$(srcdir)/RTOpPack/RTOp_reduct_min_value.h\
$(srcdir)/RTOpPack/RTOp_reduct_sum_value.h\
$(srcdir)/RTOpPack/RTOp_reduct_sum_values.h

RTOp_C_SOURCES=\
$(srcdir)/RTOpPack/RTOp.c\
$(srcdir)/RTOpPack/RTOpToMPI.c\
$(srcdir)/RTOpPack/RTOp_SparseSubVector.c\
$(srcdir)/RTOpPack/RTOp_apply_op_mpi.c\
$(srcdir)/RTOpPack/RTOp_apply_op_serial.c\
$(srcdir)/RTOpPack/RTOp_mpi.c\
$(srcdir)/RTOpPack/RTOp_obj_free_free.c\
$(srcdir)/RTOpPack/RTOp_obj_index_vtbl.c\
$(srcdir)/RTOpPack/RTOp_obj_null_vtbl.c\
$(srcdir)/RTOpPack/RTOp_obj_value_index_vtbl.c\
$(srcdir)/RTOpPack/RTOp_obj_value_value_vtbl.c\
$(srcdir)/RTOpPack/RTOp_obj_value_vtbl.c\
$(srcdir)/RTOpPack/RTOp_obj_values_vtbl.c\
$(srcdir)/RTOpPack/RTOp_parallel_helpers.c\
$(srcdir)/RTOpPack/RTOp_reduct_max_value.c\
$(srcdir)/RTOpPack/RTOp_reduct_min_value.c\
$(srcdir)/RTOpPack/RTOp_reduct_sum_value.c\
$(srcdir)/RTOpPack/RTOp_reduct_sum_values.c

RTOp_CXX_SOURCES_H=\
$(srcdir)/RTOpPack/RTOpCpp.hpp\
$(srcdir)/RTOpPack/RTOpCppC.hpp\
$(srcdir)/RTOpPack/RTOpCppDecl.hpp\
$(srcdir)/RTOpPack/RTOpCppToC.hpp\
$(srcdir)/RTOpPack/RTOpCppToMPI.hpp\
$(srcdir)/RTOpPack/RTOpFactoryTmpl.hpp\
$(srcdir)/RTOpPack/RTOpPackTypes.hpp\
$(srcdir)/RTOpPack/RTOp_get_reduct_op.hpp\
$(srcdir)/RTOpPack/print_sub_vector.hpp\
$(srcdir)/RTOpPack/check_nan_inf.hpp

RTOp_CXX_SOURCES=\
$(srcdir)/RTOpPack/RTOpCppC.cpp\
$(srcdir)/RTOpPack/RTOpCppToC.cpp\
$(srcdir)/RTOpPack/RTOpCppToMPI.cpp\
$(srcdir)/RTOpPack/RTOp_RTOp_C_Cpp.cpp\
$(srcdir)/RTOpPack/print_sub_vector.cpp\
$(srcdir)/RTOpPack/check_nan_inf.cpp


RTOp_STDOPS_SOURCES=\
$(srcdir)/RTOpStdOps/RTOp_ROp_combined_nu_comp_err.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_comp_err_with_mu.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_dot_prod.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_find_nan_inf.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_fraction_to_boundary.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_fraction_to_zero_boundary.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_get_ele.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_get_sub_vector.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_log_bound_barrier.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_max.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_abs_ele.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_inequ_viol.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_near_feas_step.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_rel_step.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_step.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_norms.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_num_bounded.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_num_nonzeros.c\
$(srcdir)/RTOpStdOps/RTOp_ROp_sum.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_add_scalar.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_assign_scalar.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_assign_vectors.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_axpy.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_correct_multipliers.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_ele_wise_divide.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_ele_wise_prod.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_ele_wise_sqrt.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_force_in_bounds.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_inv_of_difference.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_max_abs_vec_scalar.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_max_vec_scalar.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_multiplier_step.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_random_vector.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_scale_vector.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_set_ele.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_set_sub_vector.c\
$(srcdir)/RTOpStdOps/RTOp_TOp_sign.c\
$(srcdir)/RTOpStdOps/init_RTOpStdOpsLib.c

RTOp_STDOPS_SOURCES_H=\
$(srcdir)/RTOpStdOps/RTOp_ROp_combined_nu_comp_err.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_comp_err_with_mu.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_dot_prod.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_find_nan_inf.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_fraction_to_boundary.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_fraction_to_zero_boundary.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_get_ele.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_get_sub_vector.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_log_bound_barrier.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_max.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_abs_ele.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_inequ_viol.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_near_feas_step.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_rel_step.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_max_step.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_norms.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_num_bounded.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_num_nonzeros.h\
$(srcdir)/RTOpStdOps/RTOp_ROp_sum.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_add_scalar.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_assign_scalar.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_assign_vectors.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_axpy.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_correct_multipliers.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_ele_wise_divide.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_ele_wise_prod.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_ele_wise_sqrt.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_force_in_bounds.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_inv_of_difference.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_max_abs_vec_scalar.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_max_vec_scalar.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_multiplier_step.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_random_vector.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_scale_vector.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_set_ele.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_set_sub_vector.h\
$(srcdir)/RTOpStdOps/RTOp_TOp_sign.h





AM_CPPFLAGS = \
  -I$(top_srcdir)/src/MoochoUtilities\
  -I$(top_srcdir)/src/RTOpPack\
  -I$(top_srcdir)/src/RTOpStdOps


SOURCES_H=\
  $(MoochoUtilities_SOURCES_H)\
  $(RTOp_C_SOURCES_H)\
  $(RTOp_CXX_SOURCES_H)\
	$(RTOp_STDOPS_SOURCES_H)

TSFCOREUTILS_LIB = libTSFCoreUtils.a

libTSFCoreUtils_a_SOURCES = \
  $(MoochoUtilities_SOURCES)\
  $(RTOp_C_SOURCES)\
  $(RTOp_CXX_SOURCES)\
	$(RTOp_STDOPS_SOURCES)

# ------------------------------------------------------------------------
# For using a special archiver
# ------------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.

if USE_ALTERNATE_AR

libTSFCoreUtils_a_AR = $(ALTERNATE_AR)
else

libTSFCoreUtils_a_AR = $(AR) cru

endif

# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# ------------------------------------------------------------------------

libTSFCoreUtils_a_LIBADD = $(XTRALDADD)

# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------

lib_LIBRARIES = $(TSFCOREUTILS_LIB)

# ------------------------------------------------------------------------
# List of all headers to install in $(pkgincludedir)
# ------------------------------------------------------------------------

pkginclude_HEADERS = $(SOURCES_H)

# ------------------------------------------------------------------------
# Special stuff to install in our special $(pkgexecincludedir)
# ------------------------------------------------------------------------

# SPECIAL NOTE: TSFCoreUtils_config.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.

pkgexecincludedir = $(exec_prefix)/include/TSFCoreUtils
nodist_pkgexecinclude_HEADERS = MoochoUtilities/TSFCoreUtilsConfig.h

# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------

MAINTAINERCLEANFILES = Makefile.in 

