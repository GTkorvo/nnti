(3/7/2005) Here is what I need to do to get the vector/operator code
in TSFCore ready to go into Thyra.

1) Write testing software for all major interfaces.

2) Port code to *all* major Thyra platforms.

3) Get testing code working with new testing driver.

4) Change names of classes and files to new Thyra names and move into
new temp Thyra directory structure.

5) Get build system to build new libTSFCoreThyra.a library with new
code.

6) Update doxygen documentation.  This includes cleaning up all
formating of doxygen comments.

7) Update SAND report and add sections on basic mathmatics of vectors,
multivectors and linear operators in Hilbert space and a section on
Index type and ordinal traits.  This means updating the Doxygen
diagrams and eveything.

I need to break this down into baby steps so that I can get some
progress made.  Here are my baby steps:

1) Move AbstractFactory headers into Teuchos.  Add refactoring scripts
to TSFCoreUtils to facilitate this move.

2) Move StandardCompositionMacros.hpp into Teuchos.  Add refactoring
scripts to TSFCoreUtils to facilitate this move.

3) Create a new RTOpPack package in Moocho and move all non-templated
and C-based RTOps there.

4) Create directory structure for Thyra based on plan.

5) Move templated RTOp code into Thyra/src/rtop/base and
Thyra/src/rtop/implementations.

6) Copy selected TSFCore files into new Thyra directory structure.
Change the names of files as appropriate and develope refactoring
scripts for changing the names of classes and functions.

7) Get auto stuff working to build new Thyra library.

8) Copy over doxygen files to new Thyra subdirectories.  Create
doxygen collections from Thyra, ana and operator_vector stuff.  Update
all of the doxygen stuff for new names etc.

9) Update LinearOpBaseTester by add checking of linear operator
properties A*(beta*b + gamma*c) == beta*A*b + gamma*A*c for random
vectors b and c.

10) Create a VectorSpaceBaseTester class tests all of the basic
properties of vectors and multivectors that it creates.

11) Create a testing function that tests the basic postconditions of
all of the standard vector operation functions.

12) Create a testing function that tests the basic postconditions of
all of the standard multivector operation functions.

13) Get new test harness working to drive all testing and example
software.

14) Update SAND report:
  a) Update UML diagrams.
  b) Add section on mathamatics of vectors, linear operators and
     multivectors in a Hilbert space.
  c) Add section on supporting application-defined scalar products.
  d) Add section on general adapter support for serial and MPI
     platforms.
  e) 
  
