# Makefile.in generated by automake 1.8.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# ************************************************************************
# 
#               TSFCore: Trilinos Solver Framework Core
#                 Copyright (2004) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# Questions? Contact Michael A. Heroux (maherou@sandia.gov) 
# 
# ************************************************************************
# @HEADER

# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside New_Package. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------

#
# There is, at present, no distinction between most of the categories, 
# other than those which start with EXTRA_.  All categories which do not
# start with EXTRA_ are included in all builds.  Categories which start
# with EXTRA_ are included in some builds (typically controlled by 
# --with-xyz or --without-xyz)
#


SOURCES = $(libTSFCore_a_SOURCES) $(EXTRA_libTSFCore_a_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_triplet = @host@
subdir = src
DIST_COMMON = $(am__include_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/TSFCoreConfig.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/ac_cxx_bool.m4 \
	$(top_srcdir)/config/ac_cxx_have_stl.m4 \
	$(top_srcdir)/config/ac_cxx_mutable.m4 \
	$(top_srcdir)/config/ac_cxx_namespaces.m4 \
	$(top_srcdir)/config/ac_cxx_new_for_scoping.m4 \
	$(top_srcdir)/config/ac_cxx_std_sprintf.m4 \
	$(top_srcdir)/config/acx_blas.m4 \
	$(top_srcdir)/config/acx_lapack.m4 \
	$(top_srcdir)/config/tac_arg_check_mpi.m4 \
	$(top_srcdir)/config/tac_arg_config_mpi.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature_sub.m4 \
	$(top_srcdir)/config/tac_arg_with_ar.m4 \
	$(top_srcdir)/config/tac_arg_with_blaslib.m4 \
	$(top_srcdir)/config/tac_arg_with_flags.m4 \
	$(top_srcdir)/config/tac_arg_with_incdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_lapacklib.m4 \
	$(top_srcdir)/config/tac_arg_with_libdirs.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = TSFCoreConfig.h
CONFIG_CLEAN_FILES =
AR = ar
ARFLAGS = cru
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(execincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
am__DEPENDENCIES_1 =
@HAVE_TSFCORE_TTO_ADAPTER_TRUE@libTSFCore_a_DEPENDENCIES =  \
@HAVE_TSFCORE_TTO_ADAPTER_TRUE@	$(am__DEPENDENCIES_1)
am__libTSFCore_a_SOURCES_DIST =  \
	$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp \
	$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp \
	$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp \
	$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp \
	$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp
am__objects_1 = TSFCoreEpetraLinearOp.$(OBJEXT) \
	TSFCoreEpetraMultiVector.$(OBJEXT) \
	TSFCoreEpetraVector.$(OBJEXT) \
	TSFCoreEpetraVectorSpace.$(OBJEXT) \
	TSFCoreEpetraVectorSpaceFactory.$(OBJEXT) \
	TSFCore_get_Epetra_MultiVector.$(OBJEXT)
@HAVE_TSFCORE_EPETRA_TRUE@am__objects_2 = $(am__objects_1)
am__objects_3 = Epetra_DiagonalOperator.$(OBJEXT) \
	Epetra_ProductOperator.$(OBJEXT) \
	Epetra_LinearSystemScaler.$(OBJEXT) \
	Epetra_NonlinearProblem.$(OBJEXT) \
	Epetra_NonlinearProblemFirstOrder.$(OBJEXT) \
	Ifpack_PrecGenerator.$(OBJEXT) \
	TSFCoreNonlinEpetraNPFO.$(OBJEXT) \
	TSFCoreNonlinLinearOpWithSolveAztecOO.$(OBJEXT)
@HAVE_TSFCORE_AZTECOO_TRUE@am__objects_4 = $(am__objects_3)
am_libTSFCore_a_OBJECTS = $(am__objects_2) $(am__objects_4)
libTSFCore_a_OBJECTS = $(am_libTSFCore_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Epetra_DiagonalOperator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_LinearSystemScaler.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_NonlinearProblem.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_ProductOperator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Ifpack_PrecGenerator.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFCoreEpetraLinearOp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFCoreEpetraMultiVector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFCoreEpetraVector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFCoreEpetraVectorSpace.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libTSFCore_a_SOURCES) $(EXTRA_libTSFCore_a_SOURCES)
DIST_SOURCES = $(am__libTSFCore_a_SOURCES_DIST) \
	$(EXTRA_libTSFCore_a_SOURCES)
am__include_HEADERS_DIST = $(srcdir)/TSFCore_ConfigDefs.hpp \
	$(srcdir)/interfaces/Core/TSFCoreAssertOp.hpp \
	$(srcdir)/interfaces/Core/TSFCoreAssertOpDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreLinearOp.hpp \
	$(srcdir)/interfaces/Core/TSFCoreLinearOpDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreMultiVector.hpp \
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorCols.hpp \
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorColsDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorStdOps.hpp \
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorStdOpsDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreOpBase.hpp \
	$(srcdir)/interfaces/Core/TSFCoreOpBaseDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreDotProd.hpp \
	$(srcdir)/interfaces/Core/TSFCoreDotProdDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreScalarProd.hpp \
	$(srcdir)/interfaces/Core/TSFCoreScalarProdDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVector.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorBase.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorBaseDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpace.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceBase.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceBaseDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceFactory.hpp \
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceFactoryDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreTypes.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVector.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceStdBase.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceStdBaseDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorSpace.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceFactory.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceFactoryDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorStdOps.hpp \
	$(srcdir)/interfaces/Core/TSFCoreVectorStdOpsDecl.hpp \
	$(srcdir)/interfaces/Core/TSFCore_apply_op_helper.hpp \
	$(srcdir)/interfaces/Core/TSFCore_apply_op_helper_decl.hpp \
	$(srcdir)/utilities/Core/TSFCoreExplicitMultiVectorView.hpp \
	$(srcdir)/utilities/Core/TSFCoreExplicitVectorView.hpp \
	$(srcdir)/utilities/Core/TSFCoreMultiVectorAllocator.hpp \
	$(srcdir)/utilities/Core/TSFCoreLinearOpTesterDecl.hpp \
	$(srcdir)/utilities/Core/TSFCoreLinearOpTester.hpp \
	$(srcdir)/utilities/Core/TSFCoreProductVectorSpaceBase.hpp \
	$(srcdir)/utilities/Core/TSFCoreProductMultiVectorBase.hpp \
	$(srcdir)/utilities/Core/TSFCoreProductVectorBase.hpp \
	$(srcdir)/utilities/Core/TSFCoreProductVectorSpace.hpp \
	$(srcdir)/utilities/Core/TSFCoreProductVectorSpaceDecl.hpp \
	$(srcdir)/utilities/Core/TSFCoreProductVector.hpp \
	$(srcdir)/utilities/Core/TSFCoreProductVectorDecl.hpp \
	$(srcdir)/utilities/Core/TSFCoreTestingToolsDecl.hpp \
	$(srcdir)/utilities/Core/TSFCoreTestingTools.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversConvergenceTesterDecl.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversConvergenceTester.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversIterativeLinearSolverDecl.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversIterativeLinearSolver.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversNormDecl.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversNorm.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversSolverStateDecl.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversSolverState.hpp \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversTypes.hpp \
	$(srcdir)/utilities/Solvers/TSFCoreSolversBiCGSolverDecl.hpp \
	$(srcdir)/utilities/Solvers/TSFCoreSolversBiCGSolver.hpp \
	$(srcdir)/utilities/Solvers/TSFCoreSolversCGSolverDecl.hpp \
	$(srcdir)/utilities/Solvers/TSFCoreSolversCGSolver.hpp \
	$(srcdir)/utilities/Solvers/TSFCoreSolversSimpleGMRESSolverDecl.hpp \
	$(srcdir)/utilities/Solvers/TSFCoreSolversSimpleGMRESSolver.hpp \
	$(srcdir)/../example/Solvers/TSFCoreSolversGmresSolver.hpp \
	$(srcdir)/utilities/Solvers/TSFCoreSolversNormedConvergenceTesterDecl.hpp \
	$(srcdir)/utilities/Solvers/TSFCoreSolversNormedConvergenceTester.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinLinearOpWithSolveDecl.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinLinearOpWithSolve.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinLinearSolveOpDecl.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinLinearSolveOp.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinNonlinearProblemDecl.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinNonlinearProblemFirstOrderDecl.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinNonlinearProblemFirstOrder.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinNonlinearProblem.hpp \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinTypes.hpp \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinLinearOpWithSolveIterDecl.hpp \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinLinearOpWithSolveIter.hpp \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinNonlinearProblemFirstOrderTesterDecl.hpp \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinNonlinearProblemFirstOrderTester.hpp \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinNonlinearProblemTesterDecl.hpp \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinNonlinearProblemTester.hpp \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinSimpleNewtonSolverDecl.hpp \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinSimpleNewtonSolver.hpp \
	$(srcdir)/adapters/mpi-base/TSFCoreMPIMultiVectorBaseDecl.hpp \
	$(srcdir)/adapters/mpi-base/TSFCoreMPIMultiVectorBase.hpp \
	$(srcdir)/adapters/mpi-base/TSFCoreMPIVectorBaseDecl.hpp \
	$(srcdir)/adapters/mpi-base/TSFCoreMPIVectorBase.hpp \
	$(srcdir)/adapters/mpi-base/TSFCoreMPIVectorSpaceBaseDecl.hpp \
	$(srcdir)/adapters/mpi-base/TSFCoreMPIVectorSpaceBase.hpp \
	$(srcdir)/adapters/mpi-base/TSFCoreMultiVectorSerializationDecl.hpp \
	$(srcdir)/adapters/mpi-base/TSFCoreMultiVectorSerialization.hpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraTypes.hpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.hpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.hpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraVector.hpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.hpp \
	$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.hpp \
	$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.hpp \
	$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.hpp \
	$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.hpp \
	$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.hpp
includeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_execincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALTERNATE_AR = @ALTERNATE_AR@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
BUILD_EXAMPLES_FALSE = @BUILD_EXAMPLES_FALSE@
BUILD_EXAMPLES_TRUE = @BUILD_EXAMPLES_TRUE@
BUILD_TESTS_FALSE = @BUILD_TESTS_FALSE@
BUILD_TESTS_TRUE = @BUILD_TESTS_TRUE@
BUILD_TEUCHOS_FALSE = @BUILD_TEUCHOS_FALSE@
BUILD_TEUCHOS_TRUE = @BUILD_TEUCHOS_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FLIBS = @FLIBS@
HAVE_MPI_FALSE = @HAVE_MPI_FALSE@
HAVE_MPI_TRUE = @HAVE_MPI_TRUE@
HAVE_TSFCORE_AZTECOO_FALSE = @HAVE_TSFCORE_AZTECOO_FALSE@
HAVE_TSFCORE_AZTECOO_TRUE = @HAVE_TSFCORE_AZTECOO_TRUE@
HAVE_TSFCORE_EPETRA_FALSE = @HAVE_TSFCORE_EPETRA_FALSE@
HAVE_TSFCORE_EPETRA_TRUE = @HAVE_TSFCORE_EPETRA_TRUE@
HAVE_TSFCORE_MPI_FALSE = @HAVE_TSFCORE_MPI_FALSE@
HAVE_TSFCORE_MPI_TRUE = @HAVE_TSFCORE_MPI_TRUE@
HAVE_TSFCORE_TTO_ADAPTER_FALSE = @HAVE_TSFCORE_TTO_ADAPTER_FALSE@
HAVE_TSFCORE_TTO_ADAPTER_TRUE = @HAVE_TSFCORE_TTO_ADAPTER_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TRILINOS_TEMPLATE_OBJS = @TRILINOS_TEMPLATE_OBJS@
USE_ALTERNATE_AR_FALSE = @USE_ALTERNATE_AR_FALSE@
USE_ALTERNATE_AR_TRUE = @USE_ALTERNATE_AR_TRUE@
VERSION = @VERSION@
ac_aux_dir = @ac_aux_dir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
INTERFACES_CORE_H = \
	$(srcdir)/interfaces/Core/TSFCoreAssertOp.hpp\
	$(srcdir)/interfaces/Core/TSFCoreAssertOpDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreLinearOp.hpp\
	$(srcdir)/interfaces/Core/TSFCoreLinearOpDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreMultiVector.hpp\
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorCols.hpp\
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorColsDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorStdOps.hpp\
	$(srcdir)/interfaces/Core/TSFCoreMultiVectorStdOpsDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreOpBase.hpp\
	$(srcdir)/interfaces/Core/TSFCoreOpBaseDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreDotProd.hpp\
	$(srcdir)/interfaces/Core/TSFCoreDotProdDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreScalarProd.hpp\
	$(srcdir)/interfaces/Core/TSFCoreScalarProdDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVector.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorBase.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorBaseDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpace.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceBase.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceBaseDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceFactory.hpp\
	$(srcdir)/interfaces/Core/TSFCoreSerialVectorSpaceFactoryDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreTypes.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVector.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceStdBase.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceStdBaseDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorSpace.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceFactory.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorSpaceFactoryDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorStdOps.hpp\
	$(srcdir)/interfaces/Core/TSFCoreVectorStdOpsDecl.hpp\
	$(srcdir)/interfaces/Core/TSFCore_apply_op_helper.hpp\
	$(srcdir)/interfaces/Core/TSFCore_apply_op_helper_decl.hpp

UTILITIES_CORE_H = \
	$(srcdir)/utilities/Core/TSFCoreExplicitMultiVectorView.hpp\
	$(srcdir)/utilities/Core/TSFCoreExplicitVectorView.hpp\
	$(srcdir)/utilities/Core/TSFCoreMultiVectorAllocator.hpp\
	$(srcdir)/utilities/Core/TSFCoreLinearOpTesterDecl.hpp\
	$(srcdir)/utilities/Core/TSFCoreLinearOpTester.hpp\
	$(srcdir)/utilities/Core/TSFCoreProductVectorSpaceBase.hpp\
	$(srcdir)/utilities/Core/TSFCoreProductMultiVectorBase.hpp\
	$(srcdir)/utilities/Core/TSFCoreProductVectorBase.hpp\
	$(srcdir)/utilities/Core/TSFCoreProductVectorSpace.hpp\
	$(srcdir)/utilities/Core/TSFCoreProductVectorSpaceDecl.hpp\
	$(srcdir)/utilities/Core/TSFCoreProductVector.hpp\
	$(srcdir)/utilities/Core/TSFCoreProductVectorDecl.hpp\
	$(srcdir)/utilities/Core/TSFCoreTestingToolsDecl.hpp\
	$(srcdir)/utilities/Core/TSFCoreTestingTools.hpp

CORE_H = $(INTERFACES_CORE_H) $(UTILITIES_CORE_H)
CORE = 
INTERFACES_SOLVERS_H = \
	$(srcdir)/interfaces/Solvers/TSFCoreSolversConvergenceTesterDecl.hpp\
	$(srcdir)/interfaces/Solvers/TSFCoreSolversConvergenceTester.hpp\
	$(srcdir)/interfaces/Solvers/TSFCoreSolversIterativeLinearSolverDecl.hpp\
	$(srcdir)/interfaces/Solvers/TSFCoreSolversIterativeLinearSolver.hpp\
	$(srcdir)/interfaces/Solvers/TSFCoreSolversNormDecl.hpp\
	$(srcdir)/interfaces/Solvers/TSFCoreSolversNorm.hpp\
	$(srcdir)/interfaces/Solvers/TSFCoreSolversSolverStateDecl.hpp\
	$(srcdir)/interfaces/Solvers/TSFCoreSolversSolverState.hpp\
	$(srcdir)/interfaces/Solvers/TSFCoreSolversTypes.hpp

UTILITIES_SOLVERS_H = \
	$(srcdir)/utilities/Solvers/TSFCoreSolversBiCGSolverDecl.hpp\
	$(srcdir)/utilities/Solvers/TSFCoreSolversBiCGSolver.hpp\
	$(srcdir)/utilities/Solvers/TSFCoreSolversCGSolverDecl.hpp\
	$(srcdir)/utilities/Solvers/TSFCoreSolversCGSolver.hpp\
	$(srcdir)/utilities/Solvers/TSFCoreSolversSimpleGMRESSolverDecl.hpp\
	$(srcdir)/utilities/Solvers/TSFCoreSolversSimpleGMRESSolver.hpp\
	$(srcdir)/../example/Solvers/TSFCoreSolversGmresSolver.hpp\
	$(srcdir)/utilities/Solvers/TSFCoreSolversNormedConvergenceTesterDecl.hpp\
	$(srcdir)/utilities/Solvers/TSFCoreSolversNormedConvergenceTester.hpp

SOLVERS_H = $(INTERFACES_SOLVERS_H) $(UTILITIES_SOLVERS_H)
SOLVERS = 
INTERFACES_NONLIN_H = \
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinLinearOpWithSolveDecl.hpp\
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinLinearOpWithSolve.hpp\
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinLinearSolveOpDecl.hpp\
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinLinearSolveOp.hpp\
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinNonlinearProblemDecl.hpp\
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinNonlinearProblemFirstOrderDecl.hpp\
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinNonlinearProblemFirstOrder.hpp\
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinNonlinearProblem.hpp\
	$(srcdir)/interfaces/Nonlin/TSFCoreNonlinTypes.hpp

UTILITIES_NONLIN_H = \
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinLinearOpWithSolveIterDecl.hpp\
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinLinearOpWithSolveIter.hpp\
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinNonlinearProblemFirstOrderTesterDecl.hpp\
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinNonlinearProblemFirstOrderTester.hpp\
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinNonlinearProblemTesterDecl.hpp\
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinNonlinearProblemTester.hpp\
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinSimpleNewtonSolverDecl.hpp\
	$(srcdir)/utilities/Nonlin/TSFCoreNonlinSimpleNewtonSolver.hpp

NONLIN_H = $(INTERFACES_NONLIN_H) $(UTILITIES_NONLIN_H)
NONLIN = 
EXTRA_ADAPTERS_MPI_H = \
	$(srcdir)/adapters/mpi-base/TSFCoreMPIMultiVectorBaseDecl.hpp\
	$(srcdir)/adapters/mpi-base/TSFCoreMPIMultiVectorBase.hpp\
	$(srcdir)/adapters/mpi-base/TSFCoreMPIVectorBaseDecl.hpp\
	$(srcdir)/adapters/mpi-base/TSFCoreMPIVectorBase.hpp\
	$(srcdir)/adapters/mpi-base/TSFCoreMPIVectorSpaceBaseDecl.hpp\
	$(srcdir)/adapters/mpi-base/TSFCoreMPIVectorSpaceBase.hpp\
	$(srcdir)/adapters/mpi-base/TSFCoreMultiVectorSerializationDecl.hpp\
	$(srcdir)/adapters/mpi-base/TSFCoreMultiVectorSerialization.hpp

EXTRA_ADAPTERS_EPETRA_H = \
	$(srcdir)/adapters/epetra/TSFCoreEpetraTypes.hpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.hpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.hpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraVector.hpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.hpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.hpp\
	$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.hpp

EXTRA_ADAPTERS_EPETRA = \
	$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp\
	$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp\
	$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp

EXTRA_ADAPTERS_AZTECOO_H = \
	$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.hpp \
	$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.hpp \
	$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.hpp \
	$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.hpp \
	$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.hpp

EXTRA_ADAPTERS_AZTECOO = \
	$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp \
	$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp \
	$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp \
	$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp \
	$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp

@HAVE_TSFCORE_MPI_FALSE@ADAPTERS_MPI_H = 
@HAVE_TSFCORE_MPI_TRUE@ADAPTERS_MPI_H = $(EXTRA_ADAPTERS_MPI_H)
@HAVE_TSFCORE_EPETRA_FALSE@ADAPTERS_EPETRA_H = 
@HAVE_TSFCORE_EPETRA_TRUE@ADAPTERS_EPETRA_H = $(EXTRA_ADAPTERS_EPETRA_H)
@HAVE_TSFCORE_EPETRA_FALSE@ADAPTERS_EPETRA = 
@HAVE_TSFCORE_EPETRA_TRUE@ADAPTERS_EPETRA = $(EXTRA_ADAPTERS_EPETRA)
@HAVE_TSFCORE_AZTECOO_FALSE@ADAPTERS_AZTECOO_H = 
@HAVE_TSFCORE_AZTECOO_TRUE@ADAPTERS_AZTECOO_H = $(EXTRA_ADAPTERS_AZTECOO_H)
@HAVE_TSFCORE_AZTECOO_FALSE@ADAPTERS_AZTECOO = 
@HAVE_TSFCORE_AZTECOO_TRUE@ADAPTERS_AZTECOO = $(EXTRA_ADAPTERS_AZTECOO)

#Specify locations of include files within Trilinos, but outside TSFCore
AM_CPPFLAGS = \
-I$(srcdir) \
-I$(srcdir)/interfaces/Core \
-I$(srcdir)/interfaces/Solvers \
-I$(srcdir)/interfaces/Nonlin \
-I$(srcdir)/utilities/Core \
-I$(srcdir)/adapters/mpi-base \
-I$(srcdir)/adapters/epetra \
-I$(srcdir)/adapters/aztecoo \
-I$(top_srcdir)/../TSFCoreUtils/src \
-I$(top_srcdir)/../TSFCoreUtils/src/MoochoUtilities \
-I$(top_srcdir)/../TSFCoreUtils/src/RTOpPack \
-I$(top_srcdir)/../TSFCoreUtils/src/RTOpStdOps \
-I$(top_builddir)/../TSFCoreUtils/src\
-I$(top_srcdir)/../epetra/src \
-I$(top_builddir)/../epetra/src \
-I$(top_srcdir)/../ifpack/src \
-I$(top_builddir)/../ifpack/src \
-I$(top_srcdir)/../aztecoo/src \
-I$(top_builddir)/../aztecoo/src \
-I$(top_srcdir)/../teuchos \
-I$(top_srcdir)/../teuchos/src \
-I$(top_builddir)/../teuchos/src


# Note, epetra and aztecoo includes only needed and used
# if support for epetra or aztecoo is specifified

# --------------------------------------------------------------------
# TSFCore library specifications
# --------------------------------------------------------------------
TSFCORE_LIB = libTSFCore.a
TSFCORE_H = \
	$(srcdir)/TSFCore_ConfigDefs.hpp \
	$(CORE_H) \
	$(SOLVERS_H) \
	$(NONLIN_H) \
	$(ADAPTERS_MPI_H) \
	$(ADAPTERS_EPETRA_H)\
  $(ADAPTERS_AZTECOO_H)

libTSFCore_a_SOURCES = \
	$(ADAPTERS_EPETRA)\
  $(ADAPTERS_AZTECOO)

EXTRA_libTSFCore_a_SOURCES = \
	$(EXTRA_ADAPTERS_MPI_H) \
	$(EXTRA_ADAPTERS_EPETRA_H) \
	$(EXTRA_ADAPTERS_EPETRA) \
	$(EXTRA_ADAPTERS_AZTECOO_H) \
	$(EXTRA_ADAPTERS_AZTECOO)

@USE_ALTERNATE_AR_FALSE@libTSFCore_a_AR = $(AR) cru

#We need the following to support separate build directories

# --------------------------------------------------------------------
# For using a special archiver
# --------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@libTSFCore_a_AR = $(ALTERNATE_AR)
@HAVE_TSFCORE_TTO_ADAPTER_FALSE@libTSFCore_a_LIBADD = $(XTRALDADD)

# --------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# --------------------------------------------------------------------

# I have not been able to find any kind of "or" for Automake
# conditionals. JW
@HAVE_TSFCORE_TTO_ADAPTER_TRUE@libTSFCore_a_LIBADD = $(TRILINOS_TEMPLATE_OBJS) $(XTRALDADD)

# --------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# --------------------------------------------------------------------
lib_LIBRARIES = $(TSFCORE_LIB)

# --------------------------------------------------------------------
# List of all headers to install in $(includedir)
# --------------------------------------------------------------------
include_HEADERS = $(TSFCORE_H) 

# --------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# --------------------------------------------------------------------

# SPECIAL NOTE: TSFCoreConfig.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.
execincludedir = $(exec_prefix)/include
nodist_execinclude_HEADERS = TSFCoreConfig.h $(TSFCORE_H)

# --------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# --------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
all: TSFCoreConfig.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

TSFCoreConfig.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/TSFCoreConfig.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/TSFCoreConfig.h
$(srcdir)/TSFCoreConfig.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f TSFCoreConfig.h stamp-h1
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libTSFCore.a: $(libTSFCore_a_OBJECTS) $(libTSFCore_a_DEPENDENCIES) 
	-rm -f libTSFCore.a
	$(libTSFCore_a_AR) libTSFCore.a $(libTSFCore_a_OBJECTS) $(libTSFCore_a_LIBADD)
	$(RANLIB) libTSFCore.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_DiagonalOperator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_LinearSystemScaler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_NonlinearProblem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_ProductOperator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Ifpack_PrecGenerator.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFCoreEpetraLinearOp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFCoreEpetraMultiVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFCoreEpetraVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFCoreEpetraVectorSpace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

TSFCoreEpetraLinearOp.o: $(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraLinearOp.o -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraLinearOp.Tpo" -c -o TSFCoreEpetraLinearOp.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraLinearOp.Tpo" "$(DEPDIR)/TSFCoreEpetraLinearOp.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraLinearOp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp' object='TSFCoreEpetraLinearOp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraLinearOp.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraLinearOp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraLinearOp.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp

TSFCoreEpetraLinearOp.obj: $(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraLinearOp.obj -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraLinearOp.Tpo" -c -o TSFCoreEpetraLinearOp.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraLinearOp.Tpo" "$(DEPDIR)/TSFCoreEpetraLinearOp.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraLinearOp.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp' object='TSFCoreEpetraLinearOp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraLinearOp.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraLinearOp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraLinearOp.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraLinearOp.cpp'; fi`

TSFCoreEpetraMultiVector.o: $(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraMultiVector.o -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraMultiVector.Tpo" -c -o TSFCoreEpetraMultiVector.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraMultiVector.Tpo" "$(DEPDIR)/TSFCoreEpetraMultiVector.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraMultiVector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp' object='TSFCoreEpetraMultiVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraMultiVector.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraMultiVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraMultiVector.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp

TSFCoreEpetraMultiVector.obj: $(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraMultiVector.obj -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraMultiVector.Tpo" -c -o TSFCoreEpetraMultiVector.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraMultiVector.Tpo" "$(DEPDIR)/TSFCoreEpetraMultiVector.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraMultiVector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp' object='TSFCoreEpetraMultiVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraMultiVector.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraMultiVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraMultiVector.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraMultiVector.cpp'; fi`

TSFCoreEpetraVector.o: $(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraVector.o -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraVector.Tpo" -c -o TSFCoreEpetraVector.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraVector.Tpo" "$(DEPDIR)/TSFCoreEpetraVector.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraVector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp' object='TSFCoreEpetraVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraVector.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraVector.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp

TSFCoreEpetraVector.obj: $(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraVector.obj -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraVector.Tpo" -c -o TSFCoreEpetraVector.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraVector.Tpo" "$(DEPDIR)/TSFCoreEpetraVector.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraVector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp' object='TSFCoreEpetraVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraVector.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraVector.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraVector.cpp'; fi`

TSFCoreEpetraVectorSpace.o: $(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraVectorSpace.o -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraVectorSpace.Tpo" -c -o TSFCoreEpetraVectorSpace.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraVectorSpace.Tpo" "$(DEPDIR)/TSFCoreEpetraVectorSpace.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraVectorSpace.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp' object='TSFCoreEpetraVectorSpace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraVectorSpace.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraVectorSpace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraVectorSpace.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp

TSFCoreEpetraVectorSpace.obj: $(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraVectorSpace.obj -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraVectorSpace.Tpo" -c -o TSFCoreEpetraVectorSpace.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraVectorSpace.Tpo" "$(DEPDIR)/TSFCoreEpetraVectorSpace.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraVectorSpace.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp' object='TSFCoreEpetraVectorSpace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraVectorSpace.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraVectorSpace.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraVectorSpace.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpace.cpp'; fi`

TSFCoreEpetraVectorSpaceFactory.o: $(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraVectorSpaceFactory.o -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Tpo" -c -o TSFCoreEpetraVectorSpaceFactory.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Tpo" "$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp' object='TSFCoreEpetraVectorSpaceFactory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraVectorSpaceFactory.o `test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp

TSFCoreEpetraVectorSpaceFactory.obj: $(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreEpetraVectorSpaceFactory.obj -MD -MP -MF "$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Tpo" -c -o TSFCoreEpetraVectorSpaceFactory.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Tpo" "$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Po"; else rm -f "$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp' object='TSFCoreEpetraVectorSpaceFactory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.Po' tmpdepfile='$(DEPDIR)/TSFCoreEpetraVectorSpaceFactory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreEpetraVectorSpaceFactory.obj `if test -f '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCoreEpetraVectorSpaceFactory.cpp'; fi`

TSFCore_get_Epetra_MultiVector.o: $(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCore_get_Epetra_MultiVector.o -MD -MP -MF "$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Tpo" -c -o TSFCore_get_Epetra_MultiVector.o `test -f '$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Tpo" "$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Po"; else rm -f "$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp' object='TSFCore_get_Epetra_MultiVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Po' tmpdepfile='$(DEPDIR)/TSFCore_get_Epetra_MultiVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCore_get_Epetra_MultiVector.o `test -f '$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp

TSFCore_get_Epetra_MultiVector.obj: $(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCore_get_Epetra_MultiVector.obj -MD -MP -MF "$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Tpo" -c -o TSFCore_get_Epetra_MultiVector.obj `if test -f '$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Tpo" "$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Po"; else rm -f "$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp' object='TSFCore_get_Epetra_MultiVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCore_get_Epetra_MultiVector.Po' tmpdepfile='$(DEPDIR)/TSFCore_get_Epetra_MultiVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCore_get_Epetra_MultiVector.obj `if test -f '$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/epetra/TSFCore_get_Epetra_MultiVector.cpp'; fi`

Epetra_DiagonalOperator.o: $(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_DiagonalOperator.o -MD -MP -MF "$(DEPDIR)/Epetra_DiagonalOperator.Tpo" -c -o Epetra_DiagonalOperator.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_DiagonalOperator.Tpo" "$(DEPDIR)/Epetra_DiagonalOperator.Po"; else rm -f "$(DEPDIR)/Epetra_DiagonalOperator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp' object='Epetra_DiagonalOperator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_DiagonalOperator.Po' tmpdepfile='$(DEPDIR)/Epetra_DiagonalOperator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_DiagonalOperator.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp

Epetra_DiagonalOperator.obj: $(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_DiagonalOperator.obj -MD -MP -MF "$(DEPDIR)/Epetra_DiagonalOperator.Tpo" -c -o Epetra_DiagonalOperator.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_DiagonalOperator.Tpo" "$(DEPDIR)/Epetra_DiagonalOperator.Po"; else rm -f "$(DEPDIR)/Epetra_DiagonalOperator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp' object='Epetra_DiagonalOperator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_DiagonalOperator.Po' tmpdepfile='$(DEPDIR)/Epetra_DiagonalOperator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_DiagonalOperator.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_DiagonalOperator.cpp'; fi`

Epetra_ProductOperator.o: $(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_ProductOperator.o -MD -MP -MF "$(DEPDIR)/Epetra_ProductOperator.Tpo" -c -o Epetra_ProductOperator.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_ProductOperator.Tpo" "$(DEPDIR)/Epetra_ProductOperator.Po"; else rm -f "$(DEPDIR)/Epetra_ProductOperator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp' object='Epetra_ProductOperator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_ProductOperator.Po' tmpdepfile='$(DEPDIR)/Epetra_ProductOperator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_ProductOperator.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp

Epetra_ProductOperator.obj: $(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_ProductOperator.obj -MD -MP -MF "$(DEPDIR)/Epetra_ProductOperator.Tpo" -c -o Epetra_ProductOperator.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_ProductOperator.Tpo" "$(DEPDIR)/Epetra_ProductOperator.Po"; else rm -f "$(DEPDIR)/Epetra_ProductOperator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp' object='Epetra_ProductOperator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_ProductOperator.Po' tmpdepfile='$(DEPDIR)/Epetra_ProductOperator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_ProductOperator.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_ProductOperator.cpp'; fi`

Epetra_LinearSystemScaler.o: $(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_LinearSystemScaler.o -MD -MP -MF "$(DEPDIR)/Epetra_LinearSystemScaler.Tpo" -c -o Epetra_LinearSystemScaler.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_LinearSystemScaler.Tpo" "$(DEPDIR)/Epetra_LinearSystemScaler.Po"; else rm -f "$(DEPDIR)/Epetra_LinearSystemScaler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp' object='Epetra_LinearSystemScaler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_LinearSystemScaler.Po' tmpdepfile='$(DEPDIR)/Epetra_LinearSystemScaler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LinearSystemScaler.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp

Epetra_LinearSystemScaler.obj: $(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_LinearSystemScaler.obj -MD -MP -MF "$(DEPDIR)/Epetra_LinearSystemScaler.Tpo" -c -o Epetra_LinearSystemScaler.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_LinearSystemScaler.Tpo" "$(DEPDIR)/Epetra_LinearSystemScaler.Po"; else rm -f "$(DEPDIR)/Epetra_LinearSystemScaler.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp' object='Epetra_LinearSystemScaler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_LinearSystemScaler.Po' tmpdepfile='$(DEPDIR)/Epetra_LinearSystemScaler.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LinearSystemScaler.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_LinearSystemScaler.cpp'; fi`

Epetra_NonlinearProblem.o: $(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_NonlinearProblem.o -MD -MP -MF "$(DEPDIR)/Epetra_NonlinearProblem.Tpo" -c -o Epetra_NonlinearProblem.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_NonlinearProblem.Tpo" "$(DEPDIR)/Epetra_NonlinearProblem.Po"; else rm -f "$(DEPDIR)/Epetra_NonlinearProblem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp' object='Epetra_NonlinearProblem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_NonlinearProblem.Po' tmpdepfile='$(DEPDIR)/Epetra_NonlinearProblem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_NonlinearProblem.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp

Epetra_NonlinearProblem.obj: $(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_NonlinearProblem.obj -MD -MP -MF "$(DEPDIR)/Epetra_NonlinearProblem.Tpo" -c -o Epetra_NonlinearProblem.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_NonlinearProblem.Tpo" "$(DEPDIR)/Epetra_NonlinearProblem.Po"; else rm -f "$(DEPDIR)/Epetra_NonlinearProblem.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp' object='Epetra_NonlinearProblem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_NonlinearProblem.Po' tmpdepfile='$(DEPDIR)/Epetra_NonlinearProblem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_NonlinearProblem.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblem.cpp'; fi`

Epetra_NonlinearProblemFirstOrder.o: $(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_NonlinearProblemFirstOrder.o -MD -MP -MF "$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Tpo" -c -o Epetra_NonlinearProblemFirstOrder.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Tpo" "$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Po"; else rm -f "$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp' object='Epetra_NonlinearProblemFirstOrder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Po' tmpdepfile='$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_NonlinearProblemFirstOrder.o `test -f '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp

Epetra_NonlinearProblemFirstOrder.obj: $(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Epetra_NonlinearProblemFirstOrder.obj -MD -MP -MF "$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Tpo" -c -o Epetra_NonlinearProblemFirstOrder.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Tpo" "$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Po"; else rm -f "$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp' object='Epetra_NonlinearProblemFirstOrder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.Po' tmpdepfile='$(DEPDIR)/Epetra_NonlinearProblemFirstOrder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_NonlinearProblemFirstOrder.obj `if test -f '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Epetra_NonlinearProblemFirstOrder.cpp'; fi`

Ifpack_PrecGenerator.o: $(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ifpack_PrecGenerator.o -MD -MP -MF "$(DEPDIR)/Ifpack_PrecGenerator.Tpo" -c -o Ifpack_PrecGenerator.o `test -f '$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Ifpack_PrecGenerator.Tpo" "$(DEPDIR)/Ifpack_PrecGenerator.Po"; else rm -f "$(DEPDIR)/Ifpack_PrecGenerator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp' object='Ifpack_PrecGenerator.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Ifpack_PrecGenerator.Po' tmpdepfile='$(DEPDIR)/Ifpack_PrecGenerator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ifpack_PrecGenerator.o `test -f '$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp

Ifpack_PrecGenerator.obj: $(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Ifpack_PrecGenerator.obj -MD -MP -MF "$(DEPDIR)/Ifpack_PrecGenerator.Tpo" -c -o Ifpack_PrecGenerator.obj `if test -f '$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/Ifpack_PrecGenerator.Tpo" "$(DEPDIR)/Ifpack_PrecGenerator.Po"; else rm -f "$(DEPDIR)/Ifpack_PrecGenerator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp' object='Ifpack_PrecGenerator.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/Ifpack_PrecGenerator.Po' tmpdepfile='$(DEPDIR)/Ifpack_PrecGenerator.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Ifpack_PrecGenerator.obj `if test -f '$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/Ifpack_PrecGenerator.cpp'; fi`

TSFCoreNonlinEpetraNPFO.o: $(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreNonlinEpetraNPFO.o -MD -MP -MF "$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Tpo" -c -o TSFCoreNonlinEpetraNPFO.o `test -f '$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Tpo" "$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Po"; else rm -f "$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp' object='TSFCoreNonlinEpetraNPFO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Po' tmpdepfile='$(DEPDIR)/TSFCoreNonlinEpetraNPFO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreNonlinEpetraNPFO.o `test -f '$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp

TSFCoreNonlinEpetraNPFO.obj: $(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreNonlinEpetraNPFO.obj -MD -MP -MF "$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Tpo" -c -o TSFCoreNonlinEpetraNPFO.obj `if test -f '$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Tpo" "$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Po"; else rm -f "$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp' object='TSFCoreNonlinEpetraNPFO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreNonlinEpetraNPFO.Po' tmpdepfile='$(DEPDIR)/TSFCoreNonlinEpetraNPFO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreNonlinEpetraNPFO.obj `if test -f '$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/TSFCoreNonlinEpetraNPFO.cpp'; fi`

TSFCoreNonlinLinearOpWithSolveAztecOO.o: $(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreNonlinLinearOpWithSolveAztecOO.o -MD -MP -MF "$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Tpo" -c -o TSFCoreNonlinLinearOpWithSolveAztecOO.o `test -f '$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Tpo" "$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Po"; else rm -f "$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp' object='TSFCoreNonlinLinearOpWithSolveAztecOO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Po' tmpdepfile='$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreNonlinLinearOpWithSolveAztecOO.o `test -f '$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp' || echo '$(srcdir)/'`$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp

TSFCoreNonlinLinearOpWithSolveAztecOO.obj: $(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFCoreNonlinLinearOpWithSolveAztecOO.obj -MD -MP -MF "$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Tpo" -c -o TSFCoreNonlinLinearOpWithSolveAztecOO.obj `if test -f '$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Tpo" "$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Po"; else rm -f "$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp' object='TSFCoreNonlinLinearOpWithSolveAztecOO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.Po' tmpdepfile='$(DEPDIR)/TSFCoreNonlinLinearOpWithSolveAztecOO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFCoreNonlinLinearOpWithSolveAztecOO.obj `if test -f '$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp'; then $(CYGPATH_W) '$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp'; else $(CYGPATH_W) '$(srcdir)/$(srcdir)/adapters/aztecoo/TSFCoreNonlinLinearOpWithSolveAztecOO.cpp'; fi`
uninstall-info-am:
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done
install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(execincludedir)" || $(mkdir_p) "$(DESTDIR)$(execincludedir)"
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(nodist_execincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(execincludedir)/$$f'"; \
	  $(nodist_execincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(execincludedir)/$$f"; \
	done

uninstall-nodist_execincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(execincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(execincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) TSFCoreConfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) TSFCoreConfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) TSFCoreConfig.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) TSFCoreConfig.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../example/Solvers $(distdir)/adapters/aztecoo $(distdir)/adapters/epetra $(distdir)/adapters/mpi-base $(distdir)/interfaces/Core $(distdir)/interfaces/Nonlin $(distdir)/interfaces/Solvers $(distdir)/utilities/Core $(distdir)/utilities/Nonlin $(distdir)/utilities/Solvers
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS) TSFCoreConfig.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(execincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-libLIBRARIES \
	install-nodist_execincludeHEADERS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_execincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man \
	install-nodist_execincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_execincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
