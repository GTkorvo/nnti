/* NOTICE:  The United States Government is granted for itself and others
 * acting on its behalf a paid-up, nonexclusive, irrevocable worldwide
 * license in ths data to reproduce, prepare derivative works, and
 * perform publicly and display publicly.  Beginning five (5) years from
 * October 20, 2002, the United States Government is granted for itself and
 * others acting on its behalf a paid-up, nonexclusive, irrevocable
 * worldwide license in this data to reproduce, prepare derivative works,
 * distribute copies to the public, perform publicly and display
 * publicly, and to permit others to do so.
 * 
 * NEITHER THE UNITED STATES GOVERNMENT, NOR THE UNITED STATES DEPARTMENT
 * OF ENERGY, NOR SANDIA CORPORATION, NOR ANY OF THEIR EMPLOYEES, MAKES
 * ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR
 * RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY
 * INFORMATION, APPARATUS, PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS
 * THAT ITS USE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS. */

#ifndef IFPACK_CRSILUT_H
#define IFPACK_CRSILUT_H

#include "Ifpack_ConfigDefs.h"
#include "Ifpack_ScalingType.h"
#include "Ifpack_OverlapGraph.h"
#include "Ifpack_PerturbedMatrix.h"
#include "Ifpack_OverlapFactorObject.h"
#include "Ifpack_OverlapSolveObject.h"
#include "Epetra_CompObject.h"
#include "Epetra_Operator.h"
#include "Epetra_CrsMatrix.h"
#include "Epetra_Object.h"
class Epetra_Comm;
class Epetra_Map;
class Epetra_RowMatrix;
class Epetra_Vector;
class Epetra_MultiVector;

//! Ifpack_CrsIlut: ILUT preconditioner of a given Epetra_RowMatrix.



class Ifpack_CrsIlut: public Epetra_Object, public Epetra_CompObject, public Ifpack_PerturbedMatrix,
		      public Ifpack_OverlapFactorObject, public Ifpack_OverlapSolveObject {

 public:
  //@{ \name Constructors/Destructor
  //! Default constructor, use when no overlap is needed.
  Ifpack_CrsIlut();

  //! Constructor for overlapped graph.
  /*! Creates a Ifpack_CrsIlut object that uses a different graph than the one associated with the
      user matrix. The graph that is passed in must have 
    
    \param In
           Graph - Graph generated by Ifpack_IlukGraph.
  */
  Ifpack_CrsIlut(const Ifpack_OverlapGraph & OverlapGraph);
  
  //! Copy constructor.
  Ifpack_CrsIlut(const Ifpack_CrsIlut & Source);

  //! Ifpack_CrsIlut Destructor
  virtual ~Ifpack_CrsIlut();
  //@}

  //@{ \name Initialization methods.

  //! Initialize L and U with values from user matrix A.
  /*! Copies values from the user's matrix into the nonzero pattern of L and U.
    \param In 
           A - User matrix to be factored.
    \warning The structure of A must be compatible with the overlap graph passed to constructor (if any).
             
   */
  int InitValues(const Epetra_RowMatrix &A);

  //! Compute ILUT factors L and U
  int Factor();

  //@{ \name Additional methods required to support the Epetra_Operator interface.

    //! Returns a character string describing the operator
    char * Label() const {return(Epetra_Object::Label());};
  //@}

};

#endif /* IFPACK_CRSILUT_H */
