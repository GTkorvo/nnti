# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# @HEADER

# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside EpetraExt. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
F77 = @F77@
FLIBS = @FLIBS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
MAINT = @MAINT@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
TRILINOS_TEMPLATE_OBJS = @TRILINOS_TEMPLATE_OBJS@
VERSION = @VERSION@
XTRALDADD = @XTRALDADD@
ac_aux_dir = @ac_aux_dir@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

TRANSFORM_H = \
	$(srcdir)/Epetra_Transform.h \
        $(srcdir)/Epetra_Transform_Composite.h \
	$(srcdir)/EDT_CrsGraph_View.h \
	$(srcdir)/EDT_CrsMatrix_View.h \
	$(srcdir)/EDT_MultiVector_View.h \
	$(srcdir)/EDT_CrsGraph_Transpose.h \
        $(srcdir)/EDT_CrsGraph_MapColoring.h \
        $(srcdir)/EDT_CrsGraph_MapColoringIndex.h \
	$(srcdir)/EDT_LinearProblem_StaticCondensation.h \
	$(srcdir)/EDT_LinearProblem_CrsSingletonFilter.h \
        $(srcdir)/EDT_CrsGraph_SymmRCM.h \
        $(srcdir)/EDT_LinearProblem_GraphTrans.h


TRANSFORM = \
	$(srcdir)/EDT_CrsGraph_View.cpp \
	$(srcdir)/EDT_CrsMatrix_View.cpp \
	$(srcdir)/EDT_MultiVector_View.cpp \
	$(srcdir)/EDT_CrsGraph_Transpose.cpp \
        $(srcdir)/EDT_CrsGraph_MapColoring.cpp \
        $(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp \
	$(srcdir)/EDT_LinearProblem_StaticCondensation.cpp \
	$(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp \
        $(srcdir)/EDT_CrsGraph_SymmRCM.cpp \
        $(srcdir)/EDT_LinearProblem_GraphTrans.cpp


BTF_H = \
        $(srcdir)/EDT_CrsGraph_BTF.h


BTF = \
        $(srcdir)/EDT_CrsGraph_BTF.cpp \
        $(srcdir)/btf/concmp.f \
        $(srcdir)/btf/genbtf.f \
        $(srcdir)/btf/corsum.f \
        $(srcdir)/btf/finsum.f \
        $(srcdir)/btf/fnrsum.f \
        $(srcdir)/btf/izero.f \
        $(srcdir)/btf/maxmatch.f \
        $(srcdir)/btf/rectblk.f \
        $(srcdir)/btf/mmc13e.f \
        $(srcdir)/btf/prtivs.f \
        $(srcdir)/btf/strchk.f \
        $(srcdir)/btf/mattrans.f


EXTRA_EPETRAEXT_ZOLTAN_H = \
	$(srcdir)/EDT_CrsGraph_Zoltan.h \
	$(srcdir)/EDT_LinearProblem_Zoltan.h \
	$(srcdir)/EDT_CrsGraph_ZoltanOrder.h \
	$(srcdir)/Epetra_ZoltanQuery.h


EXTRA_EPETRAEXT_ZOLTAN = \
	$(srcdir)/EDT_CrsGraph_Zoltan.cpp \
	$(srcdir)/EDT_LinearProblem_Zoltan.cpp \
	$(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp \
	$(srcdir)/Epetra_ZoltanQuery.cpp


@HAVE_EPETRAEXT_ZOLTAN_TRUE@EPETRAEXT_ZOLTAN_H = \
@HAVE_EPETRAEXT_ZOLTAN_TRUE@        $(EXTRA_EPETRAEXT_ZOLTAN_H)

@HAVE_EPETRAEXT_ZOLTAN_FALSE@EPETRAEXT_ZOLTAN_H = 
@HAVE_EPETRAEXT_ZOLTAN_TRUE@EPETRAEXT_ZOLTAN = \
@HAVE_EPETRAEXT_ZOLTAN_TRUE@        $(EXTRA_EPETRAEXT_ZOLTAN)

@HAVE_EPETRAEXT_ZOLTAN_FALSE@EPETRAEXT_ZOLTAN = 

EXTRA_MPI_H = \
	$(srcdir)/EDT_CrsGraph_Overlap.h \
	$(EPETRAEXT_ZOLTAN_H)


EXTRA_MPI = \
	$(srcdir)/EDT_CrsGraph_Overlap.cpp \
	$(EPETRAEXT_ZOLTAN)


@HAVE_MPI_TRUE@MPI_H = \
@HAVE_MPI_TRUE@        $(EXTRA_MPI_H)

@HAVE_MPI_FALSE@MPI_H = 
@HAVE_MPI_TRUE@MPI = \
@HAVE_MPI_TRUE@        $(EXTRA_MPI)

@HAVE_MPI_FALSE@MPI = 


# ------------------------------------------------------------------------
# EpetraExt Tranform library specifications
# ------------------------------------------------------------------------
libepetraext_trans_a_SOURCES = \
	$(TRANSFORM) \
        $(BTF) \
	$(MPI)


#If these are not listed, the files will not be included in
#the distribution tarball.
EXTRA_libepetraext_trans_a_SOURCES = \
	$(EXTRA_MPI) \
	$(EXTRA_MPI_H) \
	$(EXTRA_EPETRAEXT_ZOLTAN) \
	$(EXTRA_EPETRAEXT_ZOLTAN_H)


# libraries to be installed in $(libexecdir)
@BUILD_TRANSFORM_TRUE@EPETRAEXT_TRANSFORM_LIB = libepetraext_trans.a
@BUILD_TRANSFORM_FALSE@EPETRAEXT_TRANSFORM_LIB = 
@BUILD_TRANSFORM_TRUE@EPETRAEXT_TRANSFORM_H = \
@BUILD_TRANSFORM_TRUE@	$(TRANSFORM_H) \
@BUILD_TRANSFORM_TRUE@        $(BTF_H) \
@BUILD_TRANSFORM_TRUE@	$(MPI_H)

@BUILD_TRANSFORM_FALSE@EPETRAEXT_TRANSFORM_H = 


#Eventaully the Zoltan code will not be available in Trilinos/external/
#Until then, we will set up this path automatically.  Users who get the
#Zoltan source from somewhere else will need to specify the path.
@HAVE_EPETRAEXT_ZOLTAN_TRUE@EPETRAEXT_ZOLTAN_INCDIR = -I$(top_srcdir)/../../external/Zoltan_C++
@HAVE_EPETRAEXT_ZOLTAN_FALSE@EPETRAEXT_ZOLTAN_INCDIR = 

#We need the following to support separate build directories
AM_CPPFLAGS = -I$(top_builddir)/../epetra/src -I$(top_srcdir)/../epetra/src \
            $(EPETRAEXT_ZOLTAN_INCDIR)



# ------------------------------------------------------------------------
# For using a special archiver
# ------------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@libepetraext_trans_a_AR = $(ALTERNATE_AR)
@USE_ALTERNATE_AR_FALSE@libepetraext_trans_a_AR = $(AR) cru


# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# On alpha-dec machines, the extra .o's are needed for Epetra only.
# ------------------------------------------------------------------------
libepetraext_trans_a_LIBADD = $(TRILINOS_TEMPLATE_OBJS) $(XTRALDADD)


# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------
lib_LIBRARIES = $(EPETRAEXT_TRANSFORM_LIB)


# ------------------------------------------------------------------------
# List of all headers to install in $(includedir)
# ------------------------------------------------------------------------
include_HEADERS = $(EPETRAEXT_TRANSFORM_H) 


# ------------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# ------------------------------------------------------------------------

# SPECIAL NOTE: Epetra_config.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.
execincludedir = $(exec_prefix)/include
nodist_execinclude_HEADERS = ../EpetraExt_config.h


# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 


# ------------------------------------------------------------------------
# Files to be deleted by 'make clean'
# ------------------------------------------------------------------------
MOSTLYCLEANFILES = $(TRILINOS_TEMPLATE_OBJS)
subdir = src/transform
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/EpetraExt_config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libepetraext_trans_a_DEPENDENCIES =
am__objects_1 = EDT_CrsGraph_View.$(OBJEXT) EDT_CrsMatrix_View.$(OBJEXT) \
	EDT_MultiVector_View.$(OBJEXT) EDT_CrsGraph_Transpose.$(OBJEXT) \
	EDT_CrsGraph_MapColoring.$(OBJEXT) \
	EDT_CrsGraph_MapColoringIndex.$(OBJEXT) \
	EDT_LinearProblem_StaticCondensation.$(OBJEXT) \
	EDT_LinearProblem_CrsSingletonFilter.$(OBJEXT) \
	EDT_CrsGraph_SymmRCM.$(OBJEXT) \
	EDT_LinearProblem_GraphTrans.$(OBJEXT)
am__objects_2 = EDT_CrsGraph_BTF.$(OBJEXT) concmp.$(OBJEXT) \
	genbtf.$(OBJEXT) corsum.$(OBJEXT) finsum.$(OBJEXT) \
	fnrsum.$(OBJEXT) izero.$(OBJEXT) maxmatch.$(OBJEXT) \
	rectblk.$(OBJEXT) mmc13e.$(OBJEXT) prtivs.$(OBJEXT) \
	strchk.$(OBJEXT) mattrans.$(OBJEXT)
am__objects_3 = EDT_CrsGraph_Zoltan.$(OBJEXT) \
	EDT_LinearProblem_Zoltan.$(OBJEXT) \
	EDT_CrsGraph_ZoltanOrder.$(OBJEXT) Epetra_ZoltanQuery.$(OBJEXT)
@HAVE_EPETRAEXT_ZOLTAN_TRUE@am__objects_4 = $(am__objects_3)
@HAVE_EPETRAEXT_ZOLTAN_FALSE@am__objects_4 =
am__objects_5 = EDT_CrsGraph_Overlap.$(OBJEXT) $(am__objects_4)
@HAVE_MPI_TRUE@am__objects_6 = $(am__objects_5)
@HAVE_MPI_FALSE@am__objects_6 =
am_libepetraext_trans_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_6)
libepetraext_trans_a_OBJECTS = $(am_libepetraext_trans_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/src
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/EDT_CrsGraph_BTF.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsGraph_MapColoring.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsGraph_MapColoringIndex.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsGraph_Overlap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsGraph_SymmRCM.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsGraph_Transpose.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsGraph_View.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsGraph_Zoltan.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsGraph_ZoltanOrder.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_CrsMatrix_View.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_LinearProblem_CrsSingletonFilter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_LinearProblem_GraphTrans.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_LinearProblem_StaticCondensation.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_LinearProblem_Zoltan.Po \
@AMDEP_TRUE@	./$(DEPDIR)/EDT_MultiVector_View.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_ZoltanQuery.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
FFLAGS = @FFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libepetraext_trans_a_SOURCES) \
	$(EXTRA_libepetraext_trans_a_SOURCES)
HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS)

DIST_COMMON = $(include_HEADERS) Makefile.am Makefile.in
SOURCES = $(libepetraext_trans_a_SOURCES) $(EXTRA_libepetraext_trans_a_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .f .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/transform/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
EDT_CrsGraph_View.$(OBJEXT): $(srcdir)/EDT_CrsGraph_View.cpp
EDT_CrsMatrix_View.$(OBJEXT): $(srcdir)/EDT_CrsMatrix_View.cpp
EDT_MultiVector_View.$(OBJEXT): $(srcdir)/EDT_MultiVector_View.cpp
EDT_CrsGraph_Transpose.$(OBJEXT): $(srcdir)/EDT_CrsGraph_Transpose.cpp
EDT_CrsGraph_MapColoring.$(OBJEXT): \
	$(srcdir)/EDT_CrsGraph_MapColoring.cpp
EDT_CrsGraph_MapColoringIndex.$(OBJEXT): \
	$(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp
EDT_LinearProblem_StaticCondensation.$(OBJEXT): \
	$(srcdir)/EDT_LinearProblem_StaticCondensation.cpp
EDT_LinearProblem_CrsSingletonFilter.$(OBJEXT): \
	$(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp
EDT_CrsGraph_SymmRCM.$(OBJEXT): $(srcdir)/EDT_CrsGraph_SymmRCM.cpp
EDT_LinearProblem_GraphTrans.$(OBJEXT): \
	$(srcdir)/EDT_LinearProblem_GraphTrans.cpp
EDT_CrsGraph_BTF.$(OBJEXT): $(srcdir)/EDT_CrsGraph_BTF.cpp
concmp.$(OBJEXT): $(srcdir)/btf/concmp.f
genbtf.$(OBJEXT): $(srcdir)/btf/genbtf.f
corsum.$(OBJEXT): $(srcdir)/btf/corsum.f
finsum.$(OBJEXT): $(srcdir)/btf/finsum.f
fnrsum.$(OBJEXT): $(srcdir)/btf/fnrsum.f
izero.$(OBJEXT): $(srcdir)/btf/izero.f
maxmatch.$(OBJEXT): $(srcdir)/btf/maxmatch.f
rectblk.$(OBJEXT): $(srcdir)/btf/rectblk.f
mmc13e.$(OBJEXT): $(srcdir)/btf/mmc13e.f
prtivs.$(OBJEXT): $(srcdir)/btf/prtivs.f
strchk.$(OBJEXT): $(srcdir)/btf/strchk.f
mattrans.$(OBJEXT): $(srcdir)/btf/mattrans.f
EDT_CrsGraph_Overlap.$(OBJEXT): $(srcdir)/EDT_CrsGraph_Overlap.cpp
EDT_CrsGraph_Zoltan.$(OBJEXT): $(srcdir)/EDT_CrsGraph_Zoltan.cpp
EDT_LinearProblem_Zoltan.$(OBJEXT): \
	$(srcdir)/EDT_LinearProblem_Zoltan.cpp
EDT_CrsGraph_ZoltanOrder.$(OBJEXT): \
	$(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp
Epetra_ZoltanQuery.$(OBJEXT): $(srcdir)/Epetra_ZoltanQuery.cpp
libepetraext_trans.a: $(libepetraext_trans_a_OBJECTS) $(libepetraext_trans_a_DEPENDENCIES) 
	-rm -f libepetraext_trans.a
	$(libepetraext_trans_a_AR) libepetraext_trans.a $(libepetraext_trans_a_OBJECTS) $(libepetraext_trans_a_LIBADD)
	$(RANLIB) libepetraext_trans.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_BTF.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_MapColoring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_MapColoringIndex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_Overlap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_SymmRCM.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_Transpose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_View.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_Zoltan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsGraph_ZoltanOrder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_CrsMatrix_View.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_LinearProblem_CrsSingletonFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_LinearProblem_GraphTrans.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_LinearProblem_StaticCondensation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_LinearProblem_Zoltan.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/EDT_MultiVector_View.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_ZoltanQuery.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

EDT_CrsGraph_View.o: $(srcdir)/EDT_CrsGraph_View.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_View.cpp' object='EDT_CrsGraph_View.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_View.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_View.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_View.o `test -f '$(srcdir)/EDT_CrsGraph_View.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_View.cpp

EDT_CrsGraph_View.obj: $(srcdir)/EDT_CrsGraph_View.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_View.cpp' object='EDT_CrsGraph_View.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_View.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_View.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_View.obj `cygpath -w $(srcdir)/EDT_CrsGraph_View.cpp`

EDT_CrsMatrix_View.o: $(srcdir)/EDT_CrsMatrix_View.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsMatrix_View.cpp' object='EDT_CrsMatrix_View.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsMatrix_View.Po' tmpdepfile='$(DEPDIR)/EDT_CrsMatrix_View.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsMatrix_View.o `test -f '$(srcdir)/EDT_CrsMatrix_View.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsMatrix_View.cpp

EDT_CrsMatrix_View.obj: $(srcdir)/EDT_CrsMatrix_View.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsMatrix_View.cpp' object='EDT_CrsMatrix_View.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsMatrix_View.Po' tmpdepfile='$(DEPDIR)/EDT_CrsMatrix_View.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsMatrix_View.obj `cygpath -w $(srcdir)/EDT_CrsMatrix_View.cpp`

EDT_MultiVector_View.o: $(srcdir)/EDT_MultiVector_View.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_MultiVector_View.cpp' object='EDT_MultiVector_View.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_MultiVector_View.Po' tmpdepfile='$(DEPDIR)/EDT_MultiVector_View.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_MultiVector_View.o `test -f '$(srcdir)/EDT_MultiVector_View.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_MultiVector_View.cpp

EDT_MultiVector_View.obj: $(srcdir)/EDT_MultiVector_View.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_MultiVector_View.cpp' object='EDT_MultiVector_View.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_MultiVector_View.Po' tmpdepfile='$(DEPDIR)/EDT_MultiVector_View.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_MultiVector_View.obj `cygpath -w $(srcdir)/EDT_MultiVector_View.cpp`

EDT_CrsGraph_Transpose.o: $(srcdir)/EDT_CrsGraph_Transpose.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_Transpose.cpp' object='EDT_CrsGraph_Transpose.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_Transpose.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_Transpose.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_Transpose.o `test -f '$(srcdir)/EDT_CrsGraph_Transpose.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_Transpose.cpp

EDT_CrsGraph_Transpose.obj: $(srcdir)/EDT_CrsGraph_Transpose.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_Transpose.cpp' object='EDT_CrsGraph_Transpose.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_Transpose.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_Transpose.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_Transpose.obj `cygpath -w $(srcdir)/EDT_CrsGraph_Transpose.cpp`

EDT_CrsGraph_MapColoring.o: $(srcdir)/EDT_CrsGraph_MapColoring.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_MapColoring.cpp' object='EDT_CrsGraph_MapColoring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_MapColoring.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_MapColoring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_MapColoring.o `test -f '$(srcdir)/EDT_CrsGraph_MapColoring.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_MapColoring.cpp

EDT_CrsGraph_MapColoring.obj: $(srcdir)/EDT_CrsGraph_MapColoring.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_MapColoring.cpp' object='EDT_CrsGraph_MapColoring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_MapColoring.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_MapColoring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_MapColoring.obj `cygpath -w $(srcdir)/EDT_CrsGraph_MapColoring.cpp`

EDT_CrsGraph_MapColoringIndex.o: $(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp' object='EDT_CrsGraph_MapColoringIndex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_MapColoringIndex.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_MapColoringIndex.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_MapColoringIndex.o `test -f '$(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp

EDT_CrsGraph_MapColoringIndex.obj: $(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp' object='EDT_CrsGraph_MapColoringIndex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_MapColoringIndex.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_MapColoringIndex.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_MapColoringIndex.obj `cygpath -w $(srcdir)/EDT_CrsGraph_MapColoringIndex.cpp`

EDT_LinearProblem_StaticCondensation.o: $(srcdir)/EDT_LinearProblem_StaticCondensation.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_LinearProblem_StaticCondensation.cpp' object='EDT_LinearProblem_StaticCondensation.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_LinearProblem_StaticCondensation.Po' tmpdepfile='$(DEPDIR)/EDT_LinearProblem_StaticCondensation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_LinearProblem_StaticCondensation.o `test -f '$(srcdir)/EDT_LinearProblem_StaticCondensation.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_LinearProblem_StaticCondensation.cpp

EDT_LinearProblem_StaticCondensation.obj: $(srcdir)/EDT_LinearProblem_StaticCondensation.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_LinearProblem_StaticCondensation.cpp' object='EDT_LinearProblem_StaticCondensation.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_LinearProblem_StaticCondensation.Po' tmpdepfile='$(DEPDIR)/EDT_LinearProblem_StaticCondensation.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_LinearProblem_StaticCondensation.obj `cygpath -w $(srcdir)/EDT_LinearProblem_StaticCondensation.cpp`

EDT_LinearProblem_CrsSingletonFilter.o: $(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp' object='EDT_LinearProblem_CrsSingletonFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_LinearProblem_CrsSingletonFilter.Po' tmpdepfile='$(DEPDIR)/EDT_LinearProblem_CrsSingletonFilter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_LinearProblem_CrsSingletonFilter.o `test -f '$(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp

EDT_LinearProblem_CrsSingletonFilter.obj: $(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp' object='EDT_LinearProblem_CrsSingletonFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_LinearProblem_CrsSingletonFilter.Po' tmpdepfile='$(DEPDIR)/EDT_LinearProblem_CrsSingletonFilter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_LinearProblem_CrsSingletonFilter.obj `cygpath -w $(srcdir)/EDT_LinearProblem_CrsSingletonFilter.cpp`

EDT_CrsGraph_SymmRCM.o: $(srcdir)/EDT_CrsGraph_SymmRCM.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_SymmRCM.cpp' object='EDT_CrsGraph_SymmRCM.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_SymmRCM.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_SymmRCM.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_SymmRCM.o `test -f '$(srcdir)/EDT_CrsGraph_SymmRCM.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_SymmRCM.cpp

EDT_CrsGraph_SymmRCM.obj: $(srcdir)/EDT_CrsGraph_SymmRCM.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_SymmRCM.cpp' object='EDT_CrsGraph_SymmRCM.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_SymmRCM.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_SymmRCM.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_SymmRCM.obj `cygpath -w $(srcdir)/EDT_CrsGraph_SymmRCM.cpp`

EDT_LinearProblem_GraphTrans.o: $(srcdir)/EDT_LinearProblem_GraphTrans.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_LinearProblem_GraphTrans.cpp' object='EDT_LinearProblem_GraphTrans.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_LinearProblem_GraphTrans.Po' tmpdepfile='$(DEPDIR)/EDT_LinearProblem_GraphTrans.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_LinearProblem_GraphTrans.o `test -f '$(srcdir)/EDT_LinearProblem_GraphTrans.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_LinearProblem_GraphTrans.cpp

EDT_LinearProblem_GraphTrans.obj: $(srcdir)/EDT_LinearProblem_GraphTrans.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_LinearProblem_GraphTrans.cpp' object='EDT_LinearProblem_GraphTrans.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_LinearProblem_GraphTrans.Po' tmpdepfile='$(DEPDIR)/EDT_LinearProblem_GraphTrans.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_LinearProblem_GraphTrans.obj `cygpath -w $(srcdir)/EDT_LinearProblem_GraphTrans.cpp`

EDT_CrsGraph_BTF.o: $(srcdir)/EDT_CrsGraph_BTF.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_BTF.cpp' object='EDT_CrsGraph_BTF.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_BTF.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_BTF.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_BTF.o `test -f '$(srcdir)/EDT_CrsGraph_BTF.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_BTF.cpp

EDT_CrsGraph_BTF.obj: $(srcdir)/EDT_CrsGraph_BTF.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_BTF.cpp' object='EDT_CrsGraph_BTF.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_BTF.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_BTF.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_BTF.obj `cygpath -w $(srcdir)/EDT_CrsGraph_BTF.cpp`

EDT_CrsGraph_Overlap.o: $(srcdir)/EDT_CrsGraph_Overlap.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_Overlap.cpp' object='EDT_CrsGraph_Overlap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_Overlap.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_Overlap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_Overlap.o `test -f '$(srcdir)/EDT_CrsGraph_Overlap.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_Overlap.cpp

EDT_CrsGraph_Overlap.obj: $(srcdir)/EDT_CrsGraph_Overlap.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_Overlap.cpp' object='EDT_CrsGraph_Overlap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_Overlap.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_Overlap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_Overlap.obj `cygpath -w $(srcdir)/EDT_CrsGraph_Overlap.cpp`

EDT_CrsGraph_Zoltan.o: $(srcdir)/EDT_CrsGraph_Zoltan.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_Zoltan.cpp' object='EDT_CrsGraph_Zoltan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_Zoltan.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_Zoltan.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_Zoltan.o `test -f '$(srcdir)/EDT_CrsGraph_Zoltan.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_Zoltan.cpp

EDT_CrsGraph_Zoltan.obj: $(srcdir)/EDT_CrsGraph_Zoltan.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_Zoltan.cpp' object='EDT_CrsGraph_Zoltan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_Zoltan.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_Zoltan.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_Zoltan.obj `cygpath -w $(srcdir)/EDT_CrsGraph_Zoltan.cpp`

EDT_LinearProblem_Zoltan.o: $(srcdir)/EDT_LinearProblem_Zoltan.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_LinearProblem_Zoltan.cpp' object='EDT_LinearProblem_Zoltan.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_LinearProblem_Zoltan.Po' tmpdepfile='$(DEPDIR)/EDT_LinearProblem_Zoltan.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_LinearProblem_Zoltan.o `test -f '$(srcdir)/EDT_LinearProblem_Zoltan.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_LinearProblem_Zoltan.cpp

EDT_LinearProblem_Zoltan.obj: $(srcdir)/EDT_LinearProblem_Zoltan.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_LinearProblem_Zoltan.cpp' object='EDT_LinearProblem_Zoltan.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_LinearProblem_Zoltan.Po' tmpdepfile='$(DEPDIR)/EDT_LinearProblem_Zoltan.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_LinearProblem_Zoltan.obj `cygpath -w $(srcdir)/EDT_LinearProblem_Zoltan.cpp`

EDT_CrsGraph_ZoltanOrder.o: $(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp' object='EDT_CrsGraph_ZoltanOrder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_ZoltanOrder.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_ZoltanOrder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_ZoltanOrder.o `test -f '$(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp' || echo '$(srcdir)/'`$(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp

EDT_CrsGraph_ZoltanOrder.obj: $(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp
@AMDEP_TRUE@	source='$(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp' object='EDT_CrsGraph_ZoltanOrder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/EDT_CrsGraph_ZoltanOrder.Po' tmpdepfile='$(DEPDIR)/EDT_CrsGraph_ZoltanOrder.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EDT_CrsGraph_ZoltanOrder.obj `cygpath -w $(srcdir)/EDT_CrsGraph_ZoltanOrder.cpp`

Epetra_ZoltanQuery.o: $(srcdir)/Epetra_ZoltanQuery.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_ZoltanQuery.cpp' object='Epetra_ZoltanQuery.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_ZoltanQuery.Po' tmpdepfile='$(DEPDIR)/Epetra_ZoltanQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_ZoltanQuery.o `test -f '$(srcdir)/Epetra_ZoltanQuery.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_ZoltanQuery.cpp

Epetra_ZoltanQuery.obj: $(srcdir)/Epetra_ZoltanQuery.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_ZoltanQuery.cpp' object='Epetra_ZoltanQuery.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_ZoltanQuery.Po' tmpdepfile='$(DEPDIR)/Epetra_ZoltanQuery.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_ZoltanQuery.obj `cygpath -w $(srcdir)/Epetra_ZoltanQuery.cpp`
CXXDEPMODE = @CXXDEPMODE@

.f.o:
	$(F77COMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.f.obj:
	$(F77COMPILE) -c -o $@ `cygpath -w $<`

concmp.o: $(srcdir)/btf/concmp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o concmp.o `test -f '$(srcdir)/btf/concmp.f' || echo '$(srcdir)/'`$(srcdir)/btf/concmp.f

concmp.obj: $(srcdir)/btf/concmp.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o concmp.obj `cygpath -w $(srcdir)/btf/concmp.f`

genbtf.o: $(srcdir)/btf/genbtf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o genbtf.o `test -f '$(srcdir)/btf/genbtf.f' || echo '$(srcdir)/'`$(srcdir)/btf/genbtf.f

genbtf.obj: $(srcdir)/btf/genbtf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o genbtf.obj `cygpath -w $(srcdir)/btf/genbtf.f`

corsum.o: $(srcdir)/btf/corsum.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o corsum.o `test -f '$(srcdir)/btf/corsum.f' || echo '$(srcdir)/'`$(srcdir)/btf/corsum.f

corsum.obj: $(srcdir)/btf/corsum.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o corsum.obj `cygpath -w $(srcdir)/btf/corsum.f`

finsum.o: $(srcdir)/btf/finsum.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o finsum.o `test -f '$(srcdir)/btf/finsum.f' || echo '$(srcdir)/'`$(srcdir)/btf/finsum.f

finsum.obj: $(srcdir)/btf/finsum.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o finsum.obj `cygpath -w $(srcdir)/btf/finsum.f`

fnrsum.o: $(srcdir)/btf/fnrsum.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o fnrsum.o `test -f '$(srcdir)/btf/fnrsum.f' || echo '$(srcdir)/'`$(srcdir)/btf/fnrsum.f

fnrsum.obj: $(srcdir)/btf/fnrsum.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o fnrsum.obj `cygpath -w $(srcdir)/btf/fnrsum.f`

izero.o: $(srcdir)/btf/izero.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o izero.o `test -f '$(srcdir)/btf/izero.f' || echo '$(srcdir)/'`$(srcdir)/btf/izero.f

izero.obj: $(srcdir)/btf/izero.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o izero.obj `cygpath -w $(srcdir)/btf/izero.f`

maxmatch.o: $(srcdir)/btf/maxmatch.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o maxmatch.o `test -f '$(srcdir)/btf/maxmatch.f' || echo '$(srcdir)/'`$(srcdir)/btf/maxmatch.f

maxmatch.obj: $(srcdir)/btf/maxmatch.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o maxmatch.obj `cygpath -w $(srcdir)/btf/maxmatch.f`

rectblk.o: $(srcdir)/btf/rectblk.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o rectblk.o `test -f '$(srcdir)/btf/rectblk.f' || echo '$(srcdir)/'`$(srcdir)/btf/rectblk.f

rectblk.obj: $(srcdir)/btf/rectblk.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o rectblk.obj `cygpath -w $(srcdir)/btf/rectblk.f`

mmc13e.o: $(srcdir)/btf/mmc13e.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mmc13e.o `test -f '$(srcdir)/btf/mmc13e.f' || echo '$(srcdir)/'`$(srcdir)/btf/mmc13e.f

mmc13e.obj: $(srcdir)/btf/mmc13e.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mmc13e.obj `cygpath -w $(srcdir)/btf/mmc13e.f`

prtivs.o: $(srcdir)/btf/prtivs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o prtivs.o `test -f '$(srcdir)/btf/prtivs.f' || echo '$(srcdir)/'`$(srcdir)/btf/prtivs.f

prtivs.obj: $(srcdir)/btf/prtivs.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o prtivs.obj `cygpath -w $(srcdir)/btf/prtivs.f`

strchk.o: $(srcdir)/btf/strchk.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o strchk.o `test -f '$(srcdir)/btf/strchk.f' || echo '$(srcdir)/'`$(srcdir)/btf/strchk.f

strchk.obj: $(srcdir)/btf/strchk.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o strchk.obj `cygpath -w $(srcdir)/btf/strchk.f`

mattrans.o: $(srcdir)/btf/mattrans.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mattrans.o `test -f '$(srcdir)/btf/mattrans.f' || echo '$(srcdir)/'`$(srcdir)/btf/mattrans.f

mattrans.obj: $(srcdir)/btf/mattrans.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mattrans.obj `cygpath -w $(srcdir)/btf/mattrans.f`
uninstall-info-am:
includeHEADERS_INSTALL = $(INSTALL_HEADER)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done
nodist_execincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(execincludedir)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(nodist_execincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(execincludedir)/$$f"; \
	  $(nodist_execincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(execincludedir)/$$f; \
	done

uninstall-nodist_execincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(execincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(execincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/$(srcdir)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(includedir) $(DESTDIR)$(execincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-libLIBRARIES install-nodist_execincludeHEADERS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_execincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES distclean distclean-compile distclean-depend \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-includeHEADERS \
	install-info install-info-am install-libLIBRARIES install-man \
	install-nodist_execincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_execincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
