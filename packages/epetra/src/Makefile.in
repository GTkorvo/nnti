# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# ************************************************************************
# 
#            Trilinos: An Object-Oriented Solver Framework
#                Copyright (2001) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#   
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#   
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
# 
# Questions? Contact Michael A. Heroux (maherou@sandia.gov)
# 
# ************************************************************************
# @HEADER

# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside Epetra. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
ALTERNATE_AR = @ALTERNATE_AR@
AMTAR = @AMTAR@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
F77 = @F77@
FLIBS = @FLIBS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
MAINT = @MAINT@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
MPI_TEMP_CXX = @MPI_TEMP_CXX@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
TRILINOS_TEMPLATE_OBJS = @TRILINOS_TEMPLATE_OBJS@
VERSION = @VERSION@
ac_aux_dir = @ac_aux_dir@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

CORE_H = \
	$(srcdir)/Epetra_BLAS.h \
	$(srcdir)/Epetra_LAPACK.h \
	$(srcdir)/Epetra_BLAS_wrappers.h \
	$(srcdir)/Epetra_LAPACK_wrappers.h \
	$(srcdir)/Epetra_Comm.h \
	$(srcdir)/Epetra_Object.h \
	$(srcdir)/Epetra_ConfigDefs.h


CORE = \
	$(srcdir)/Epetra_BLAS.cpp \
	$(srcdir)/Epetra_LAPACK.cpp \
	$(srcdir)/Epetra_Object.cpp


UTIL_H = \
	$(srcdir)/Epetra_Flops.h \
	$(srcdir)/Epetra_Time.h \
	$(srcdir)/Epetra_Util.h \
	$(srcdir)/Epetra_DataAccess.h \
	$(srcdir)/Epetra_HashTable.h \
	$(srcdir)/Epetra_RowMatrixTransposer.h \
	$(srcdir)/Epetra_Data.h


UTIL = \
	$(srcdir)/Epetra_Flops.cpp \
	$(srcdir)/Epetra_Time.cpp \
	$(srcdir)/Epetra_Util.cpp \
	$(srcdir)/Epetra_RowMatrixTransposer.cpp \
	$(srcdir)/Epetra_Data.cpp


ENUM_H = \
	$(srcdir)/Epetra_CombineMode.h \
	$(srcdir)/Epetra_DataAccess.h


UNIPROC_H = \
	$(srcdir)/Epetra_SerialDenseMatrix.h  \
	$(srcdir)/Epetra_SerialSpdDenseSolver.h \
	$(srcdir)/Epetra_SerialDenseSolver.h   \
	$(srcdir)/Epetra_SerialSymDenseMatrix.h \
	$(srcdir)/Epetra_SerialDenseVector.h \
	$(srcdir)/Epetra_IntSerialDenseMatrix.h \
	$(srcdir)/Epetra_IntSerialDenseVector.h


UNIPROC = \
	$(srcdir)/Epetra_SerialDenseMatrix.cpp  \
	$(srcdir)/Epetra_SerialSpdDenseSolver.cpp \
	$(srcdir)/Epetra_SerialDenseSolver.cpp   \
	$(srcdir)/Epetra_SerialSymDenseMatrix.cpp \
	$(srcdir)/Epetra_SerialDenseVector.cpp \
	$(srcdir)/Epetra_IntSerialDenseMatrix.cpp  \
	$(srcdir)/Epetra_IntSerialDenseVector.cpp 


SERIAL_H = \
	$(srcdir)/Epetra_SerialComm.h  \
	$(srcdir)/Epetra_SerialCommData.h  \
	$(srcdir)/Epetra_SerialDistributor.h


SERIAL = \
	$(srcdir)/Epetra_SerialComm.cpp  \
	$(srcdir)/Epetra_SerialCommData.cpp  \
	$(srcdir)/Epetra_SerialDistributor.cpp


EXTRA_MPI_H = \
	$(srcdir)/Epetra_MpiComm.h  \
	$(srcdir)/Epetra_MpiCommData.h  \
	$(srcdir)/Epetra_MpiDistributor.h 


EXTRA_MPI = \
	$(srcdir)/Epetra_MpiComm.cpp  \
	$(srcdir)/Epetra_MpiCommData.cpp  \
	$(srcdir)/Epetra_MpiDistributor.cpp


@HAVE_MPI_TRUE@MPI_H = \
@HAVE_MPI_TRUE@	$(EXTRA_MPI_H)

@HAVE_MPI_FALSE@MPI_H = 
@HAVE_MPI_TRUE@MPI = \
@HAVE_MPI_TRUE@	$(EXTRA_MPI)

@HAVE_MPI_FALSE@MPI = 

EXTRA_MPISMP_H = \
	$(srcdir)/Epetra_MpiComm.h \
	$(srcdir)/Epetra_MpiCommData.h \
	$(srcdir)/Epetra_MpiSmpComm.h \
	$(srcdir)/Epetra_MpiSmpCommData.h


EXTRA_MPISMP = \
	$(srcdir)/Epetra_MpiComm.cpp \
	$(srcdir)/Epetra_MpiCommData.cpp \
	$(srcdir)/Epetra_MpiSmpComm.cpp \
	$(srcdir)/Epetra_MpiSmpCommData.cpp


@HAVE_THREADS_TRUE@MPISMP_H = \
@HAVE_THREADS_TRUE@	$(EXTRA_MPISMP_H)

@HAVE_THREADS_FALSE@MPISMP_H = 
@HAVE_THREADS_TRUE@MPISMP = \
@HAVE_THREADS_TRUE@	$(EXTRA_MPISMP)

@HAVE_THREADS_FALSE@MPISMP = 

USERBASE_H = \
	$(srcdir)/Epetra_Operator.h \
	$(srcdir)/Epetra_RowMatrix.h


LANG_WRAPS_H = \
	$(srcdir)/Epetra_C_wrappers.h \
	$(srcdir)/Epetra_Fortran_wrappers.h


LANG_WRAPS = \
	$(srcdir)/Epetra_C_wrappers.cpp \
	$(srcdir)/Epetra_Fortran_wrappers.cpp


DIST_H = \
	$(srcdir)/Epetra_BasicDirectory.h \
	$(srcdir)/Epetra_BlockMap.h \
	$(srcdir)/Epetra_BlockMapData.h \
	$(srcdir)/Epetra_Directory.h \
	$(srcdir)/Epetra_SrcDistObject.h \
	$(srcdir)/Epetra_DistObject.h \
	$(srcdir)/Epetra_Distributor.h \
	$(srcdir)/Epetra_Export.h \
	$(srcdir)/Epetra_Import.h \
	$(srcdir)/Epetra_LocalMap.h \
	$(srcdir)/Epetra_Map.h \
	$(srcdir)/Epetra_MapColoring.h


DIST = \
	$(srcdir)/Epetra_BasicDirectory.cpp \
	$(srcdir)/Epetra_BlockMap.cpp \
	$(srcdir)/Epetra_BlockMapData.cpp \
	$(srcdir)/Epetra_DistObject.cpp \
	$(srcdir)/Epetra_Export.cpp \
	$(srcdir)/Epetra_Import.cpp \
	$(srcdir)/Epetra_LocalMap.cpp \
	$(srcdir)/Epetra_Map.cpp \
	$(srcdir)/Epetra_MapColoring.cpp


COMP_H = \
	$(srcdir)/Epetra_CompObject.h \
	$(srcdir)/Epetra_CrsGraph.h \
	$(srcdir)/Epetra_CrsGraphData.h \
	$(srcdir)/Epetra_CrsMatrix.h \
	$(srcdir)/Epetra_LinearProblem.h \
	$(srcdir)/Epetra_MultiVector.h \
	$(srcdir)/Epetra_VbrMatrix.h \
	$(srcdir)/Epetra_Vector.h \
	$(srcdir)/Epetra_CrsSingletonFilter.h \
	$(srcdir)/Epetra_FECrsMatrix.h \
	$(srcdir)/Epetra_FEVbrMatrix.h \
	$(srcdir)/Epetra_FEVector.h \
	$(srcdir)/Epetra_IntVector.h


COMP = \
	$(srcdir)/Epetra_CompObject.cpp \
	$(srcdir)/Epetra_CrsGraph.cpp \
	$(srcdir)/Epetra_CrsGraphData.cpp \
	$(srcdir)/Epetra_CrsMatrix.cpp \
	$(srcdir)/Epetra_LinearProblem.cpp \
	$(srcdir)/Epetra_MultiVector.cpp \
	$(srcdir)/Epetra_VbrMatrix.cpp \
	$(srcdir)/Epetra_Vector.cpp \
	$(srcdir)/Epetra_CrsSingletonFilter.cpp \
	$(srcdir)/Epetra_FECrsMatrix.cpp \
	$(srcdir)/Epetra_FEVbrMatrix.cpp \
	$(srcdir)/Epetra_FEVector.cpp \
	$(srcdir)/Epetra_IntVector.cpp



# ------------------------------------------------------------------------
# Epetra library specifications
# ------------------------------------------------------------------------
EPETRA_LIB = libepetra.a

EPETRA_H = \
	$(CORE_H) \
	$(UTIL_H) \
	$(ENUM_H) \
	$(UNIPROC_H) \
	$(SERIAL_H) \
	$(USERBASE_H) \
	$(DIST_H) \
	$(COMP_H) \
	$(MPI_H) \
	$(MPISMP_H)


libepetra_a_SOURCES = \
	$(CORE) \
	$(UTIL) \
	$(UNIPROC) \
	$(SERIAL) \
	$(DIST) \
	$(COMP) \
	$(MPI) \
	$(MPISMP)


EXTRA_libepetra_a_SOURCES = \
	$(EXTRA_MPI) \
	$(EXTRA_MPI_H) \
	$(EXTRA_MPISMP) \
	$(EXTRA_MPISMP_H)



#We need the following to support separate build directories
#AM_CPPFLAGS=-I$(builddir)/src
# ------------------------------------------------------------------------
# For using a special archiver
# ------------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@libepetra_a_AR = $(ALTERNATE_AR)
@USE_ALTERNATE_AR_FALSE@libepetra_a_AR = $(AR) cru


# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# On alpha-dec machines, the extra .o's are needed for Epetra only.
# ------------------------------------------------------------------------
libepetra_a_LIBADD = $(TRILINOS_TEMPLATE_OBJS) $(XTRALDADD)


# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------
lib_LIBRARIES = $(EPETRA_LIB)


# ------------------------------------------------------------------------
# List of all headers to install in $(includedir)
# ------------------------------------------------------------------------
include_HEADERS = $(EPETRA_H) 


# ------------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# ------------------------------------------------------------------------

# SPECIAL NOTE: Epetra_config.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.
execincludedir = $(exec_prefix)/include
nodist_execinclude_HEADERS = Epetra_config.h


# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = Epetra_config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libepetra_a_DEPENDENCIES =
am__objects_1 = Epetra_BLAS.$(OBJEXT) Epetra_LAPACK.$(OBJEXT) \
	Epetra_Object.$(OBJEXT)
am__objects_2 = Epetra_Flops.$(OBJEXT) Epetra_Time.$(OBJEXT) \
	Epetra_Util.$(OBJEXT) Epetra_RowMatrixTransposer.$(OBJEXT) \
	Epetra_Data.$(OBJEXT)
am__objects_3 = Epetra_SerialDenseMatrix.$(OBJEXT) \
	Epetra_SerialSpdDenseSolver.$(OBJEXT) \
	Epetra_SerialDenseSolver.$(OBJEXT) \
	Epetra_SerialSymDenseMatrix.$(OBJEXT) \
	Epetra_SerialDenseVector.$(OBJEXT) \
	Epetra_IntSerialDenseMatrix.$(OBJEXT) \
	Epetra_IntSerialDenseVector.$(OBJEXT)
am__objects_4 = Epetra_SerialComm.$(OBJEXT) \
	Epetra_SerialCommData.$(OBJEXT) \
	Epetra_SerialDistributor.$(OBJEXT)
am__objects_5 = Epetra_BasicDirectory.$(OBJEXT) \
	Epetra_BlockMap.$(OBJEXT) Epetra_BlockMapData.$(OBJEXT) \
	Epetra_DistObject.$(OBJEXT) Epetra_Export.$(OBJEXT) \
	Epetra_Import.$(OBJEXT) Epetra_LocalMap.$(OBJEXT) \
	Epetra_Map.$(OBJEXT) Epetra_MapColoring.$(OBJEXT)
am__objects_6 = Epetra_CompObject.$(OBJEXT) Epetra_CrsGraph.$(OBJEXT) \
	Epetra_CrsGraphData.$(OBJEXT) Epetra_CrsMatrix.$(OBJEXT) \
	Epetra_LinearProblem.$(OBJEXT) Epetra_MultiVector.$(OBJEXT) \
	Epetra_VbrMatrix.$(OBJEXT) Epetra_Vector.$(OBJEXT) \
	Epetra_CrsSingletonFilter.$(OBJEXT) \
	Epetra_FECrsMatrix.$(OBJEXT) Epetra_FEVbrMatrix.$(OBJEXT) \
	Epetra_FEVector.$(OBJEXT) Epetra_IntVector.$(OBJEXT)
am__objects_7 = Epetra_MpiComm.$(OBJEXT) Epetra_MpiCommData.$(OBJEXT) \
	Epetra_MpiDistributor.$(OBJEXT)
@HAVE_MPI_TRUE@am__objects_8 = $(am__objects_7)
@HAVE_MPI_FALSE@am__objects_8 =
am__objects_9 = Epetra_MpiComm.$(OBJEXT) Epetra_MpiCommData.$(OBJEXT) \
	Epetra_MpiSmpComm.$(OBJEXT) Epetra_MpiSmpCommData.$(OBJEXT)
@HAVE_THREADS_TRUE@am__objects_10 = $(am__objects_9)
@HAVE_THREADS_FALSE@am__objects_10 =
am_libepetra_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_8) $(am__objects_10)
libepetra_a_OBJECTS = $(am_libepetra_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Epetra_BLAS.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_BasicDirectory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_BlockMap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_BlockMapData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_CompObject.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_CrsGraph.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_CrsGraphData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_CrsMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_CrsSingletonFilter.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Data.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_DistObject.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Export.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_FECrsMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_FEVbrMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_FEVector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Flops.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Import.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_IntSerialDenseMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_IntSerialDenseVector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_IntVector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_LAPACK.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_LinearProblem.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_LocalMap.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Map.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_MapColoring.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_MpiComm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_MpiCommData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_MpiDistributor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_MpiSmpComm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_MpiSmpCommData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_MultiVector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Object.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_RowMatrixTransposer.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SerialComm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SerialCommData.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SerialDenseMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SerialDenseSolver.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SerialDenseVector.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SerialDistributor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SerialSpdDenseSolver.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SerialSymDenseMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Time.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Util.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_VbrMatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_Vector.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libepetra_a_SOURCES) $(EXTRA_libepetra_a_SOURCES)
HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS)

DIST_COMMON = $(include_HEADERS) Epetra_config.h.in Makefile.am \
	Makefile.in
SOURCES = $(libepetra_a_SOURCES) $(EXTRA_libepetra_a_SOURCES)

all: Epetra_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

Epetra_config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/Epetra_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/Epetra_config.h

$(srcdir)/Epetra_config.h.in: @MAINTAINER_MODE_TRUE@ $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/Epetra_config.h.in

distclean-hdr:
	-rm -f Epetra_config.h stamp-h1

AR = ar
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
Epetra_BLAS.$(OBJEXT): $(srcdir)/Epetra_BLAS.cpp
Epetra_LAPACK.$(OBJEXT): $(srcdir)/Epetra_LAPACK.cpp
Epetra_Object.$(OBJEXT): $(srcdir)/Epetra_Object.cpp
Epetra_Flops.$(OBJEXT): $(srcdir)/Epetra_Flops.cpp
Epetra_Time.$(OBJEXT): $(srcdir)/Epetra_Time.cpp
Epetra_Util.$(OBJEXT): $(srcdir)/Epetra_Util.cpp
Epetra_RowMatrixTransposer.$(OBJEXT): \
	$(srcdir)/Epetra_RowMatrixTransposer.cpp
Epetra_Data.$(OBJEXT): $(srcdir)/Epetra_Data.cpp
Epetra_SerialDenseMatrix.$(OBJEXT): \
	$(srcdir)/Epetra_SerialDenseMatrix.cpp
Epetra_SerialSpdDenseSolver.$(OBJEXT): \
	$(srcdir)/Epetra_SerialSpdDenseSolver.cpp
Epetra_SerialDenseSolver.$(OBJEXT): \
	$(srcdir)/Epetra_SerialDenseSolver.cpp
Epetra_SerialSymDenseMatrix.$(OBJEXT): \
	$(srcdir)/Epetra_SerialSymDenseMatrix.cpp
Epetra_SerialDenseVector.$(OBJEXT): \
	$(srcdir)/Epetra_SerialDenseVector.cpp
Epetra_IntSerialDenseMatrix.$(OBJEXT): \
	$(srcdir)/Epetra_IntSerialDenseMatrix.cpp
Epetra_IntSerialDenseVector.$(OBJEXT): \
	$(srcdir)/Epetra_IntSerialDenseVector.cpp
Epetra_SerialComm.$(OBJEXT): $(srcdir)/Epetra_SerialComm.cpp
Epetra_SerialCommData.$(OBJEXT): $(srcdir)/Epetra_SerialCommData.cpp
Epetra_SerialDistributor.$(OBJEXT): \
	$(srcdir)/Epetra_SerialDistributor.cpp
Epetra_BasicDirectory.$(OBJEXT): $(srcdir)/Epetra_BasicDirectory.cpp
Epetra_BlockMap.$(OBJEXT): $(srcdir)/Epetra_BlockMap.cpp
Epetra_BlockMapData.$(OBJEXT): $(srcdir)/Epetra_BlockMapData.cpp
Epetra_DistObject.$(OBJEXT): $(srcdir)/Epetra_DistObject.cpp
Epetra_Export.$(OBJEXT): $(srcdir)/Epetra_Export.cpp
Epetra_Import.$(OBJEXT): $(srcdir)/Epetra_Import.cpp
Epetra_LocalMap.$(OBJEXT): $(srcdir)/Epetra_LocalMap.cpp
Epetra_Map.$(OBJEXT): $(srcdir)/Epetra_Map.cpp
Epetra_MapColoring.$(OBJEXT): $(srcdir)/Epetra_MapColoring.cpp
Epetra_CompObject.$(OBJEXT): $(srcdir)/Epetra_CompObject.cpp
Epetra_CrsGraph.$(OBJEXT): $(srcdir)/Epetra_CrsGraph.cpp
Epetra_CrsGraphData.$(OBJEXT): $(srcdir)/Epetra_CrsGraphData.cpp
Epetra_CrsMatrix.$(OBJEXT): $(srcdir)/Epetra_CrsMatrix.cpp
Epetra_LinearProblem.$(OBJEXT): $(srcdir)/Epetra_LinearProblem.cpp
Epetra_MultiVector.$(OBJEXT): $(srcdir)/Epetra_MultiVector.cpp
Epetra_VbrMatrix.$(OBJEXT): $(srcdir)/Epetra_VbrMatrix.cpp
Epetra_Vector.$(OBJEXT): $(srcdir)/Epetra_Vector.cpp
Epetra_CrsSingletonFilter.$(OBJEXT): \
	$(srcdir)/Epetra_CrsSingletonFilter.cpp
Epetra_FECrsMatrix.$(OBJEXT): $(srcdir)/Epetra_FECrsMatrix.cpp
Epetra_FEVbrMatrix.$(OBJEXT): $(srcdir)/Epetra_FEVbrMatrix.cpp
Epetra_FEVector.$(OBJEXT): $(srcdir)/Epetra_FEVector.cpp
Epetra_IntVector.$(OBJEXT): $(srcdir)/Epetra_IntVector.cpp
Epetra_MpiComm.$(OBJEXT): $(srcdir)/Epetra_MpiComm.cpp
Epetra_MpiCommData.$(OBJEXT): $(srcdir)/Epetra_MpiCommData.cpp
Epetra_MpiDistributor.$(OBJEXT): $(srcdir)/Epetra_MpiDistributor.cpp
Epetra_MpiSmpComm.$(OBJEXT): $(srcdir)/Epetra_MpiSmpComm.cpp
Epetra_MpiSmpCommData.$(OBJEXT): $(srcdir)/Epetra_MpiSmpCommData.cpp
libepetra.a: $(libepetra_a_OBJECTS) $(libepetra_a_DEPENDENCIES) 
	-rm -f libepetra.a
	$(libepetra_a_AR) libepetra.a $(libepetra_a_OBJECTS) $(libepetra_a_LIBADD)
	$(RANLIB) libepetra.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BLAS.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BasicDirectory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BlockMap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_BlockMapData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CompObject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsGraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsGraphData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsSingletonFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Data.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_DistObject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Export.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_FECrsMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_FEVbrMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_FEVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Flops.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Import.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_IntSerialDenseMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_IntSerialDenseVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_IntVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_LAPACK.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_LinearProblem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_LocalMap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MapColoring.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MpiComm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MpiCommData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MpiDistributor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MpiSmpComm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MpiSmpCommData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_MultiVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Object.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_RowMatrixTransposer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialComm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialCommData.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDenseMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDenseSolver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDenseVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialDistributor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialSpdDenseSolver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SerialSymDenseMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Time.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_VbrMatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_Vector.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

Epetra_BLAS.o: $(srcdir)/Epetra_BLAS.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_BLAS.cpp' object='Epetra_BLAS.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_BLAS.Po' tmpdepfile='$(DEPDIR)/Epetra_BLAS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BLAS.o `test -f '$(srcdir)/Epetra_BLAS.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BLAS.cpp

Epetra_BLAS.obj: $(srcdir)/Epetra_BLAS.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_BLAS.cpp' object='Epetra_BLAS.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_BLAS.Po' tmpdepfile='$(DEPDIR)/Epetra_BLAS.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BLAS.obj `cygpath -w $(srcdir)/Epetra_BLAS.cpp`

Epetra_LAPACK.o: $(srcdir)/Epetra_LAPACK.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_LAPACK.cpp' object='Epetra_LAPACK.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_LAPACK.Po' tmpdepfile='$(DEPDIR)/Epetra_LAPACK.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LAPACK.o `test -f '$(srcdir)/Epetra_LAPACK.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LAPACK.cpp

Epetra_LAPACK.obj: $(srcdir)/Epetra_LAPACK.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_LAPACK.cpp' object='Epetra_LAPACK.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_LAPACK.Po' tmpdepfile='$(DEPDIR)/Epetra_LAPACK.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LAPACK.obj `cygpath -w $(srcdir)/Epetra_LAPACK.cpp`

Epetra_Object.o: $(srcdir)/Epetra_Object.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Object.cpp' object='Epetra_Object.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Object.Po' tmpdepfile='$(DEPDIR)/Epetra_Object.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Object.o `test -f '$(srcdir)/Epetra_Object.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Object.cpp

Epetra_Object.obj: $(srcdir)/Epetra_Object.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Object.cpp' object='Epetra_Object.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Object.Po' tmpdepfile='$(DEPDIR)/Epetra_Object.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Object.obj `cygpath -w $(srcdir)/Epetra_Object.cpp`

Epetra_Flops.o: $(srcdir)/Epetra_Flops.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Flops.cpp' object='Epetra_Flops.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Flops.Po' tmpdepfile='$(DEPDIR)/Epetra_Flops.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Flops.o `test -f '$(srcdir)/Epetra_Flops.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Flops.cpp

Epetra_Flops.obj: $(srcdir)/Epetra_Flops.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Flops.cpp' object='Epetra_Flops.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Flops.Po' tmpdepfile='$(DEPDIR)/Epetra_Flops.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Flops.obj `cygpath -w $(srcdir)/Epetra_Flops.cpp`

Epetra_Time.o: $(srcdir)/Epetra_Time.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Time.cpp' object='Epetra_Time.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Time.Po' tmpdepfile='$(DEPDIR)/Epetra_Time.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Time.o `test -f '$(srcdir)/Epetra_Time.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Time.cpp

Epetra_Time.obj: $(srcdir)/Epetra_Time.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Time.cpp' object='Epetra_Time.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Time.Po' tmpdepfile='$(DEPDIR)/Epetra_Time.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Time.obj `cygpath -w $(srcdir)/Epetra_Time.cpp`

Epetra_Util.o: $(srcdir)/Epetra_Util.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Util.cpp' object='Epetra_Util.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Util.Po' tmpdepfile='$(DEPDIR)/Epetra_Util.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Util.o `test -f '$(srcdir)/Epetra_Util.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Util.cpp

Epetra_Util.obj: $(srcdir)/Epetra_Util.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Util.cpp' object='Epetra_Util.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Util.Po' tmpdepfile='$(DEPDIR)/Epetra_Util.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Util.obj `cygpath -w $(srcdir)/Epetra_Util.cpp`

Epetra_RowMatrixTransposer.o: $(srcdir)/Epetra_RowMatrixTransposer.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_RowMatrixTransposer.cpp' object='Epetra_RowMatrixTransposer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_RowMatrixTransposer.Po' tmpdepfile='$(DEPDIR)/Epetra_RowMatrixTransposer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_RowMatrixTransposer.o `test -f '$(srcdir)/Epetra_RowMatrixTransposer.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_RowMatrixTransposer.cpp

Epetra_RowMatrixTransposer.obj: $(srcdir)/Epetra_RowMatrixTransposer.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_RowMatrixTransposer.cpp' object='Epetra_RowMatrixTransposer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_RowMatrixTransposer.Po' tmpdepfile='$(DEPDIR)/Epetra_RowMatrixTransposer.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_RowMatrixTransposer.obj `cygpath -w $(srcdir)/Epetra_RowMatrixTransposer.cpp`

Epetra_Data.o: $(srcdir)/Epetra_Data.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Data.cpp' object='Epetra_Data.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Data.Po' tmpdepfile='$(DEPDIR)/Epetra_Data.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Data.o `test -f '$(srcdir)/Epetra_Data.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Data.cpp

Epetra_Data.obj: $(srcdir)/Epetra_Data.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Data.cpp' object='Epetra_Data.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Data.Po' tmpdepfile='$(DEPDIR)/Epetra_Data.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Data.obj `cygpath -w $(srcdir)/Epetra_Data.cpp`

Epetra_SerialDenseMatrix.o: $(srcdir)/Epetra_SerialDenseMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialDenseMatrix.cpp' object='Epetra_SerialDenseMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialDenseMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialDenseMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseMatrix.o `test -f '$(srcdir)/Epetra_SerialDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseMatrix.cpp

Epetra_SerialDenseMatrix.obj: $(srcdir)/Epetra_SerialDenseMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialDenseMatrix.cpp' object='Epetra_SerialDenseMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialDenseMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialDenseMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseMatrix.obj `cygpath -w $(srcdir)/Epetra_SerialDenseMatrix.cpp`

Epetra_SerialSpdDenseSolver.o: $(srcdir)/Epetra_SerialSpdDenseSolver.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialSpdDenseSolver.cpp' object='Epetra_SerialSpdDenseSolver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialSpdDenseSolver.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialSpdDenseSolver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialSpdDenseSolver.o `test -f '$(srcdir)/Epetra_SerialSpdDenseSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialSpdDenseSolver.cpp

Epetra_SerialSpdDenseSolver.obj: $(srcdir)/Epetra_SerialSpdDenseSolver.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialSpdDenseSolver.cpp' object='Epetra_SerialSpdDenseSolver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialSpdDenseSolver.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialSpdDenseSolver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialSpdDenseSolver.obj `cygpath -w $(srcdir)/Epetra_SerialSpdDenseSolver.cpp`

Epetra_SerialDenseSolver.o: $(srcdir)/Epetra_SerialDenseSolver.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialDenseSolver.cpp' object='Epetra_SerialDenseSolver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialDenseSolver.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialDenseSolver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseSolver.o `test -f '$(srcdir)/Epetra_SerialDenseSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseSolver.cpp

Epetra_SerialDenseSolver.obj: $(srcdir)/Epetra_SerialDenseSolver.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialDenseSolver.cpp' object='Epetra_SerialDenseSolver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialDenseSolver.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialDenseSolver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseSolver.obj `cygpath -w $(srcdir)/Epetra_SerialDenseSolver.cpp`

Epetra_SerialSymDenseMatrix.o: $(srcdir)/Epetra_SerialSymDenseMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialSymDenseMatrix.cpp' object='Epetra_SerialSymDenseMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialSymDenseMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialSymDenseMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialSymDenseMatrix.o `test -f '$(srcdir)/Epetra_SerialSymDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialSymDenseMatrix.cpp

Epetra_SerialSymDenseMatrix.obj: $(srcdir)/Epetra_SerialSymDenseMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialSymDenseMatrix.cpp' object='Epetra_SerialSymDenseMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialSymDenseMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialSymDenseMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialSymDenseMatrix.obj `cygpath -w $(srcdir)/Epetra_SerialSymDenseMatrix.cpp`

Epetra_SerialDenseVector.o: $(srcdir)/Epetra_SerialDenseVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialDenseVector.cpp' object='Epetra_SerialDenseVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialDenseVector.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialDenseVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseVector.o `test -f '$(srcdir)/Epetra_SerialDenseVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDenseVector.cpp

Epetra_SerialDenseVector.obj: $(srcdir)/Epetra_SerialDenseVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialDenseVector.cpp' object='Epetra_SerialDenseVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialDenseVector.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialDenseVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDenseVector.obj `cygpath -w $(srcdir)/Epetra_SerialDenseVector.cpp`

Epetra_IntSerialDenseMatrix.o: $(srcdir)/Epetra_IntSerialDenseMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_IntSerialDenseMatrix.cpp' object='Epetra_IntSerialDenseMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_IntSerialDenseMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_IntSerialDenseMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntSerialDenseMatrix.o `test -f '$(srcdir)/Epetra_IntSerialDenseMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntSerialDenseMatrix.cpp

Epetra_IntSerialDenseMatrix.obj: $(srcdir)/Epetra_IntSerialDenseMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_IntSerialDenseMatrix.cpp' object='Epetra_IntSerialDenseMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_IntSerialDenseMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_IntSerialDenseMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntSerialDenseMatrix.obj `cygpath -w $(srcdir)/Epetra_IntSerialDenseMatrix.cpp`

Epetra_IntSerialDenseVector.o: $(srcdir)/Epetra_IntSerialDenseVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_IntSerialDenseVector.cpp' object='Epetra_IntSerialDenseVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_IntSerialDenseVector.Po' tmpdepfile='$(DEPDIR)/Epetra_IntSerialDenseVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntSerialDenseVector.o `test -f '$(srcdir)/Epetra_IntSerialDenseVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntSerialDenseVector.cpp

Epetra_IntSerialDenseVector.obj: $(srcdir)/Epetra_IntSerialDenseVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_IntSerialDenseVector.cpp' object='Epetra_IntSerialDenseVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_IntSerialDenseVector.Po' tmpdepfile='$(DEPDIR)/Epetra_IntSerialDenseVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntSerialDenseVector.obj `cygpath -w $(srcdir)/Epetra_IntSerialDenseVector.cpp`

Epetra_SerialComm.o: $(srcdir)/Epetra_SerialComm.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialComm.cpp' object='Epetra_SerialComm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialComm.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialComm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialComm.o `test -f '$(srcdir)/Epetra_SerialComm.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialComm.cpp

Epetra_SerialComm.obj: $(srcdir)/Epetra_SerialComm.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialComm.cpp' object='Epetra_SerialComm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialComm.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialComm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialComm.obj `cygpath -w $(srcdir)/Epetra_SerialComm.cpp`

Epetra_SerialCommData.o: $(srcdir)/Epetra_SerialCommData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialCommData.cpp' object='Epetra_SerialCommData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialCommData.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialCommData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialCommData.o `test -f '$(srcdir)/Epetra_SerialCommData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialCommData.cpp

Epetra_SerialCommData.obj: $(srcdir)/Epetra_SerialCommData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialCommData.cpp' object='Epetra_SerialCommData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialCommData.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialCommData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialCommData.obj `cygpath -w $(srcdir)/Epetra_SerialCommData.cpp`

Epetra_SerialDistributor.o: $(srcdir)/Epetra_SerialDistributor.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialDistributor.cpp' object='Epetra_SerialDistributor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialDistributor.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialDistributor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDistributor.o `test -f '$(srcdir)/Epetra_SerialDistributor.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SerialDistributor.cpp

Epetra_SerialDistributor.obj: $(srcdir)/Epetra_SerialDistributor.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SerialDistributor.cpp' object='Epetra_SerialDistributor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SerialDistributor.Po' tmpdepfile='$(DEPDIR)/Epetra_SerialDistributor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SerialDistributor.obj `cygpath -w $(srcdir)/Epetra_SerialDistributor.cpp`

Epetra_BasicDirectory.o: $(srcdir)/Epetra_BasicDirectory.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_BasicDirectory.cpp' object='Epetra_BasicDirectory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_BasicDirectory.Po' tmpdepfile='$(DEPDIR)/Epetra_BasicDirectory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BasicDirectory.o `test -f '$(srcdir)/Epetra_BasicDirectory.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BasicDirectory.cpp

Epetra_BasicDirectory.obj: $(srcdir)/Epetra_BasicDirectory.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_BasicDirectory.cpp' object='Epetra_BasicDirectory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_BasicDirectory.Po' tmpdepfile='$(DEPDIR)/Epetra_BasicDirectory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BasicDirectory.obj `cygpath -w $(srcdir)/Epetra_BasicDirectory.cpp`

Epetra_BlockMap.o: $(srcdir)/Epetra_BlockMap.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_BlockMap.cpp' object='Epetra_BlockMap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_BlockMap.Po' tmpdepfile='$(DEPDIR)/Epetra_BlockMap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BlockMap.o `test -f '$(srcdir)/Epetra_BlockMap.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BlockMap.cpp

Epetra_BlockMap.obj: $(srcdir)/Epetra_BlockMap.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_BlockMap.cpp' object='Epetra_BlockMap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_BlockMap.Po' tmpdepfile='$(DEPDIR)/Epetra_BlockMap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BlockMap.obj `cygpath -w $(srcdir)/Epetra_BlockMap.cpp`

Epetra_BlockMapData.o: $(srcdir)/Epetra_BlockMapData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_BlockMapData.cpp' object='Epetra_BlockMapData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_BlockMapData.Po' tmpdepfile='$(DEPDIR)/Epetra_BlockMapData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BlockMapData.o `test -f '$(srcdir)/Epetra_BlockMapData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_BlockMapData.cpp

Epetra_BlockMapData.obj: $(srcdir)/Epetra_BlockMapData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_BlockMapData.cpp' object='Epetra_BlockMapData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_BlockMapData.Po' tmpdepfile='$(DEPDIR)/Epetra_BlockMapData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_BlockMapData.obj `cygpath -w $(srcdir)/Epetra_BlockMapData.cpp`

Epetra_DistObject.o: $(srcdir)/Epetra_DistObject.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_DistObject.cpp' object='Epetra_DistObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_DistObject.Po' tmpdepfile='$(DEPDIR)/Epetra_DistObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_DistObject.o `test -f '$(srcdir)/Epetra_DistObject.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_DistObject.cpp

Epetra_DistObject.obj: $(srcdir)/Epetra_DistObject.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_DistObject.cpp' object='Epetra_DistObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_DistObject.Po' tmpdepfile='$(DEPDIR)/Epetra_DistObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_DistObject.obj `cygpath -w $(srcdir)/Epetra_DistObject.cpp`

Epetra_Export.o: $(srcdir)/Epetra_Export.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Export.cpp' object='Epetra_Export.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Export.Po' tmpdepfile='$(DEPDIR)/Epetra_Export.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Export.o `test -f '$(srcdir)/Epetra_Export.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Export.cpp

Epetra_Export.obj: $(srcdir)/Epetra_Export.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Export.cpp' object='Epetra_Export.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Export.Po' tmpdepfile='$(DEPDIR)/Epetra_Export.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Export.obj `cygpath -w $(srcdir)/Epetra_Export.cpp`

Epetra_Import.o: $(srcdir)/Epetra_Import.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Import.cpp' object='Epetra_Import.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Import.Po' tmpdepfile='$(DEPDIR)/Epetra_Import.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Import.o `test -f '$(srcdir)/Epetra_Import.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Import.cpp

Epetra_Import.obj: $(srcdir)/Epetra_Import.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Import.cpp' object='Epetra_Import.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Import.Po' tmpdepfile='$(DEPDIR)/Epetra_Import.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Import.obj `cygpath -w $(srcdir)/Epetra_Import.cpp`

Epetra_LocalMap.o: $(srcdir)/Epetra_LocalMap.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_LocalMap.cpp' object='Epetra_LocalMap.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_LocalMap.Po' tmpdepfile='$(DEPDIR)/Epetra_LocalMap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LocalMap.o `test -f '$(srcdir)/Epetra_LocalMap.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LocalMap.cpp

Epetra_LocalMap.obj: $(srcdir)/Epetra_LocalMap.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_LocalMap.cpp' object='Epetra_LocalMap.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_LocalMap.Po' tmpdepfile='$(DEPDIR)/Epetra_LocalMap.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LocalMap.obj `cygpath -w $(srcdir)/Epetra_LocalMap.cpp`

Epetra_Map.o: $(srcdir)/Epetra_Map.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Map.cpp' object='Epetra_Map.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Map.Po' tmpdepfile='$(DEPDIR)/Epetra_Map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Map.o `test -f '$(srcdir)/Epetra_Map.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Map.cpp

Epetra_Map.obj: $(srcdir)/Epetra_Map.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Map.cpp' object='Epetra_Map.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Map.Po' tmpdepfile='$(DEPDIR)/Epetra_Map.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Map.obj `cygpath -w $(srcdir)/Epetra_Map.cpp`

Epetra_MapColoring.o: $(srcdir)/Epetra_MapColoring.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MapColoring.cpp' object='Epetra_MapColoring.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MapColoring.Po' tmpdepfile='$(DEPDIR)/Epetra_MapColoring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MapColoring.o `test -f '$(srcdir)/Epetra_MapColoring.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MapColoring.cpp

Epetra_MapColoring.obj: $(srcdir)/Epetra_MapColoring.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MapColoring.cpp' object='Epetra_MapColoring.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MapColoring.Po' tmpdepfile='$(DEPDIR)/Epetra_MapColoring.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MapColoring.obj `cygpath -w $(srcdir)/Epetra_MapColoring.cpp`

Epetra_CompObject.o: $(srcdir)/Epetra_CompObject.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CompObject.cpp' object='Epetra_CompObject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CompObject.Po' tmpdepfile='$(DEPDIR)/Epetra_CompObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CompObject.o `test -f '$(srcdir)/Epetra_CompObject.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CompObject.cpp

Epetra_CompObject.obj: $(srcdir)/Epetra_CompObject.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CompObject.cpp' object='Epetra_CompObject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CompObject.Po' tmpdepfile='$(DEPDIR)/Epetra_CompObject.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CompObject.obj `cygpath -w $(srcdir)/Epetra_CompObject.cpp`

Epetra_CrsGraph.o: $(srcdir)/Epetra_CrsGraph.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsGraph.cpp' object='Epetra_CrsGraph.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsGraph.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsGraph.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsGraph.o `test -f '$(srcdir)/Epetra_CrsGraph.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsGraph.cpp

Epetra_CrsGraph.obj: $(srcdir)/Epetra_CrsGraph.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsGraph.cpp' object='Epetra_CrsGraph.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsGraph.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsGraph.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsGraph.obj `cygpath -w $(srcdir)/Epetra_CrsGraph.cpp`

Epetra_CrsGraphData.o: $(srcdir)/Epetra_CrsGraphData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsGraphData.cpp' object='Epetra_CrsGraphData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsGraphData.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsGraphData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsGraphData.o `test -f '$(srcdir)/Epetra_CrsGraphData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsGraphData.cpp

Epetra_CrsGraphData.obj: $(srcdir)/Epetra_CrsGraphData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsGraphData.cpp' object='Epetra_CrsGraphData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsGraphData.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsGraphData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsGraphData.obj `cygpath -w $(srcdir)/Epetra_CrsGraphData.cpp`

Epetra_CrsMatrix.o: $(srcdir)/Epetra_CrsMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsMatrix.cpp' object='Epetra_CrsMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsMatrix.o `test -f '$(srcdir)/Epetra_CrsMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsMatrix.cpp

Epetra_CrsMatrix.obj: $(srcdir)/Epetra_CrsMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsMatrix.cpp' object='Epetra_CrsMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsMatrix.obj `cygpath -w $(srcdir)/Epetra_CrsMatrix.cpp`

Epetra_LinearProblem.o: $(srcdir)/Epetra_LinearProblem.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_LinearProblem.cpp' object='Epetra_LinearProblem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_LinearProblem.Po' tmpdepfile='$(DEPDIR)/Epetra_LinearProblem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LinearProblem.o `test -f '$(srcdir)/Epetra_LinearProblem.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_LinearProblem.cpp

Epetra_LinearProblem.obj: $(srcdir)/Epetra_LinearProblem.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_LinearProblem.cpp' object='Epetra_LinearProblem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_LinearProblem.Po' tmpdepfile='$(DEPDIR)/Epetra_LinearProblem.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_LinearProblem.obj `cygpath -w $(srcdir)/Epetra_LinearProblem.cpp`

Epetra_MultiVector.o: $(srcdir)/Epetra_MultiVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MultiVector.cpp' object='Epetra_MultiVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MultiVector.Po' tmpdepfile='$(DEPDIR)/Epetra_MultiVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MultiVector.o `test -f '$(srcdir)/Epetra_MultiVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MultiVector.cpp

Epetra_MultiVector.obj: $(srcdir)/Epetra_MultiVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MultiVector.cpp' object='Epetra_MultiVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MultiVector.Po' tmpdepfile='$(DEPDIR)/Epetra_MultiVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MultiVector.obj `cygpath -w $(srcdir)/Epetra_MultiVector.cpp`

Epetra_VbrMatrix.o: $(srcdir)/Epetra_VbrMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_VbrMatrix.cpp' object='Epetra_VbrMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_VbrMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_VbrMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_VbrMatrix.o `test -f '$(srcdir)/Epetra_VbrMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_VbrMatrix.cpp

Epetra_VbrMatrix.obj: $(srcdir)/Epetra_VbrMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_VbrMatrix.cpp' object='Epetra_VbrMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_VbrMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_VbrMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_VbrMatrix.obj `cygpath -w $(srcdir)/Epetra_VbrMatrix.cpp`

Epetra_Vector.o: $(srcdir)/Epetra_Vector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Vector.cpp' object='Epetra_Vector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Vector.Po' tmpdepfile='$(DEPDIR)/Epetra_Vector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Vector.o `test -f '$(srcdir)/Epetra_Vector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_Vector.cpp

Epetra_Vector.obj: $(srcdir)/Epetra_Vector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_Vector.cpp' object='Epetra_Vector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_Vector.Po' tmpdepfile='$(DEPDIR)/Epetra_Vector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_Vector.obj `cygpath -w $(srcdir)/Epetra_Vector.cpp`

Epetra_CrsSingletonFilter.o: $(srcdir)/Epetra_CrsSingletonFilter.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsSingletonFilter.cpp' object='Epetra_CrsSingletonFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsSingletonFilter.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsSingletonFilter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsSingletonFilter.o `test -f '$(srcdir)/Epetra_CrsSingletonFilter.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsSingletonFilter.cpp

Epetra_CrsSingletonFilter.obj: $(srcdir)/Epetra_CrsSingletonFilter.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsSingletonFilter.cpp' object='Epetra_CrsSingletonFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsSingletonFilter.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsSingletonFilter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsSingletonFilter.obj `cygpath -w $(srcdir)/Epetra_CrsSingletonFilter.cpp`

Epetra_FECrsMatrix.o: $(srcdir)/Epetra_FECrsMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_FECrsMatrix.cpp' object='Epetra_FECrsMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_FECrsMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_FECrsMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FECrsMatrix.o `test -f '$(srcdir)/Epetra_FECrsMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FECrsMatrix.cpp

Epetra_FECrsMatrix.obj: $(srcdir)/Epetra_FECrsMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_FECrsMatrix.cpp' object='Epetra_FECrsMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_FECrsMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_FECrsMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FECrsMatrix.obj `cygpath -w $(srcdir)/Epetra_FECrsMatrix.cpp`

Epetra_FEVbrMatrix.o: $(srcdir)/Epetra_FEVbrMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_FEVbrMatrix.cpp' object='Epetra_FEVbrMatrix.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_FEVbrMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_FEVbrMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FEVbrMatrix.o `test -f '$(srcdir)/Epetra_FEVbrMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FEVbrMatrix.cpp

Epetra_FEVbrMatrix.obj: $(srcdir)/Epetra_FEVbrMatrix.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_FEVbrMatrix.cpp' object='Epetra_FEVbrMatrix.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_FEVbrMatrix.Po' tmpdepfile='$(DEPDIR)/Epetra_FEVbrMatrix.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FEVbrMatrix.obj `cygpath -w $(srcdir)/Epetra_FEVbrMatrix.cpp`

Epetra_FEVector.o: $(srcdir)/Epetra_FEVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_FEVector.cpp' object='Epetra_FEVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_FEVector.Po' tmpdepfile='$(DEPDIR)/Epetra_FEVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FEVector.o `test -f '$(srcdir)/Epetra_FEVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_FEVector.cpp

Epetra_FEVector.obj: $(srcdir)/Epetra_FEVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_FEVector.cpp' object='Epetra_FEVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_FEVector.Po' tmpdepfile='$(DEPDIR)/Epetra_FEVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_FEVector.obj `cygpath -w $(srcdir)/Epetra_FEVector.cpp`

Epetra_IntVector.o: $(srcdir)/Epetra_IntVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_IntVector.cpp' object='Epetra_IntVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_IntVector.Po' tmpdepfile='$(DEPDIR)/Epetra_IntVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntVector.o `test -f '$(srcdir)/Epetra_IntVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_IntVector.cpp

Epetra_IntVector.obj: $(srcdir)/Epetra_IntVector.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_IntVector.cpp' object='Epetra_IntVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_IntVector.Po' tmpdepfile='$(DEPDIR)/Epetra_IntVector.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_IntVector.obj `cygpath -w $(srcdir)/Epetra_IntVector.cpp`

Epetra_MpiComm.o: $(srcdir)/Epetra_MpiComm.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiComm.cpp' object='Epetra_MpiComm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiComm.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiComm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiComm.o `test -f '$(srcdir)/Epetra_MpiComm.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiComm.cpp

Epetra_MpiComm.obj: $(srcdir)/Epetra_MpiComm.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiComm.cpp' object='Epetra_MpiComm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiComm.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiComm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiComm.obj `cygpath -w $(srcdir)/Epetra_MpiComm.cpp`

Epetra_MpiCommData.o: $(srcdir)/Epetra_MpiCommData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiCommData.cpp' object='Epetra_MpiCommData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiCommData.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiCommData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiCommData.o `test -f '$(srcdir)/Epetra_MpiCommData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiCommData.cpp

Epetra_MpiCommData.obj: $(srcdir)/Epetra_MpiCommData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiCommData.cpp' object='Epetra_MpiCommData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiCommData.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiCommData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiCommData.obj `cygpath -w $(srcdir)/Epetra_MpiCommData.cpp`

Epetra_MpiDistributor.o: $(srcdir)/Epetra_MpiDistributor.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiDistributor.cpp' object='Epetra_MpiDistributor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiDistributor.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiDistributor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiDistributor.o `test -f '$(srcdir)/Epetra_MpiDistributor.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiDistributor.cpp

Epetra_MpiDistributor.obj: $(srcdir)/Epetra_MpiDistributor.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiDistributor.cpp' object='Epetra_MpiDistributor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiDistributor.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiDistributor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiDistributor.obj `cygpath -w $(srcdir)/Epetra_MpiDistributor.cpp`

Epetra_MpiSmpComm.o: $(srcdir)/Epetra_MpiSmpComm.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiSmpComm.cpp' object='Epetra_MpiSmpComm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiSmpComm.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiSmpComm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiSmpComm.o `test -f '$(srcdir)/Epetra_MpiSmpComm.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiSmpComm.cpp

Epetra_MpiSmpComm.obj: $(srcdir)/Epetra_MpiSmpComm.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiSmpComm.cpp' object='Epetra_MpiSmpComm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiSmpComm.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiSmpComm.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiSmpComm.obj `cygpath -w $(srcdir)/Epetra_MpiSmpComm.cpp`

Epetra_MpiSmpCommData.o: $(srcdir)/Epetra_MpiSmpCommData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiSmpCommData.cpp' object='Epetra_MpiSmpCommData.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiSmpCommData.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiSmpCommData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiSmpCommData.o `test -f '$(srcdir)/Epetra_MpiSmpCommData.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_MpiSmpCommData.cpp

Epetra_MpiSmpCommData.obj: $(srcdir)/Epetra_MpiSmpCommData.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_MpiSmpCommData.cpp' object='Epetra_MpiSmpCommData.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_MpiSmpCommData.Po' tmpdepfile='$(DEPDIR)/Epetra_MpiSmpCommData.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_MpiSmpCommData.obj `cygpath -w $(srcdir)/Epetra_MpiSmpCommData.cpp`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:
includeHEADERS_INSTALL = $(INSTALL_HEADER)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done
nodist_execincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(execincludedir)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(nodist_execincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(execincludedir)/$$f"; \
	  $(nodist_execincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(execincludedir)/$$f; \
	done

uninstall-nodist_execincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(execincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(execincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) Epetra_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) Epetra_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/$(srcdir)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS) Epetra_config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(includedir) $(DESTDIR)$(execincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-libLIBRARIES install-nodist_execincludeHEADERS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_execincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES distclean distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man \
	install-nodist_execincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_execincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
