Date:  Tue Dec 17 17:32:30 CST 2002
Linux heroux00.albanytel.com 2.4.2-2 #1 Sun Apr 8 20:41:30 EDT 2001 i686 unknown
############ cxx_BlockMap_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors
*******************************************************************************************
        Testing Exceptions (Expect error messages if EPETRA_NO_ERROR_REPORTS is not defined
*******************************************************************************************


Checking Epetra_BlockMap(-2, ElementSize, IndexBase, Comm)

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1
Checked OK


Checking Epetra_BlockMap(2, 3, ElementSize, IndexBase, Comm)

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 3, or be set to -1 to compute automatically  Error Code:  -4
Checked OK




*******************************************************************************************
        Testing valid constructor now......................................................
*******************************************************************************************


Checking Epetra_BlockMap(NumGlobalElements, ElementSize, IndexBase, Comm)
Checked OK


Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, ElementSize, IndexBase, Comm)
Checked OK


Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSize, IndexBase, Comm)
Checked OK


Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSizeList, IndexBase, Comm)
Checked OK


Checking Epetra_BlockMap(*Map)
Checked OK


Test ostream << operator
Epetra::BlockMap

Number of Global Elements  = 10
Number of Global Points = 41
Maximum of all GIDs        = 10000
Minimum of all GIDs        = 9991
Index Base                 = 0
0

Number of Local Elements   = 10
Number of Local Points  = 41
Maximum of my GIDs         = 10000
Minimum of my GIDs         = 9991

         MyPID           Local Index        Global Index   FirstPointInElement     ElementSize  
             0                 0             10000                 0                 2    
             0                 1              9999                 2                 3    
             0                 2              9998                 5                 4    
             0                 3              9997                 9                 5    
             0                 4              9996                14                 6    
             0                 5              9995                20                 7    
             0                 6              9994                27                 2    
             0                 7              9993                29                 3    
             0                 8              9992                32                 4    
             0                 9              9991                36                 5    
############ cxx_Comm_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors
Epetra::Comm
::Processor 0 of 1 total processors is past serial barrier.

 Epetra_Comm Check OK.
############ cxx_CrsGraph_serial.exe ##############
Processor 0 of 1 is alive.


*****Testing variable entry constructor



Number of local Rows = 6



Number of local Nonzero entries = 16



Number of global Rows = 6



Number of global Nonzero entries = 16



Rows sorted check OK



NumIndices function check OK



*****Testing constant entry constructor



Number of local Rows = 6



Number of local Nonzero entries = 6



Number of global Rows = 6



Number of global Nonzero entries = 6



Rows sorted check OK



NumIndices function check OK



*****Testing copy constructor



Number of local Rows = 6



Number of local Nonzero entries = 6



Number of global Rows = 6



Number of global Nonzero entries = 6



Rows sorted check OK



NumIndices function check OK



*****Testing post construction modifications



Print out tridiagonal matrix, each part on each processor. Index base is one.


Epetra::CrsGraph

Number of Global Block Rows  = 4
Number of Global Block Cols  = 4
Number of Global Block Diags = 4
Number of Global Entries     = 10

Number of Global Rows        = 4
Number of Global Cols        = 4
Number of Global Diagonals   = 4
Number of Global Nonzeros    = 10

Global Maximum Block Row Dim = 1
Global Maximum Block Col Dim = 1
Global Maximum Num Indices   = 3





Number of My Block Rows  = 4
Number of My Block Cols  = 4
Number of My Block Diags = 4
Number of My Entries     = 10

Number of My Rows        = 4
Number of My Cols        = 4
Number of My Diagonals   = 4
Number of My Nonzeros    = 10

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
             1               1               2    
             2               1               2               3    
             3               2               3               4    
             4               3               4    

############ cxx_CrsMatrix_serial.exe ##############
Processor 0 of 1 is alive.


Number of local Rows = 10001



Number of local Nonzero entries = 30001



Number of global Rows = 10001



Number of global Nonzero entries = 30001



Rows sorted check OK



NumEntries function check OK

Iter = 0  Lambda = 1.97763  Residual of A*q - lambda*q = 1.41418
Iter = 100  Lambda = 3.98989  Residual of A*q - lambda*q = 0.013573


Total MFLOPs for first solve = 63.5688



Using transpose of matrix and solving again (should give same result).


Iter = 0  Lambda = 2.01125  Residual of A*q - lambda*q = 1.40529
Iter = 100  Lambda = 3.99035  Residual of A*q - lambda*q = 0.0138744


Total MFLOPs for transpose solve = 55.8784



Increasing the magnitude of first diagonal term and solving again


Iter = 0  Lambda = 1.98615  Residual of A*q - lambda*q = 1.4276
Iter = 100  Lambda = 20.0556  Residual of A*q - lambda*q = 3.29948e-16


Total MFLOPs for second solve = 63.1003



Using transpose of matrix and solving again (should give same result).


Iter = 0  Lambda = 2.02013  Residual of A*q - lambda*q = 1.42536
Iter = 100  Lambda = 20.0556  Residual of A*q - lambda*q = 3.29948e-16


Total MFLOPs for tranpose of second solve = 55.5362



*****Testing constant entry constructor



Number of local Rows = 10001



Number of local Nonzero entries = 10001



Number of global Rows = 10001



Number of global Nonzero entries = 10001



Rows sorted check OK



NumEntries function check OK



*****Testing copy constructor



Number of local Rows = 10001



Number of local Nonzero entries = 10001



Number of global Rows = 10001



Number of global Nonzero entries = 10001



Rows sorted check OK



NumEntries function check OK



*****Testing lccal view constructor



Number of local Rows = 10001



Number of local Nonzero entries = 10001



Number of global Rows = 10001



Number of global Nonzero entries = 10001



Rows sorted check OK



NumEntries function check OK



*****Testing post construction modifications



Print out tridiagonal matrix, each part on each processor.


Epetra::CrsMatrix

Number of Global Rows        = 2
Number of Global Cols        = 2
Number of Global Diagonals   = 2
Number of Global Nonzeros    = 4
Global Maximum Num Entries   = 2





Number of My Rows        = 2
Number of My Cols        = 2
Number of My Diagonals   = 2
Number of My Nonzeros    = 4
My Maximum Num Entries   = 2

   Processor    Row Index    Col Index           Value     
       0             0             0                       2    
       0             0             1                      -1    
       0             1             0                      -1    
       0             1             1                       2    

############ cxx_CrsRectMatrix_serial.exe ##############
############ cxx_FECrsMatrix_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, IndexBase, Comm)
*********************************************************
constructing Epetra_FECrsMatrix
calling A.SumIntoGlobalValues with 1-D data array
calling A.SumIntoGlobalValues with 2 values
calling A.ReplaceGlobalValues with 3 values
calling A.SumIntoGlobalValues with 3 values
calling A.ReplaceGlobalValues with 2 values
calling A.GlobalAssemble()
after globalAssemble

Number of Global Rows        = 4
Number of Global Cols        = 4
Number of Global Diagonals   = 0
Number of Global Nonzeros    = 0
Global Maximum Num Entries   = 0
 ** Matrix is Lower Triangular **
 ** Matrix is Upper Triangular **
 ** Matrix has no diagonal     **


Number of My Rows        = 4
Number of My Cols        = 4
Number of My Diagonals   = 0
Number of My Nonzeros    = 0
My Maximum Num Entries   = 6

   Processor    Row Index    Col Index           Value     
       0             0             0                       3    
       0             0             1                       3    
       0             0             2                       3    
       0             0             0                       2    
       0             0             1                      -1    
       0             1             0                       3    
       0             1             1                       3    
       0             1             2                       3    
       0             1             0                      -1    
       0             1             1                       2    
       0             1             2                      -1    
       0             2             0                       3    
       0             2             1                       3    
       0             2             2                       3    
       0             2             1                      -1    
       0             2             2                       2    
       0             2             3                      -1    
       0             3             2                      -1    
       0             3             3                       2    
############ cxx_FEVector_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, ElementSize, IndexBase, Comm)
*********************************************************
constructing Epetra_FEVector
calling A.SumIntoGlobalValues with 4 values
calling A.GlobalAssemble()
after globalAssemble
     MyPID           GID               Value  
         0             0                       1
         0             1                       1
         0             2                       1
         0             3                       1
############ cxx_ImportExport_serial.exe ##############
Processor 0 of 1 is alive.
MultiVector Import using Importer Check OK

Vector Export using Importer Check OK

Matrix Export Check OK
############ cxx_Map_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors
*******************************************************************************************
        Testing Exceptions (Expect error messages if EPETRA_NO_ERROR_REPORTS is not defined
*******************************************************************************************


Checking Epetra_Map(-2, IndexBase, Comm)

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1
Checked OK


Checking Epetra_Map(2, 3, IndexBase, Comm)

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 3, or be set to -1 to compute automatically  Error Code:  -4
Checked OK




*******************************************************************************************
        Testing valid constructor now......................................................
*******************************************************************************************


Checking Epetra_Map(NumGlobalElements, IndexBase, Comm)
Checked OK


Checking Epetra_Map(NumGlobalElements, NumMyElements, IndexBase, Comm)
Checked OK


Checking Epetra_Map(NumGlobalElements, NumMyElements, MyGlobalElements,  IndexBase, Comm)
Checked OK


Checking Epetra_Map(*Map)
Checked OK


Checking Epetra_LocalMap(NumMyElements1, IndexBase, Comm)
Checked OK


Checking Epetra_LocalMap(*LocalMap)
Checked OK


Test ostream << operator
Epetra::Map

Number of Global Elements  = 10
Number of Global Points = 10
Maximum of all GIDs        = 10000
Minimum of all GIDs        = 9991
Index Base                 = 0
Constant Element Size      = 1

Number of Local Elements   = 10
Number of Local Points  = 10
Maximum of my GIDs         = 10000
Minimum of my GIDs         = 9991

         MyPID           Local Index        Global Index  
             0                 0             10000    
             0                 1              9999    
             0                 2              9998    
             0                 3              9997    
             0                 4              9996    
             0                 5              9995    
             0                 6              9994    
             0                 7              9993    
             0                 8              9992    
             0                 9              9991    
############ cxx_MapColoring_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors
Checked OK


Test ostream << operator
Epetra::MapColoring

 *****************************************
 Coloring information arranged map element
 *****************************************

     MyPID           GID               Color  
         0             0                       5
         0             2                       2
         0             4                       9
         0             6                       4
         0             8                      13
         0            10                       1
         0            12                      11
         0            14                       3
         0            16                      15
         0            18                       5
         0            20                      19
         0            22                       2
         0            24                      17
         0            26                       4
         0            28                       7
         0            30                       1
         0            32                      11
         0            34                       3
         0            36                       9
         0            38                       5
         0            40                      13
         0            42                       2
         0            44                      17
         0            46                       4
         0            48                      15
         0            50                       1
         0            52                      19
         0            54                       3
         0            56                       9
         0            58                       5
         0            60                       7
         0            62                       2
         0            64                      11
         0            66                       4
         0            68                      15
         0            70                       1
         0            72                      13
         0            74                       3
         0            76                      17
         0            78                       5
         0            80                      21
         0            82                       2
         0            84                       5
         0            86                       4
         0            88                       9
         0            90                       1
         0            92                      13
         0            94                       3
         0            96                      11
         0            98                       5
         0           100                      15
         0           102                       2
         0           104                      19
         0           106                       4
         0           108                      17
         0           110                       1
         0           112                       7
         0           114                       3
         0           116                      11
         0           118                       5
         0           120                       9
         0           122                       2
         0           124                      13
         0           126                       4
         0           128                      17
         0           130                       1
         0           132                      15
         0           134                       3
         0           136                      19
         0           138                       5
         0           140                       9
         0           142                       2
         0           144                       7
         0           146                       4
         0           148                      11
         0           150                       1
         0           152                      15
         0           154                       3
         0           156                      13
         0           158                       5
         0           160                      17
         0           162                       2
         0           164                      21
         0           166                       4
         0           168                       5
         0           170                       1
         0           172                       9
         0           174                       3
         0           176                      13
         0           178                       5
         0           180                      11
         0           182                       2
         0           184                      15
         0           186                       4
         0           188                      19
         0           190                       1
         0           192                      17
         0           194                       3
         0           196                       7
         0           198                       5

 **************************************
 Coloring information arranged by color
 **************************************

Number of colors in map = 13
Default color           = 0

     MyPID           LID               Color  
         0             5                       1
         0            15                       1
         0            25                       1
         0            35                       1
         0            45                       1
         0            55                       1
         0            65                       1
         0            75                       1
         0            85                       1
         0            95                       1
         0             1                       2
         0            11                       2
         0            21                       2
         0            31                       2
         0            41                       2
         0            51                       2
         0            61                       2
         0            71                       2
         0            81                       2
         0            91                       2
         0             7                       3
         0            17                       3
         0            27                       3
         0            37                       3
         0            47                       3
         0            57                       3
         0            67                       3
         0            77                       3
         0            87                       3
         0            97                       3
         0             3                       4
         0            13                       4
         0            23                       4
         0            33                       4
         0            43                       4
         0            53                       4
         0            63                       4
         0            73                       4
         0            83                       4
         0            93                       4
         0             0                       5
         0             9                       5
         0            19                       5
         0            29                       5
         0            39                       5
         0            42                       5
         0            49                       5
         0            59                       5
         0            69                       5
         0            79                       5
         0            84                       5
         0            89                       5
         0            99                       5
         0            14                       7
         0            30                       7
         0            56                       7
         0            72                       7
         0            98                       7
         0             2                       9
         0            18                       9
         0            28                       9
         0            44                       9
         0            60                       9
         0            70                       9
         0            86                       9
         0             6                      11
         0            16                      11
         0            32                      11
         0            48                      11
         0            58                      11
         0            74                      11
         0            90                      11
         0             4                      13
         0            20                      13
         0            36                      13
         0            46                      13
         0            62                      13
         0            78                      13
         0            88                      13
         0             8                      15
         0            24                      15
         0            34                      15
         0            50                      15
         0            66                      15
         0            76                      15
         0            92                      15
         0            12                      17
         0            22                      17
         0            38                      17
         0            54                      17
         0            64                      17
         0            80                      17
         0            96                      17
         0            10                      19
         0            26                      19
         0            52                      19
         0            68                      19
         0            94                      19
         0            40                      21
         0            82                      21

############ cxx_MultiVector_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors

*********************************************************
Checking Epetra_LocalMap(NumMyElements1, IndexBase, Comm)
     and Epetra_BlockMap(NumGlobalElements, ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][35000] = 4 should = 4
X[2][35006] = 8 should = 8
X[2][35000] = 2 should = 1
X[2][35006] = 2 should = 1
X[2][35000] = 4 should = 4
X[2][35006] = 8 should = 8
X[2][35000] = 2 should = 1
X[2][35006] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[35000] = 2 should = 2
x[35007] = 4 should = 4
x[35006] = 4 should = 4
x[35013] = 8 should = 8
x[35000] = 2 should = 2
x[35007] = 4 should = 4
x[35006] = 2 should = 2
x[35013] = 4 should = 4
x[35000] = 2 should = 2
x[35007] = 4 should = 4
x[35006] = 4 should = 4
x[35013] = 8 should = 8
x[35000] = 2 should = 2
x[35007] = 2 should = 2
x[35006] = 4 should = 4
x[35013] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][35000] = 4 should = 4
X[2][35006] = 8 should = 8
X[2][35000] = 2 should = 1
X[2][35006] = 2 should = 1
X[2][35000] = 4 should = 4
X[2][35006] = 8 should = 8
X[2][35000] = 2 should = 1
X[2][35006] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[35000] = 2 should = 2
x[35007] = 4 should = 4
x[35006] = 4 should = 4
x[35013] = 8 should = 8
x[35000] = 2 should = 2
x[35007] = 4 should = 4
x[35006] = 2 should = 2
x[35013] = 4 should = 4
x[35000] = 2 should = 2
x[35007] = 4 should = 4
x[35006] = 4 should = 4
x[35013] = 8 should = 8
x[35000] = 2 should = 2
x[35007] = 2 should = 2
x[35006] = 4 should = 4
x[35013] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][35000] = 4 should = 4
X[2][35006] = 8 should = 8
X[2][35000] = 2 should = 1
X[2][35006] = 2 should = 1
X[2][35000] = 4 should = 4
X[2][35006] = 8 should = 8
X[2][35000] = 2 should = 1
X[2][35006] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[35000] = 2 should = 2
x[34993] = 4 should = 4
x[35006] = 4 should = 4
x[34999] = 8 should = 8
x[35000] = 2 should = 2
x[34993] = 4 should = 4
x[35006] = 2 should = 2
x[34999] = 4 should = 4
x[35000] = 2 should = 2
x[35007] = 4 should = 4
x[35006] = 4 should = 4
x[35013] = 8 should = 8
x[35000] = 2 should = 2
x[35007] = 2 should = 2
x[35006] = 4 should = 4
x[35013] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSizeList, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][22496] = 4 should = 4
X[2][22499] = 8 should = 8
X[2][22496] = 2 should = 1
X[2][22499] = 2 should = 1
X[2][22496] = 4 should = 4
X[2][22499] = 8 should = 8
X[2][22496] = 2 should = 1
X[2][22499] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[22496] = 2 should = 2
x[22493] = 4 should = 4
x[22498] = 4 should = 4
x[22495] = 8 should = 8
x[22496] = 2 should = 2
x[22493] = 4 should = 4
x[22498] = 2 should = 2
x[22495] = 4 should = 4
x[22496] = 2 should = 2
x[22500] = 4 should = 4
x[22499] = 4 should = 4
x[22503] = 8 should = 8
x[22496] = 2 should = 2
x[22500] = 2 should = 2
x[22499] = 4 should = 4
x[22503] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(*BlockMap)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][22496] = 4 should = 4
X[2][22499] = 8 should = 8
X[2][22496] = 2 should = 1
X[2][22499] = 2 should = 1
X[2][22496] = 4 should = 4
X[2][22499] = 8 should = 8
X[2][22496] = 2 should = 1
X[2][22499] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[22496] = 2 should = 2
x[22493] = 4 should = 4
x[22498] = 4 should = 4
x[22495] = 8 should = 8
x[22496] = 2 should = 2
x[22493] = 4 should = 4
x[22498] = 2 should = 2
x[22495] = 4 should = 4
x[22496] = 2 should = 2
x[22500] = 4 should = 4
x[22499] = 4 should = 4
x[22503] = 8 should = 8
x[22496] = 2 should = 2
x[22500] = 2 should = 2
x[22499] = 4 should = 4
x[22503] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][5000] = 4 should = 4
X[2][5000] = 8 should = 8
X[2][5000] = 2 should = 1
X[2][5000] = 2 should = 1
X[2][5000] = 4 should = 4
X[2][5000] = 8 should = 8
X[2][5000] = 2 should = 1
X[2][5000] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 4 should = 4
x[5001] = 8 should = 8
x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 4 should = 4
x[5001] = 8 should = 8
x[5000] = 2 should = 2
x[5001] = 2 should = 2
x[5000] = 4 should = 4
x[5001] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][5000] = 4 should = 4
X[2][5000] = 8 should = 8
X[2][5000] = 2 should = 1
X[2][5000] = 2 should = 1
X[2][5000] = 4 should = 4
X[2][5000] = 8 should = 8
X[2][5000] = 2 should = 1
X[2][5000] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 4 should = 4
x[5001] = 8 should = 8
x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 4 should = 4
x[5001] = 8 should = 8
x[5000] = 2 should = 2
x[5001] = 2 should = 2
x[5000] = 4 should = 4
x[5001] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, MyGlobalElements,  IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][5000] = 4 should = 4
X[2][5000] = 8 should = 8
X[2][5000] = 2 should = 1
X[2][5000] = 2 should = 1
X[2][5000] = 4 should = 4
X[2][5000] = 8 should = 8
X[2][5000] = 2 should = 1
X[2][5000] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[5000] = 2 should = 2
x[4999] = 4 should = 4
x[5000] = 4 should = 4
x[4999] = 8 should = 8
x[5000] = 2 should = 2
x[4999] = 4 should = 4
x[5000] = 2 should = 2
x[4999] = 4 should = 4
x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 4 should = 4
x[5001] = 8 should = 8
x[5000] = 2 should = 2
x[5001] = 2 should = 2
x[5000] = 4 should = 4
x[5001] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(*Map)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Testing random_A     	 Checked OK


XXXXX Testing Post-construction modification of a multivector

X[2][5000] = 4 should = 4
X[2][5000] = 8 should = 8
X[2][5000] = 2 should = 1
X[2][5000] = 2 should = 1
X[2][5000] = 4 should = 4
X[2][5000] = 8 should = 8
X[2][5000] = 2 should = 1
X[2][5000] = 4 should = 2


XXXXX Testing Post-construction modification of a vector

x[5000] = 2 should = 2
x[4999] = 4 should = 4
x[5000] = 4 should = 4
x[4999] = 8 should = 8
x[5000] = 2 should = 2
x[4999] = 4 should = 4
x[5000] = 2 should = 2
x[4999] = 4 should = 4
x[5000] = 2 should = 2
x[5001] = 4 should = 4
x[5000] = 4 should = 4
x[5001] = 8 should = 8
x[5000] = 2 should = 2
x[5001] = 2 should = 2
x[5000] = 4 should = 4
x[5001] = 8 should = 8
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK
Testing Assignment operator
On PE 0  A[1][1] should equal = 1.00001 and it does!
Testing MFLOPs


Total FLOPs = 1.45807e+07
Total Time  = 0.025506
MFLOPs      = 571.659


Testing ostream operator:  Multivector  should be 100-by-2 and print i,j indices

Epetra::MultiVector
     MyPID           GID               Value               Value  
         0             0                       0                 100
         0             1                       1                 101
         0             2                       2                 102
         0             3                       3                 103
         0             4                       4                 104
         0             5                       5                 105
         0             6                       6                 106
         0             7                       7                 107
         0             8                       8                 108
         0             9                       9                 109
         0            10                      10                 110
         0            11                      11                 111
         0            12                      12                 112
         0            13                      13                 113
         0            14                      14                 114
         0            15                      15                 115
         0            16                      16                 116
         0            17                      17                 117
         0            18                      18                 118
         0            19                      19                 119
         0            20                      20                 120
         0            21                      21                 121
         0            22                      22                 122
         0            23                      23                 123
         0            24                      24                 124
         0            25                      25                 125
         0            26                      26                 126
         0            27                      27                 127
         0            28                      28                 128
         0            29                      29                 129
         0            30                      30                 130
         0            31                      31                 131
         0            32                      32                 132
         0            33                      33                 133
         0            34                      34                 134
         0            35                      35                 135
         0            36                      36                 136
         0            37                      37                 137
         0            38                      38                 138
         0            39                      39                 139
         0            40                      40                 140
         0            41                      41                 141
         0            42                      42                 142
         0            43                      43                 143
         0            44                      44                 144
         0            45                      45                 145
         0            46                      46                 146
         0            47                      47                 147
         0            48                      48                 148
         0            49                      49                 149
         0            50                      50                 150
         0            51                      51                 151
         0            52                      52                 152
         0            53                      53                 153
         0            54                      54                 154
         0            55                      55                 155
         0            56                      56                 156
         0            57                      57                 157
         0            58                      58                 158
         0            59                      59                 159
         0            60                      60                 160
         0            61                      61                 161
         0            62                      62                 162
         0            63                      63                 163
         0            64                      64                 164
         0            65                      65                 165
         0            66                      66                 166
         0            67                      67                 167
         0            68                      68                 168
         0            69                      69                 169
         0            70                      70                 170
         0            71                      71                 171
         0            72                      72                 172
         0            73                      73                 173
         0            74                      74                 174
         0            75                      75                 175
         0            76                      76                 176
         0            77                      77                 177
         0            78                      78                 178
         0            79                      79                 179
         0            80                      80                 180
         0            81                      81                 181
         0            82                      82                 182
         0            83                      83                 183
         0            84                      84                 184
         0            85                      85                 185
         0            86                      86                 186
         0            87                      87                 187
         0            88                      88                 188
         0            89                      89                 189
         0            90                      90                 190
         0            91                      91                 191
         0            92                      92                 192
         0            93                      93                 193
         0            94                      94                 194
         0            95                      95                 195
         0            96                      96                 196
         0            97                      97                 197
         0            98                      98                 198
         0            99                      99                 199



Testing ostream operator:  Same Multivector as before except using BlockMap of 25x4

Epetra::MultiVector
     MyPID         GID/Point             Value               Value  
         0             0/0                       0                 100
         0             0/1                       1                 101
         0             0/2                       2                 102
         0             0/3                       3                 103
         0             1/0                       4                 104
         0             1/1                       5                 105
         0             1/2                       6                 106
         0             1/3                       7                 107
         0             2/0                       8                 108
         0             2/1                       9                 109
         0             2/2                      10                 110
         0             2/3                      11                 111
         0             3/0                      12                 112
         0             3/1                      13                 113
         0             3/2                      14                 114
         0             3/3                      15                 115
         0             4/0                      16                 116
         0             4/1                      17                 117
         0             4/2                      18                 118
         0             4/3                      19                 119
         0             5/0                      20                 120
         0             5/1                      21                 121
         0             5/2                      22                 122
         0             5/3                      23                 123
         0             6/0                      24                 124
         0             6/1                      25                 125
         0             6/2                      26                 126
         0             6/3                      27                 127
         0             7/0                      28                 128
         0             7/1                      29                 129
         0             7/2                      30                 130
         0             7/3                      31                 131
         0             8/0                      32                 132
         0             8/1                      33                 133
         0             8/2                      34                 134
         0             8/3                      35                 135
         0             9/0                      36                 136
         0             9/1                      37                 137
         0             9/2                      38                 138
         0             9/3                      39                 139
         0            10/0                      40                 140
         0            10/1                      41                 141
         0            10/2                      42                 142
         0            10/3                      43                 143
         0            11/0                      44                 144
         0            11/1                      45                 145
         0            11/2                      46                 146
         0            11/3                      47                 147
         0            12/0                      48                 148
         0            12/1                      49                 149
         0            12/2                      50                 150
         0            12/3                      51                 151
         0            13/0                      52                 152
         0            13/1                      53                 153
         0            13/2                      54                 154
         0            13/3                      55                 155
         0            14/0                      56                 156
         0            14/1                      57                 157
         0            14/2                      58                 158
         0            14/3                      59                 159
         0            15/0                      60                 160
         0            15/1                      61                 161
         0            15/2                      62                 162
         0            15/3                      63                 163
         0            16/0                      64                 164
         0            16/1                      65                 165
         0            16/2                      66                 166
         0            16/3                      67                 167
         0            17/0                      68                 168
         0            17/1                      69                 169
         0            17/2                      70                 170
         0            17/3                      71                 171
         0            18/0                      72                 172
         0            18/1                      73                 173
         0            18/2                      74                 174
         0            18/3                      75                 175
         0            19/0                      76                 176
         0            19/1                      77                 177
         0            19/2                      78                 178
         0            19/3                      79                 179
         0            20/0                      80                 180
         0            20/1                      81                 181
         0            20/2                      82                 182
         0            20/3                      83                 183
         0            21/0                      84                 184
         0            21/1                      85                 185
         0            21/2                      86                 186
         0            21/3                      87                 187
         0            22/0                      88                 188
         0            22/1                      89                 189
         0            22/2                      90                 190
         0            22/3                      91                 191
         0            23/0                      92                 192
         0            23/1                      93                 193
         0            23/2                      94                 194
         0            23/3                      95                 195
         0            24/0                      96                 196
         0            24/1                      97                 197
         0            24/2                      98                 198
         0            24/3                      99                 199

Traceback Mode value = 0
############ cxx_Object_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors


This should say Epetra::Object: Epetra::Object



This should say New name for Epetra_Object: New name for Epetra_Object



Default Traceback Mode value = 1
Set Traceback Mode value to one less than default = 0



This should say 1: 1



This should say New name for Epetra_Object: New name for Epetra_Object



This should say New name for Epetra_Object,1: New name for Epetra_Object,1



This should say New name for Epetra_Object,1: New name for Epetra_Object,1


############ cxx_VbrMatrix_serial.exe ##############
Processor 0 of 1 is alive.


Number of local Rows = 3003



Number of local Rows should = 3003



Number of local Nonzero entries = 27009



Number of global Rows = 3003



Number of global Nonzero entries = 27009



Number of local Block Rows = 1001



Number of local Nonzero Block entries = 3001



Number of global Block Rows = 1001



Number of global Nonzero Block entries = 3001



Number of nonzero values in last row = 6



Rows sorted check OK



NumEntries function check OK

Iter = 0  Lambda = -1.08209  Residual of A*q - lambda*q = 9.34611
Iter = 99  Lambda = 16.1803  Residual of A*q - lambda*q = 2.11413e-15


Total MFLOPs for first solve = 42.4034



Using transpose of matrix and solving again (should give same result).


Iter = 0  Lambda = -1.08209  Residual of A*q - lambda*q = 9.33506
Iter = 99  Lambda = 16.1803  Residual of A*q - lambda*q = 1.56009e-15


Total MFLOPs for transpose solve = 43.1835



Increasing the magnitude of first diagonal term and solving again


Iter = 0  Lambda = -1.0776  Residual of A*q - lambda*q = 9.37892
Iter = 99  Lambda = 89.953  Residual of A*q - lambda*q = 1.80657e-15


Total MFLOPs for second solve = 42.3695



Using transpose of matrix and solving again (should give same result).


Iter = 0  Lambda = -1.0776  Residual of A*q - lambda*q = 9.35841
Iter = 99  Lambda = 89.953  Residual of A*q - lambda*q = 1.83015e-14


Total MFLOPs for tranpose of second solve = 42.9091



*****Testing copy constructor



Number of local Rows = 3003



Number of local Rows should = 3003



Number of local Nonzero entries = 27009



Number of global Rows = 3003



Number of global Nonzero entries = 27009



Number of local Block Rows = 1001



Number of local Nonzero Block entries = 3001



Number of global Block Rows = 1001



Number of global Nonzero Block entries = 3001



Number of nonzero values in last row = 6



Rows sorted check OK



*****Testing post construction modifications

############ cxx_Vector_serial.exe ##############
Epetra::Comm
::Processor 0 of 1 total processors

*********************************************************
Checking Epetra_LocalMap(NumMyElements1, IndexBase, Comm)
     and Epetra_BlockMap(NumGlobalElements, ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSizeList, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(*BlockMap)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, MyGlobalElements,  IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(*Map)
*********************************************************
XXXXX Testing alpha * A     	 Checked OK
XXXXX Testing C = alpha * A + B      	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK


This should say Epetra::Vector: Epetra::Vector


Testing Assignment operator
On PE 0  A[1] should equal = 1.00001 and it does!


Testing MFLOPs


Total FLOPs = 2e+06
Total Time  = 0.053265
MFLOPs      = 37.5481


Testing ostream operator:  Multivector  should be 100-by-2 and print i,j indices

Epetra::Vector
     MyPID           GID               Value  
         0             0                       0
         0             1                       1
         0             2                       2
         0             3                       3
         0             4                       4
         0             5                       5
         0             6                       6
         0             7                       7
         0             8                       8
         0             9                       9
         0            10                      10
         0            11                      11
         0            12                      12
         0            13                      13
         0            14                      14
         0            15                      15
         0            16                      16
         0            17                      17
         0            18                      18
         0            19                      19
         0            20                      20
         0            21                      21
         0            22                      22
         0            23                      23
         0            24                      24
         0            25                      25
         0            26                      26
         0            27                      27
         0            28                      28
         0            29                      29
         0            30                      30
         0            31                      31
         0            32                      32
         0            33                      33
         0            34                      34
         0            35                      35
         0            36                      36
         0            37                      37
         0            38                      38
         0            39                      39
         0            40                      40
         0            41                      41
         0            42                      42
         0            43                      43
         0            44                      44
         0            45                      45
         0            46                      46
         0            47                      47
         0            48                      48
         0            49                      49
         0            50                      50
         0            51                      51
         0            52                      52
         0            53                      53
         0            54                      54
         0            55                      55
         0            56                      56
         0            57                      57
         0            58                      58
         0            59                      59
         0            60                      60
         0            61                      61
         0            62                      62
         0            63                      63
         0            64                      64
         0            65                      65
         0            66                      66
         0            67                      67
         0            68                      68
         0            69                      69
         0            70                      70
         0            71                      71
         0            72                      72
         0            73                      73
         0            74                      74
         0            75                      75
         0            76                      76
         0            77                      77
         0            78                      78
         0            79                      79
         0            80                      80
         0            81                      81
         0            82                      82
         0            83                      83
         0            84                      84
         0            85                      85
         0            86                      86
         0            87                      87
         0            88                      88
         0            89                      89
         0            90                      90
         0            91                      91
         0            92                      92
         0            93                      93
         0            94                      94
         0            95                      95
         0            96                      96
         0            97                      97
         0            98                      98
         0            99                      99

Traceback Mode value = 0
