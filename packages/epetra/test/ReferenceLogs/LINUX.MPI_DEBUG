Date:  Fri Feb 1 11:38:54 CST 2002
Linux heroux00.albanytel.com 2.4.2-2 #1 Sun Apr 8 20:41:30 EDT 2001 i686 unknown
############ cxx_BlockMap_mpi.exe ##############
3679 cxx_BlockMap_mpi.exe running on n0 (o)
6668 cxx_BlockMap_mpi.exe running on n1
8062 cxx_BlockMap_mpi.exe running on n2
6601 cxx_BlockMap_mpi.exe running on n3
6603 cxx_BlockMap_mpi.exe running on n4
6603 cxx_BlockMap_mpi.exe running on n5
6604 cxx_BlockMap_mpi.exe running on n6
6955 cxx_BlockMap_mpi.exe running on n7
Epetra::MpiComm::Processor 0 of 8 total processors
Epetra::MpiComm::Processor 4 of 8 total processors
*******************************************************************************************
        Testing Exceptions (Expect error messages if EPETRA_NO_ERROR_REPORTS is not defined
*******************************************************************************************


Checking Epetra_BlockMap(-2, ElementSize, IndexBase, Comm)

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1
Checked OK


Checking Epetra_BlockMap(2, 3, ElementSize, IndexBase, Comm)
Epetra::MpiComm::Processor 2 of 8 total processors
Epetra::MpiComm::Processor 1 of 8 total processors
Epetra::MpiComm::Processor 3 of 8 total processors
Epetra::MpiComm::Processor 5 of 8 total processors
Epetra::MpiComm::Processor 6 of 8 total processors
Epetra::MpiComm::Processor 7 of 8 total processors

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4
Checked OK



Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4


*******************************************************************************************
        Testing valid constructor now......................................................
*******************************************************************************************



Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4
Checking Epetra_BlockMap(NumGlobalElements, ElementSize, IndexBase, Comm)
Checked OK


Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, ElementSize, IndexBase, Comm)
Checked OK


Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSize, IndexBase, Comm)
Checked OK


Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSizeList, IndexBase, Comm)
Checked OK


Checking Epetra_BlockMap(*Map)
Checked OK


Test ostream << operator
Epetra::BlockMap
Number of Global Elements  = 108
Number of Global Equations = 462
Maximum of all GIDs        = 80002
Minimum of all GIDs        = 9991
Index Base                 = 0
0

Number of Local Elements   = 10
Number of Local Equations  = 41
Maximum of my GIDs         = 10000
Minimum of my GIDs         = 9991

         MyPID           Local Index        Global Index   FirstElementEntry     ElementSize  
             0                 0             10000                 0                 2    
             0                 1              9999                 2                 3    
             0                 2              9998                 5                 4    
             0                 3              9997                 9                 5    
             0                 4              9996                14                 6    
             0                 5              9995                20                 7    
             0                 6              9994                27                 2    
             0                 7              9993                29                 3    
             0                 8              9992                32                 4    
             0                 9              9991                36                 5    
Epetra::BlockMap
Number of Local Elements   = 11
Number of Local Equations  = 47
Maximum of my GIDs         = 20001
Minimum of my GIDs         = 19991

         MyPID           Local Index        Global Index   FirstElementEntry     ElementSize  
             1                 0             20001                 0                 2    
             1                 1             20000                 2                 3    
             1                 2             19999                 5                 4    
             1                 3             19998                 9                 5    
             1                 4             19997                14                 6    
             1                 5             19996                20                 7    
             1                 6             19995                27                 2    
             1                 7             19994                29                 3    
             1                 8             19993                32                 4    
             1                 9             19992                36                 5    
             1                10             19991                41                 6    
Epetra::BlockMap
Number of Local Elements   = 12
Number of Local Equations  = 54
Maximum of my GIDs         = 30002
Minimum of my GIDs         = 29991

         MyPID           Local Index        Global Index   FirstElementEntry     ElementSize  
             2                 0             30002                 0                 2    
             2                 1             30001                 2                 3    
             2                 2             30000                 5                 4    
             2                 3             29999                 9                 5    
             2                 4             29998                14                 6    
             2                 5             29997                20                 7    
             2                 6             29996                27                 2    
             2                 7             29995                29                 3    
             2                 8             29994                32                 4    
             2                 9             29993                36                 5    
             2                10             29992                41                 6    
             2                11             29991                47                 7    
Epetra::BlockMap
Number of Local Elements   = 13
Number of Local Equations  = 56
Maximum of my GIDs         = 40002
Minimum of my GIDs         = 39990

         MyPID           Local Index        Global Index   FirstElementEntry     ElementSize  
             3                 0             40002                 0                 2    
             3                 1             40001                 2                 3    
             3                 2             40000                 5                 4    
             3                 3             39999                 9                 5    
             3                 4             39998                14                 6    
             3                 5             39997                20                 7    
             3                 6             39996                27                 2    
             3                 7             39995                29                 3    
             3                 8             39994                32                 4    
             3                 9             39993                36                 5    
             3                10             39992                41                 6    
             3                11             39991                47                 7    
             3                12             39990                54                 2    
Epetra::BlockMap
Number of Local Elements   = 14
Number of Local Equations  = 59
Maximum of my GIDs         = 50002
Minimum of my GIDs         = 49989

         MyPID           Local Index        Global Index   FirstElementEntry     ElementSize  
             4                 0             50002                 0                 2    
             4                 1             50001                 2                 3    
             4                 2             50000                 5                 4    
             4                 3             49999                 9                 5    
             4                 4             49998                14                 6    
             4                 5             49997                20                 7    
             4                 6             49996                27                 2    
             4                 7             49995                29                 3    
             4                 8             49994                32                 4    
             4                 9             49993                36                 5    
             4                10             49992                41                 6    
             4                11             49991                47                 7    
             4                12             49990                54                 2    
             4                13             49989                56                 3    
Epetra::BlockMap
Number of Local Elements   = 15
Number of Local Equations  = 63
Maximum of my GIDs         = 60002
Minimum of my GIDs         = 59988

         MyPID           Local Index        Global Index   FirstElementEntry     ElementSize  
             5                 0             60002                 0                 2    
             5                 1             60001                 2                 3    
             5                 2             60000                 5                 4    
             5                 3             59999                 9                 5    
             5                 4             59998                14                 6    
             5                 5             59997                20                 7    
             5                 6             59996                27                 2    
             5                 7             59995                29                 3    
             5                 8             59994                32                 4    
             5                 9             59993                36                 5    
             5                10             59992                41                 6    
             5                11             59991                47                 7    
             5                12             59990                54                 2    
             5                13             59989                56                 3    
             5                14             59988                59                 4    
Epetra::BlockMap
Number of Local Elements   = 16
Number of Local Equations  = 68
Maximum of my GIDs         = 70002
Minimum of my GIDs         = 69987

         MyPID           Local Index        Global Index   FirstElementEntry     ElementSize  
             6                 0             70002                 0                 2    
             6                 1             70001                 2                 3    
             6                 2             70000                 5                 4    
             6                 3             69999                 9                 5    
             6                 4             69998                14                 6    
             6                 5             69997                20                 7    
             6                 6             69996                27                 2    
             6                 7             69995                29                 3    
             6                 8             69994                32                 4    
             6                 9             69993                36                 5    
             6                10             69992                41                 6    
             6                11             69991                47                 7    
             6                12             69990                54                 2    
             6                13             69989                56                 3    
             6                14             69988                59                 4    
             6                15             69987                63                 5    
Epetra::BlockMap
Number of Local Elements   = 17
Number of Local Equations  = 74
Maximum of my GIDs         = 80002
Minimum of my GIDs         = 79986

         MyPID           Local Index        Global Index   FirstElementEntry     ElementSize  
             7                 0             80002                 0                 2    
             7                 1             80001                 2                 3    
             7                 2             80000                 5                 4    
             7                 3             79999                 9                 5    
             7                 4             79998                14                 6    
             7                 5             79997                20                 7    
             7                 6             79996                27                 2    
             7                 7             79995                29                 3    
             7                 8             79994                32                 4    
             7                 9             79993                36                 5    
             7                10             79992                41                 6    
             7                11             79991                47                 7    
             7                12             79990                54                 2    
             7                13             79989                56                 3    
             7                14             79988                59                 4    
             7                15             79987                63                 5    
             7                16             79986                68                 6    
############ cxx_Comm_mpi.exe ##############
3698 cxx_Comm_mpi.exe running on n0 (o)
6669 cxx_Comm_mpi.exe running on n1
8063 cxx_Comm_mpi.exe running on n2
6602 cxx_Comm_mpi.exe running on n3
6604 cxx_Comm_mpi.exe running on n4
6604 cxx_Comm_mpi.exe running on n5
6605 cxx_Comm_mpi.exe running on n6
6956 cxx_Comm_mpi.exe running on n7
Epetra::MpiComm::Processor 0 of 8 total processors.  Using MPI_Comm from Petra_Comm: Processor 0 of 8 (should be the same).
Epetra::MpiComm::Processor 7 of 8 total processors.  Using MPI_Comm from Petra_Comm: Processor 7 of 8 (should be the same).
Epetra::MpiComm::Processor 3 of 8 total processors.  Using MPI_Comm from Petra_Comm: Processor 3 of 8 (should be the same).
Epetra::MpiComm::Processor 4 of 8 total processors.  Using MPI_Comm from Petra_Comm: Processor 4 of 8 (should be the same).
Epetra::MpiComm::Processor 2 of 8 total processors.  Using MPI_Comm from Petra_Comm: Processor 2 of 8 (should be the same).
Epetra::MpiComm::Processor 6 of 8 total processors.  Using MPI_Comm from Petra_Comm: Processor 6 of 8 (should be the same).
Epetra::MpiComm::Processor 5 of 8 total processors.  Using MPI_Comm from Petra_Comm: Processor 5 of 8 (should be the same).
Epetra::MpiComm::Processor 1 of 8 total processors.  Using MPI_Comm from Petra_Comm: Processor 1 of 8 (should be the same).
Processor 0 Time to reach barrier: 0.0763791
Processor 1 Time to reach barrier: 0.152035
Processor 2 Time to reach barrier: 0.228074
Processor 3 Time to reach barrier: 0.303988
Processor 4 Time to reach barrier: 0.379993
Processor 5 Time to reach barrier: 0.455922
Processor 6 Time to reach barrier: 0.531888
Processor 7 Time to reach barrier: 0.607869
Processor 0 Sum result  499785 Time to get beyond barrier: 0.608245
Processor 1 Sum result  499622 Time to get beyond barrier: 0.608286
Processor 4 Sum result  499776 Time to get beyond barrier: 0.608301
Processor 2 Sum result  499640 Time to get beyond barrier: 0.6083
Processor 3 Sum result  499695 Time to get beyond barrier: 0.608295
Processor 5 Sum result  499787 Time to get beyond barrier: 0.608297
Processor 6 Sum result  499799 Time to get beyond barrier: 0.608296
Processor 7 Sum result  499895 Time to get beyond barrier: 0.608314
Epetra::Comm::Processor 0 of 1 total processors
Epetra::Comm::Processor 0 of 1 total processors is past serial barrier.
Epetra::Comm::Processor 0 of 1 total processors
Epetra::Comm::Processor 0 of 1 total processors
Epetra::Comm::Processor 0 of 1 total processors
Epetra::Comm::Processor 0 of 1 total processors
Epetra::Comm::Processor 0 of 1 total processors
Epetra::Comm::Processor 0 of 1 total processors is past serial barrier.
Epetra::Comm::Processor 0 of 1 total processors
Epetra::Comm::Processor 0 of 1 total processors is past serial barrier.
Epetra::Comm::Processor 0 of 1 total processors is past serial barrier.
Epetra::Comm::Processor 0 of 1 total processors is past serial barrier.
Epetra::Comm::Processor 0 of 1 total processors
Epetra::Comm::Processor 0 of 1 total processors is past serial barrier.
Epetra::Comm::Processor 0 of 1 total processors is past serial barrier.
Epetra::Comm::Processor 0 of 1 total processors is past serial barrier.

 Epetra_Comm Check OK.





 Epetra_Comm Check OK.

 Epetra_Comm Check OK.
 Epetra_Comm Check OK.
 Epetra_Comm Check OK.
 Epetra_Comm Check OK.

 Epetra_Comm Check OK.
 Epetra_Comm Check OK.
############ cxx_CrsGraph_mpi.exe ##############
3717 cxx_CrsGraph_mpi.exe running on n0 (o)
6670 cxx_CrsGraph_mpi.exe running on n1
8064 cxx_CrsGraph_mpi.exe running on n2
6603 cxx_CrsGraph_mpi.exe running on n3
6605 cxx_CrsGraph_mpi.exe running on n4
6605 cxx_CrsGraph_mpi.exe running on n5
6606 cxx_CrsGraph_mpi.exe running on n6
6957 cxx_CrsGraph_mpi.exe running on n7
Processor 0 of 8 is alive.
Processor 4 of 8 is alive.
Processor 2 of 8 is alive.
Processor 1 of 8 is alive.
Processor 6 of 8 is alive.
Processor 5 of 8 is alive.
Processor 3 of 8 is alive.
Processor 7 of 8 is alive.


*****Testing variable entry constructor



Number of local Rows = 10001



Number of local Nonzero entries = 30002



Number of global Rows = 80003



Number of global Nonzero entries = 240007



Rows sorted check OK



NumIndices function check OK



*****Testing constant entry constructor



Number of local Rows = 10001



Number of local Nonzero entries = 10001



Number of global Rows = 80003



Number of global Nonzero entries = 80003



Rows sorted check OK



NumIndices function check OK



*****Testing copy constructor



Number of local Rows = 10001



Number of local Nonzero entries = 10001



Number of global Rows = 80003



Number of global Nonzero entries = 80003



Rows sorted check OK



NumIndices function check OK



*****Testing post construction modifications



Print out tridiagonal matrix, each part on each processor. Index base is one.


Epetra::CrsGraph
Number of Global Block Rows  = 32
Number of Global Block Cols  = 32
Number of Global Block Diags = 32
Number of Global Entries     = 94

Number of Global Rows        = 32
Number of Global Cols        = 32
Number of Global Diagonals   = 32
Number of Global Nonzeros    = 94

Global Maximum Block Row Dim = 1
Global Maximum Block Col Dim = 1
Global Maximum Num Indices   = 3





Number of My Block Rows  = 4
Number of My Block Cols  = 5
Number of My Block Diags = 4
Number of My Entries     = 11

Number of My Rows        = 4
Number of My Cols        = 5
Number of My Diagonals   = 4
Number of My Nonzeros    = 11

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
             1               1               2    
             2               1               2               3    
             3               2               3               4    
             4               3               4               5    
Epetra::CrsGraph
Number of My Block Rows  = 4
Number of My Block Cols  = 6
Number of My Block Diags = 4
Number of My Entries     = 12

Number of My Rows        = 4
Number of My Cols        = 6
Number of My Diagonals   = 4
Number of My Nonzeros    = 12

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
             5               5               6               4    
             6               5               6               7    
             7               6               7               8    
             8               7               8               9    
Epetra::CrsGraph
Number of My Block Rows  = 4
Number of My Block Cols  = 6
Number of My Block Diags = 4
Number of My Entries     = 12

Number of My Rows        = 4
Number of My Cols        = 6
Number of My Diagonals   = 4
Number of My Nonzeros    = 12

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
             9               9              10               8    
            10               9              10              11    
            11              10              11              12    
            12              11              12              13    
Epetra::CrsGraph
Number of My Block Rows  = 4
Number of My Block Cols  = 6
Number of My Block Diags = 4
Number of My Entries     = 12

Number of My Rows        = 4
Number of My Cols        = 6
Number of My Diagonals   = 4
Number of My Nonzeros    = 12

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
            13              13              14              12    
            14              13              14              15    
            15              14              15              16    
            16              15              16              17    
Epetra::CrsGraph
Number of My Block Rows  = 4
Number of My Block Cols  = 6
Number of My Block Diags = 4
Number of My Entries     = 12

Number of My Rows        = 4
Number of My Cols        = 6
Number of My Diagonals   = 4
Number of My Nonzeros    = 12

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
            17              17              18              16    
            18              17              18              19    
            19              18              19              20    
            20              19              20              21    
Epetra::CrsGraph
Number of My Block Rows  = 4
Number of My Block Cols  = 6
Number of My Block Diags = 4
Number of My Entries     = 12

Number of My Rows        = 4
Number of My Cols        = 6
Number of My Diagonals   = 4
Number of My Nonzeros    = 12

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
            21              21              22              20    
            22              21              22              23    
            23              22              23              24    
            24              23              24              25    
Epetra::CrsGraph
Number of My Block Rows  = 4
Number of My Block Cols  = 6
Number of My Block Diags = 4
Number of My Entries     = 12

Number of My Rows        = 4
Number of My Cols        = 6
Number of My Diagonals   = 4
Number of My Nonzeros    = 12

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
            25              25              26              24    
            26              25              26              27    
            27              26              27              28    
            28              27              28              29    
Epetra::CrsGraph
Number of My Block Rows  = 4
Number of My Block Cols  = 5
Number of My Block Diags = 4
Number of My Entries     = 11

Number of My Rows        = 4
Number of My Cols        = 5
Number of My Diagonals   = 4
Number of My Nonzeros    = 11

My Maximum Block Row Dim = 1
My Maximum Block Col Dim = 1
My Maximum Num Indices   = 3

       Row Index     Col Index         Col Index         Col Index      
            29              29              30              28    
            30              29              30              31    
            31              30              31              32    
            32              31              32    








############ cxx_CrsMatrix_mpi.exe ##############
3736 cxx_CrsMatrix_mpi.exe running on n0 (o)
6671 cxx_CrsMatrix_mpi.exe running on n1
8065 cxx_CrsMatrix_mpi.exe running on n2
6604 cxx_CrsMatrix_mpi.exe running on n3
6606 cxx_CrsMatrix_mpi.exe running on n4
6606 cxx_CrsMatrix_mpi.exe running on n5
6607 cxx_CrsMatrix_mpi.exe running on n6
6958 cxx_CrsMatrix_mpi.exe running on n7
Processor 0 of 8 is alive.
Processor 4 of 8 is alive.
Processor 2 of 8 is alive.
Processor 1 of 8 is alive.
Processor 6 of 8 is alive.
Processor 3 of 8 is alive.
Processor 5 of 8 is alive.
Processor 7 of 8 is alive.


Number of local Rows = 10001



Number of local Nonzero entries = 30002



Number of global Rows = 80003



Number of global Nonzero entries = 240007



Rows sorted check OK



NumEntries function check OK

Iter = 0  Lambda = 1.99638  Residual of A*q - lambda*q = 1.41119
Iter = 100  Lambda = 3.98992  Residual of A*q - lambda*q = 0.0141816


Total MFLOPs for first solve = 0



Using transpose of matrix and solving again (should give same result).


Iter = 0  Lambda = 1.98673  Residual of A*q - lambda*q = 1.4146
Iter = 100  Lambda = 3.99014  Residual of A*q - lambda*q = 0.0137959


Total MFLOPs for transpose solve = 0



Increasing the magnitude of first diagonal term and solving again


Iter = 0  Lambda = 2.00046  Residual of A*q - lambda*q = 1.41261
Iter = 100  Lambda = 20.0556  Residual of A*q - lambda*q = 3.29948e-16


Total MFLOPs for second solve = 0



Using transpose of matrix and solving again (should give same result).


Iter = 0  Lambda = 2.00402  Residual of A*q - lambda*q = 1.41447
Iter = 100  Lambda = 20.0556  Residual of A*q - lambda*q = 3.29948e-16


Total MFLOPs for tranpose of second solve = 0



*****Testing constant entry constructor



Number of local Rows = 10001



Number of local Nonzero entries = 10001



Number of global Rows = 80003



Number of global Nonzero entries = 80003



Rows sorted check OK



NumEntries function check OK



*****Testing copy constructor



Number of local Rows = 10001



Number of local Nonzero entries = 10001



Number of global Rows = 80003



Number of global Nonzero entries = 80003



Rows sorted check OK



NumEntries function check OK



*****Testing post construction modifications



Print out tridiagonal matrix, each part on each processor.


Epetra::CrsMatrix
Number of Global Rows        = 16
Number of Global Cols        = 16
Number of Global Diagonals   = 16
Number of Global Nonzeros    = 46
Global Maximum Num Entries   = 3





Number of My Rows        = 2
Number of My Cols        = 3
Number of My Diagonals   = 2
Number of My Nonzeros    = 5
My Maximum Num Entries   = 3

Epetra::CrsMatrix
Number of My Rows        = 2
Number of My Cols        = 4
Number of My Diagonals   = 2
Number of My Nonzeros    = 6
My Maximum Num Entries   = 3

Epetra::CrsMatrix
Number of My Rows        = 2
Number of My Cols        = 4
Number of My Diagonals   = 2
Number of My Nonzeros    = 6
My Maximum Num Entries   = 3

Epetra::CrsMatrix
Number of My Rows        = 2
Number of My Cols        = 4
Number of My Diagonals   = 2
Number of My Nonzeros    = 6
My Maximum Num Entries   = 3

Epetra::CrsMatrix
Number of My Rows        = 2
Number of My Cols        = 4
Number of My Diagonals   = 2
Number of My Nonzeros    = 6
My Maximum Num Entries   = 3

Epetra::CrsMatrix
Number of My Rows        = 2
Number of My Cols        = 4
Number of My Diagonals   = 2
Number of My Nonzeros    = 6
My Maximum Num Entries   = 3

Epetra::CrsMatrix
Number of My Rows        = 2
Number of My Cols        = 4
Number of My Diagonals   = 2
Number of My Nonzeros    = 6
My Maximum Num Entries   = 3

Epetra::CrsMatrix
Number of My Rows        = 2
Number of My Cols        = 3
Number of My Diagonals   = 2
Number of My Nonzeros    = 5
My Maximum Num Entries   = 3

   Processor    Row Index    Col Index           Value     
       0             0             0      2.000000000000e+00    
       0             0             1     -1.000000000000e+00    
       0             1             0     -1.000000000000e+00    
       0             1             1      2.000000000000e+00    
       0             1             2     -1.000000000000e+00    
       1             2             2      2.000000000000e+00    
       1             2             3     -1.000000000000e+00    
       1             2             1     -1.000000000000e+00    
       1             3             2     -1.000000000000e+00    
       1             3             3      2.000000000000e+00    
       1             3             4     -1.000000000000e+00    
       2             4             4      2.000000000000e+00    
       2             4             5     -1.000000000000e+00    
       2             4             3     -1.000000000000e+00    
       2             5             4     -1.000000000000e+00    
       2             5             5      2.000000000000e+00    
       2             5             6     -1.000000000000e+00    
       3             6             6      2.000000000000e+00    
       3             6             7     -1.000000000000e+00    
       3             6             5     -1.000000000000e+00    
       3             7             6     -1.000000000000e+00    
       3             7             7      2.000000000000e+00    
       3             7             8     -1.000000000000e+00    
       4             8             8      2.000000000000e+00    
       4             8             9     -1.000000000000e+00    
       4             8             7     -1.000000000000e+00    
       4             9             8     -1.000000000000e+00    
       4             9             9      2.000000000000e+00    
       4             9            10     -1.000000000000e+00    
       5            10            10      2.000000000000e+00    
       5            10            11     -1.000000000000e+00    
       5            10             9     -1.000000000000e+00    
       5            11            10     -1.000000000000e+00    
       5            11            11      2.000000000000e+00    
       5            11            12     -1.000000000000e+00    
       6            12            12      2.000000000000e+00    
       6            12            13     -1.000000000000e+00    
       6            12            11     -1.000000000000e+00    
       6            13            12     -1.000000000000e+00    
       6            13            13      2.000000000000e+00    
       6            13            14     -1.000000000000e+00    
       7            14            14      2.000000000000e+00    
       7            14            15     -1.000000000000e+00    
       7            14            13     -1.000000000000e+00    
       7            15            14     -1.000000000000e+00    
       7            15            15      2.000000000000e+00    








############ cxx_CrsRectMatrix_mpi.exe ##############
3755 cxx_CrsRectMatrix_mpi.exe running on n0 (o)
6672 cxx_CrsRectMatrix_mpi.exe running on n1
8066 cxx_CrsRectMatrix_mpi.exe running on n2
6605 cxx_CrsRectMatrix_mpi.exe running on n3
6607 cxx_CrsRectMatrix_mpi.exe running on n4
6607 cxx_CrsRectMatrix_mpi.exe running on n5
6608 cxx_CrsRectMatrix_mpi.exe running on n6
6959 cxx_CrsRectMatrix_mpi.exe running on n7
Processor 0 of 8 is alive.
Processor 4 of 8 is alive.
Processor 2 of 8 is alive.
Processor 1 of 8 is alive.
Processor 6 of 8 is alive.
Processor 5 of 8 is alive.
Processor 3 of 8 is alive.
Processor 7 of 8 is alive.


Total MFLOPs for B*Y = 0



Total MFLOPs for A^T*Y = 0



Total MFLOPs for A*X = 0

Residual = 2.90874e-15

############ cxx_ImportExport_mpi.exe ##############
3774 cxx_ImportExport_mpi.exe running on n0 (o)
6673 cxx_ImportExport_mpi.exe running on n1
8067 cxx_ImportExport_mpi.exe running on n2
6606 cxx_ImportExport_mpi.exe running on n3
6608 cxx_ImportExport_mpi.exe running on n4
6608 cxx_ImportExport_mpi.exe running on n5
6609 cxx_ImportExport_mpi.exe running on n6
6960 cxx_ImportExport_mpi.exe running on n7
Processor 0 of 8 is alive.
Processor 4 of 8 is alive.
Processor 2 of 8 is alive.
Processor 1 of 8 is alive.
Processor 6 of 8 is alive.
Processor 5 of 8 is alive.
Processor 3 of 8 is alive.
Processor 7 of 8 is alive.
MultiVector Import using Importer Check OK

Vector Export using Importer Check OK

Matrix Export Check OK
############ cxx_Map_mpi.exe ##############
3799 cxx_Map_mpi.exe running on n0 (o)
6674 cxx_Map_mpi.exe running on n1
8068 cxx_Map_mpi.exe running on n2
6607 cxx_Map_mpi.exe running on n3
6609 cxx_Map_mpi.exe running on n4
6609 cxx_Map_mpi.exe running on n5
6610 cxx_Map_mpi.exe running on n6
6961 cxx_Map_mpi.exe running on n7
Epetra::MpiComm::Processor 0 of 8 total processors
*******************************************************************************************
        Testing Exceptions (Expect error messages if EPETRA_NO_ERROR_REPORTS is not defined
*******************************************************************************************


Checking Epetra_Map(-2, IndexBase, Comm)

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1
Checked OK


Checking Epetra_Map(2, 3, IndexBase, Comm)

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1
Epetra::MpiComm::Processor 4 of 8 total processors

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1
Epetra::MpiComm::Processor 2 of 8 total processors

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1
Epetra::MpiComm::Processor 6 of 8 total processors
Epetra::MpiComm::Processor 1 of 8 total processors

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4
Checked OK



Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1
Epetra::MpiComm::Processor 3 of 8 total processors
Epetra::MpiComm::Processor 5 of 8 total processors

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  NumGlobalElements = -2.  Should be >= 0.  Error Code:  -1


*******************************************************************************************
        Testing valid constructor now......................................................
*******************************************************************************************


Epetra::MpiComm::Processor 7 of 8 total processors

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4

Error in Epetra Object with label:  Epetra::BlockMap
Epetra Error:  Invalid NumGlobalElements.  NumGlobalElements = 2.  Should equal 24, or be set to -1 to compute automatically  Error Code:  -4
Checking Epetra_Map(NumGlobalElements, IndexBase, Comm)
Checked OK


Checking Epetra_Map(NumGlobalElements, NumMyElements, IndexBase, Comm)
Checked OK


Checking Epetra_Map(NumGlobalElements, NumMyElements, MyGlobalElements,  IndexBase, Comm)
Checked OK


Checking Epetra_Map(*Map)
Checked OK


Checking Epetra_LocalMap(NumMyElements1, IndexBase, Comm)
Checked OK


Checking Epetra_LocalMap(*LocalMap)
Checked OK


Test ostream << operator
Epetra::BlockMap
Number of Global Elements  = 108
Number of Global Equations = 108
Maximum of all GIDs        = 80002
Minimum of all GIDs        = 9991
Index Base                 = 0
Constant Element Size      = 1

Number of Local Elements   = 10
Number of Local Equations  = 10
Maximum of my GIDs         = 10000
Minimum of my GIDs         = 9991

         MyPID           Local Index        Global Index  
             0                 0             10000    
             0                 1              9999    
             0                 2              9998    
             0                 3              9997    
             0                 4              9996    
             0                 5              9995    
             0                 6              9994    
             0                 7              9993    
             0                 8              9992    
             0                 9              9991    
Epetra::BlockMap
Number of Local Elements   = 11
Number of Local Equations  = 11
Maximum of my GIDs         = 20001
Minimum of my GIDs         = 19991

         MyPID           Local Index        Global Index  
             1                 0             20001    
             1                 1             20000    
             1                 2             19999    
             1                 3             19998    
             1                 4             19997    
             1                 5             19996    
             1                 6             19995    
             1                 7             19994    
             1                 8             19993    
             1                 9             19992    
             1                10             19991    
Epetra::BlockMap
Number of Local Elements   = 12
Number of Local Equations  = 12
Maximum of my GIDs         = 30002
Minimum of my GIDs         = 29991

         MyPID           Local Index        Global Index  
             2                 0             30002    
             2                 1             30001    
             2                 2             30000    
             2                 3             29999    
             2                 4             29998    
             2                 5             29997    
             2                 6             29996    
             2                 7             29995    
             2                 8             29994    
             2                 9             29993    
             2                10             29992    
             2                11             29991    
Epetra::BlockMap
Number of Local Elements   = 13
Number of Local Equations  = 13
Maximum of my GIDs         = 40002
Minimum of my GIDs         = 39990

         MyPID           Local Index        Global Index  
             3                 0             40002    
             3                 1             40001    
             3                 2             40000    
             3                 3             39999    
             3                 4             39998    
             3                 5             39997    
             3                 6             39996    
             3                 7             39995    
             3                 8             39994    
             3                 9             39993    
             3                10             39992    
             3                11             39991    
             3                12             39990    
Epetra::BlockMap
Number of Local Elements   = 14
Number of Local Equations  = 14
Maximum of my GIDs         = 50002
Minimum of my GIDs         = 49989

         MyPID           Local Index        Global Index  
             4                 0             50002    
             4                 1             50001    
             4                 2             50000    
             4                 3             49999    
             4                 4             49998    
             4                 5             49997    
             4                 6             49996    
             4                 7             49995    
             4                 8             49994    
             4                 9             49993    
             4                10             49992    
             4                11             49991    
             4                12             49990    
             4                13             49989    
Epetra::BlockMap
Number of Local Elements   = 15
Number of Local Equations  = 15
Maximum of my GIDs         = 60002
Minimum of my GIDs         = 59988

         MyPID           Local Index        Global Index  
             5                 0             60002    
             5                 1             60001    
             5                 2             60000    
             5                 3             59999    
             5                 4             59998    
             5                 5             59997    
             5                 6             59996    
             5                 7             59995    
             5                 8             59994    
             5                 9             59993    
             5                10             59992    
             5                11             59991    
             5                12             59990    
             5                13             59989    
             5                14             59988    
Epetra::BlockMap
Number of Local Elements   = 16
Number of Local Equations  = 16
Maximum of my GIDs         = 70002
Minimum of my GIDs         = 69987

         MyPID           Local Index        Global Index  
             6                 0             70002    
             6                 1             70001    
             6                 2             70000    
             6                 3             69999    
             6                 4             69998    
             6                 5             69997    
             6                 6             69996    
             6                 7             69995    
             6                 8             69994    
             6                 9             69993    
             6                10             69992    
             6                11             69991    
             6                12             69990    
             6                13             69989    
             6                14             69988    
             6                15             69987    
Epetra::BlockMap
Number of Local Elements   = 17
Number of Local Equations  = 17
Maximum of my GIDs         = 80002
Minimum of my GIDs         = 79986

         MyPID           Local Index        Global Index  
             7                 0             80002    
             7                 1             80001    
             7                 2             80000    
             7                 3             79999    
             7                 4             79998    
             7                 5             79997    
             7                 6             79996    
             7                 7             79995    
             7                 8             79994    
             7                 9             79993    
             7                10             79992    
             7                11             79991    
             7                12             79990    
             7                13             79989    
             7                14             79988    
             7                15             79987    
             7                16             79986    
############ cxx_MultiVector_mpi.exe ##############
3831 cxx_MultiVector_mpi.exe running on n0 (o)
6675 cxx_MultiVector_mpi.exe running on n1
8069 cxx_MultiVector_mpi.exe running on n2
6608 cxx_MultiVector_mpi.exe running on n3
6610 cxx_MultiVector_mpi.exe running on n4
6610 cxx_MultiVector_mpi.exe running on n5
6611 cxx_MultiVector_mpi.exe running on n6
6962 cxx_MultiVector_mpi.exe running on n7
Epetra::MpiComm::Processor 0 of 8 total processors

*********************************************************
Checking Epetra_LocalMap(NumMyElements1, IndexBase, Comm)
     and Epetra_BlockMap(NumGlobalElements, ElementSize, IndexBase, Comm)
*********************************************************
Epetra::MpiComm::Processor 4 of 8 total processors
Epetra::MpiComm::Processor 2 of 8 total processors
Epetra::MpiComm::Processor 1 of 8 total processors
Epetra::MpiComm::Processor 6 of 8 total processors
Epetra::MpiComm::Processor 5 of 8 total processors
Epetra::MpiComm::Processor 3 of 8 total processors
Epetra::MpiComm::Processor 7 of 8 total processors
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSizeList, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(*BlockMap)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, MyGlobalElements,  IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
Error code: 0
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(*Map)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local MultiVector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK
Testing Assignment operator
On PE 0  A[1][1] should equal = 1.00001 and it does!
On PE 4  A[1][1] should equal = 5.00005 and it does!
On PE 2  A[1][1] should equal = 3.00003 and it does!
On PE 7  A[1][1] should equal = 8.00008 and it does!
On PE 1  A[1][1] should equal = 2.00002 and it does!
On PE 5  A[1][1] should equal = 6.00006 and it does!
On PE 3  A[1][1] should equal = 4.00004 and it does!
On PE 6  A[1][1] should equal = 7.00007 and it does!
Testing MFLOPs


Total FLOPs = 1.16641e+08
Total Time  = 0.042399
MFLOPs      = 2751.03


Testing ostream operator:  Multivector  should be 100-by-2 and print i,j indices

Epetra::MultiVector         MyPID          Global Index               Value               Value  
             0                 0      0.000000000000e+00  1.000000000000e+02
             0                 1      1.000000000000e+00  1.010000000000e+02
             0                 2      2.000000000000e+00  1.020000000000e+02
             0                 3      3.000000000000e+00  1.030000000000e+02
             0                 4      4.000000000000e+00  1.040000000000e+02
             0                 5      5.000000000000e+00  1.050000000000e+02
             0                 6      6.000000000000e+00  1.060000000000e+02
             0                 7      7.000000000000e+00  1.070000000000e+02
             0                 8      8.000000000000e+00  1.080000000000e+02
             0                 9      9.000000000000e+00  1.090000000000e+02
             0                10      1.000000000000e+01  1.100000000000e+02
             0                11      1.100000000000e+01  1.110000000000e+02
             0                12      1.200000000000e+01  1.120000000000e+02
Epetra::MultiVector             1                13      0.000000000000e+00  1.000000000000e+02
             1                14      1.000000000000e+00  1.010000000000e+02
             1                15      2.000000000000e+00  1.020000000000e+02
             1                16      3.000000000000e+00  1.030000000000e+02
             1                17      4.000000000000e+00  1.040000000000e+02
             1                18      5.000000000000e+00  1.050000000000e+02
             1                19      6.000000000000e+00  1.060000000000e+02
             1                20      7.000000000000e+00  1.070000000000e+02
             1                21      8.000000000000e+00  1.080000000000e+02
             1                22      9.000000000000e+00  1.090000000000e+02
             1                23      1.000000000000e+01  1.100000000000e+02
             1                24      1.100000000000e+01  1.110000000000e+02
             1                25      1.200000000000e+01  1.120000000000e+02
Epetra::MultiVector             2                26      0.000000000000e+00  1.000000000000e+02
             2                27      1.000000000000e+00  1.010000000000e+02
             2                28      2.000000000000e+00  1.020000000000e+02
             2                29      3.000000000000e+00  1.030000000000e+02
             2                30      4.000000000000e+00  1.040000000000e+02
             2                31      5.000000000000e+00  1.050000000000e+02
             2                32      6.000000000000e+00  1.060000000000e+02
             2                33      7.000000000000e+00  1.070000000000e+02
             2                34      8.000000000000e+00  1.080000000000e+02
             2                35      9.000000000000e+00  1.090000000000e+02
             2                36      1.000000000000e+01  1.100000000000e+02
             2                37      1.100000000000e+01  1.110000000000e+02
             2                38      1.200000000000e+01  1.120000000000e+02
Epetra::MultiVector             3                39      0.000000000000e+00  1.000000000000e+02
             3                40      1.000000000000e+00  1.010000000000e+02
             3                41      2.000000000000e+00  1.020000000000e+02
             3                42      3.000000000000e+00  1.030000000000e+02
             3                43      4.000000000000e+00  1.040000000000e+02
             3                44      5.000000000000e+00  1.050000000000e+02
             3                45      6.000000000000e+00  1.060000000000e+02
             3                46      7.000000000000e+00  1.070000000000e+02
             3                47      8.000000000000e+00  1.080000000000e+02
             3                48      9.000000000000e+00  1.090000000000e+02
             3                49      1.000000000000e+01  1.100000000000e+02
             3                50      1.100000000000e+01  1.110000000000e+02
             3                51      1.200000000000e+01  1.120000000000e+02
Epetra::MultiVector             4                52      0.000000000000e+00  1.000000000000e+02
             4                53      1.000000000000e+00  1.010000000000e+02
             4                54      2.000000000000e+00  1.020000000000e+02
             4                55      3.000000000000e+00  1.030000000000e+02
             4                56      4.000000000000e+00  1.040000000000e+02
             4                57      5.000000000000e+00  1.050000000000e+02
             4                58      6.000000000000e+00  1.060000000000e+02
             4                59      7.000000000000e+00  1.070000000000e+02
             4                60      8.000000000000e+00  1.080000000000e+02
             4                61      9.000000000000e+00  1.090000000000e+02
             4                62      1.000000000000e+01  1.100000000000e+02
             4                63      1.100000000000e+01  1.110000000000e+02
Epetra::MultiVector             5                64      0.000000000000e+00  1.000000000000e+02
             5                65      1.000000000000e+00  1.010000000000e+02
             5                66      2.000000000000e+00  1.020000000000e+02
             5                67      3.000000000000e+00  1.030000000000e+02
             5                68      4.000000000000e+00  1.040000000000e+02
             5                69      5.000000000000e+00  1.050000000000e+02
             5                70      6.000000000000e+00  1.060000000000e+02
             5                71      7.000000000000e+00  1.070000000000e+02
             5                72      8.000000000000e+00  1.080000000000e+02
             5                73      9.000000000000e+00  1.090000000000e+02
             5                74      1.000000000000e+01  1.100000000000e+02
             5                75      1.100000000000e+01  1.110000000000e+02
Epetra::MultiVector             6                76      0.000000000000e+00  1.000000000000e+02
             6                77      1.000000000000e+00  1.010000000000e+02
             6                78      2.000000000000e+00  1.020000000000e+02
             6                79      3.000000000000e+00  1.030000000000e+02
             6                80      4.000000000000e+00  1.040000000000e+02
             6                81      5.000000000000e+00  1.050000000000e+02
             6                82      6.000000000000e+00  1.060000000000e+02
             6                83      7.000000000000e+00  1.070000000000e+02
             6                84      8.000000000000e+00  1.080000000000e+02
             6                85      9.000000000000e+00  1.090000000000e+02
             6                86      1.000000000000e+01  1.100000000000e+02
             6                87      1.100000000000e+01  1.110000000000e+02
Epetra::MultiVector             7                88      0.000000000000e+00  1.000000000000e+02
             7                89      1.000000000000e+00  1.010000000000e+02
             7                90      2.000000000000e+00  1.020000000000e+02
             7                91      3.000000000000e+00  1.030000000000e+02
             7                92      4.000000000000e+00  1.040000000000e+02
             7                93      5.000000000000e+00  1.050000000000e+02
             7                94      6.000000000000e+00  1.060000000000e+02
             7                95      7.000000000000e+00  1.070000000000e+02
             7                96      8.000000000000e+00  1.080000000000e+02
             7                97      9.000000000000e+00  1.090000000000e+02
             7                98      1.000000000000e+01  1.100000000000e+02
             7                99      1.100000000000e+01  1.110000000000e+02

Traceback Mode value = 0







############ cxx_Object_mpi.exe ##############
3850 cxx_Object_mpi.exe running on n0 (o)
6676 cxx_Object_mpi.exe running on n1
8070 cxx_Object_mpi.exe running on n2
6609 cxx_Object_mpi.exe running on n3
6611 cxx_Object_mpi.exe running on n4
6611 cxx_Object_mpi.exe running on n5
6612 cxx_Object_mpi.exe running on n6
6963 cxx_Object_mpi.exe running on n7
Epetra::MpiComm::Processor 0 of 8 total processors
This is the default Epetra_Object Name: Epetra::Object
This should say "New name for Epetra_Object": New name for Epetra_Object
Default Traceback Mode value = 2
Set Traceback Mode value to one less than default = 1
Epetra::MpiComm::Processor 4 of 8 total processors
This is the default Epetra_Object Name: Epetra::Object
This should say "New name for Epetra_Object": New name for Epetra_Object
Default Traceback Mode value = 2
Set Traceback Mode value to one less than default = 1
Epetra::MpiComm::Processor 1 of 8 total processors
This is the default Epetra_Object Name: Epetra::Object
This should say "New name for Epetra_Object": New name for Epetra_Object
Default Traceback Mode value = 2
Set Traceback Mode value to one less than default = 1
Epetra::MpiComm::Processor 2 of 8 total processors
This is the default Epetra_Object Name: Epetra::Object
This should say "New name for Epetra_Object": New name for Epetra_Object
Default Traceback Mode value = 2
Set Traceback Mode value to one less than default = 1
Epetra::MpiComm::Processor 5 of 8 total processors
This is the default Epetra_Object Name: Epetra::Object
This should say "New name for Epetra_Object": New name for Epetra_Object
Default Traceback Mode value = 2
Set Traceback Mode value to one less than default = 1
Epetra::MpiComm::Processor 6 of 8 total processors
This is the default Epetra_Object Name: Epetra::Object
This should say "New name for Epetra_Object": New name for Epetra_Object
Default Traceback Mode value = 2
Set Traceback Mode value to one less than default = 1
Epetra::MpiComm::Processor 7 of 8 total processors
This is the default Epetra_Object Name: Epetra::Object
This should say "New name for Epetra_Object": New name for Epetra_Object
Default Traceback Mode value = 2
Set Traceback Mode value to one less than default = 1
Epetra::MpiComm::Processor 3 of 8 total processors
This is the default Epetra_Object Name: Epetra::Object
This should say "New name for Epetra_Object": New name for Epetra_Object
Default Traceback Mode value = 2
Set Traceback Mode value to one less than default = 1
############ cxx_VbrMatrix_mpi.exe ##############
3869 cxx_VbrMatrix_mpi.exe running on n0 (o)
6677 cxx_VbrMatrix_mpi.exe running on n1
8071 cxx_VbrMatrix_mpi.exe running on n2
6610 cxx_VbrMatrix_mpi.exe running on n3
6612 cxx_VbrMatrix_mpi.exe running on n4
6612 cxx_VbrMatrix_mpi.exe running on n5
6613 cxx_VbrMatrix_mpi.exe running on n6
6964 cxx_VbrMatrix_mpi.exe running on n7
Processor 0 of 8 is alive.
Processor 4 of 8 is alive.
Processor 2 of 8 is alive.
Processor 1 of 8 is alive.
Processor 6 of 8 is alive.
Processor 5 of 8 is alive.
Processor 3 of 8 is alive.
Processor 7 of 8 is alive.


Number of local Rows = 3003



Number of local Rows should = 3003



Number of local Nonzero entries = 27018



Number of global Rows = 24009



Number of global Nonzero entries = 216063



Number of local Block Rows = 1001



Number of local Nonzero Block entries = 3002



Number of global Block Rows = 8003



Number of global Nonzero Block entries = 216063



Number of nonzero values in last row = 9



Rows sorted check OK



NumEntries function check OK

Iter = 0  Lambda = 2.5339  Residual of A*q - lambda*q = 15.6743
Iter = 99  Lambda = 24.1011  Residual of A*q - lambda*q = 0.0863713


Total MFLOPs for first solve = 135.054

***** Power Method did not converge. *****



Using transpose of matrix and solving again (should give same result).


Iter = 0  Lambda = 2.5339  Residual of A*q - lambda*q = 15.6182
Iter = 99  Lambda = 24.0974  Residual of A*q - lambda*q = 0.0869243


Total MFLOPs for transpose solve = 105.096

***** Power Method did not converge. *****



Increasing the magnitude of first diagonal term and solving again


Iter = 0  Lambda = 2.54405  Residual of A*q - lambda*q = 15.7041
Iter = 99  Lambda = 89.9021  Residual of A*q - lambda*q = 1.00357e-14


Total MFLOPs for second solve = 135.315



Using transpose of matrix and solving again (should give same result).


Iter = 0  Lambda = 2.54405  Residual of A*q - lambda*q = 15.6487
Iter = 99  Lambda = 89.9021  Residual of A*q - lambda*q = 2.06752e-14


Total MFLOPs for tranpose of second solve = 131.946



*****Testing copy constructor



Number of local Rows = 3003



Number of local Rows should = 3003



Number of local Nonzero entries = 27018



Number of global Rows = 24009



Number of global Nonzero entries = 216063



Number of local Block Rows = 1001



Number of local Nonzero Block entries = 3002



Number of global Block Rows = 8003



Number of global Nonzero Block entries = 216063



Number of nonzero values in last row = 9



Rows sorted check OK



*****Testing post construction modifications

############ cxx_Vector_mpi.exe ##############
3900 cxx_Vector_mpi.exe running on n0 (o)
6678 cxx_Vector_mpi.exe running on n1
8072 cxx_Vector_mpi.exe running on n2
6611 cxx_Vector_mpi.exe running on n3
6613 cxx_Vector_mpi.exe running on n4
6613 cxx_Vector_mpi.exe running on n5
6614 cxx_Vector_mpi.exe running on n6
6965 cxx_Vector_mpi.exe running on n7
Epetra::MpiComm::Processor 0 of 8 total processors

*********************************************************
Checking Epetra_LocalMap(NumMyElements1, IndexBase, Comm)
     and Epetra_BlockMap(NumGlobalElements, ElementSize, IndexBase, Comm)
*********************************************************
Epetra::MpiComm::Processor 4 of 8 total processors
Epetra::MpiComm::Processor 2 of 8 total processors
Epetra::MpiComm::Processor 1 of 8 total processors
Epetra::MpiComm::Processor 6 of 8 total processors
Epetra::MpiComm::Processor 5 of 8 total processors
Epetra::MpiComm::Processor 3 of 8 total processors
Epetra::MpiComm::Processor 7 of 8 total processors
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSize, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(NumGlobalElements, NumMyElements, MyGlobalElements,  ElementSizeList, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_BlockMap(*BlockMap)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(NumGlobalElements, NumMyElements, MyGlobalElements,  IndexBase, Comm)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
Error code: 0
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK

*********************************************************
Checking Epetra_Map(*Map)
*********************************************************
XXXXX Testing alpha * A       alpha = 2	 Checked OK
XXXXX Testing C = alpha * A + B        alpha = 2	 Checked OK
XXXXX Testing C += B      	 Checked OK
XXXXX Testing A.dotProd(B)     	 Checked OK
XXXXX Testing norm1_A      	 Checked OK
XXXXX Testing norm2_sqrtA     	 Checked OK
XXXXX Testing norminf_A     	 Checked OK
XXXXX Testing normw_A     	 Checked OK
XXXXX Testing minval_A     	 Checked OK
XXXXX Testing maxval_A     	 Checked OK
XXXXX Testing meanval_A     	 Checked OK
XXXXX Testing abs_A     	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Non-Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Replicated Local Vector GEMM tests (Strided Multivectors)
  alpha = 3,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D dot product via GEMM call     
  alpha = 2,  beta = 1, transa = T, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = N	 Checked OK
XXXXX Generalized 2D vector update via GEMM call     
  alpha = 2,  beta = 1.1, transa = N, transb = T	 Checked OK


This should say Epetra::Vector: Epetra::MultiVector


cxx_Vector_mpi.exe: cxx_main.cpp:313: int main (int, char **): Assertion `ierr==0' failed.
-----------------------------------------------------------------------------

One of the processes started by mpirun has exited with a nonzero exit
code.  This typically indicates that the process finished in error.
If your process did not finish in error, be sure to include a "return
0" or "exit(0)" in your C code before exiting the application.

PID 3900 failed on node n0 with exit status 1.
-----------------------------------------------------------------------------
cxx_Vector_mpi.exe: cxx_main.cpp:313: int main (int, char **): Assertion `ierr==0' failed.
cxx_Vector_mpi.exe: cxx_main.cpp:313: int main (int, char **): Assertion `ierr==0' failed.
cxx_Vector_mpi.exe: cxx_main.cpp:313: int main (int, char **): Assertion `ierr==0' failed.
