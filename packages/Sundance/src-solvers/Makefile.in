# Makefile.in generated by automake 1.9.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# ************************************************************************
# 
#           TSFExtended: Trilinos Solver Framework Extended
#                 Copyright (2004) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# Questions? Contact Michael A. Heroux (maherou@sandia.gov) 
# 
# ************************************************************************
# @HEADER

#np# Note the following paragraph.
# ------------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside New_Package. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------

#
#np# There is, at present, no distinction between most of the categories, 
#np# other than those which start with EXTRA_.  All categories which do not
#np# start with EXTRA_ are included in all builds.  Categories which start
#np# with EXTRA_ are included in some builds (typically controlled by 
#np# --with-xyz or --without-xyz)
#
#np# Make sure to list all source files in one of the following categories.

# ************************************************************************
# 
#                               Sundance
#                 Copyright (2002) Sandia Corporation
# 
#
# Copyright (2001) Sandia Corportation. Under the terms of Contract 
# DE-AC04-94AL85000, there is a non-exclusive license for use of this 
# work by or on behalf of the U.S. Government.  Export of this program
# may require a license from the United States Government.
# 
# NOTICE:  The United States Government is granted for itself and others
# acting on its behalf a paid-up, nonexclusive, irrevocable worldwide
# license in ths data to reproduce, prepare derivative works, and
# perform publicly and display publicly.  Beginning five (5) years from
# July 25, 2001, the United States Government is granted for itself and
# others acting on its behalf a paid-up, nonexclusive, irrevocable
# worldwide license in this data to reproduce, prepare derivative works,
# distribute copies to the public, perform publicly and display
# publicly, and to permit others to do so.
# 
# NEITHER THE UNITED STATES GOVERNMENT, NOR THE UNITED STATES DEPARTMENT
# OF ENERGY, NOR SANDIA CORPORATION, NOR ANY OF THEIR EMPLOYEES, MAKES
# ANY WARRANTY, EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL LIABILITY OR
# RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY
# INFORMATION, APPARATUS, PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS
# THAT ITS USE WOULD NOT INFRINGE PRIVATELY OWNED RIGHTS.
# 
# ************************************************************************

# ------------------------------------------------------------------------
#
# Makefile.common is intended to be included by the subdirectory makefiles.
# In this file, we define standard macros for include paths, library paths,
# and library names used by Sundance. 
#
# This file is NOT modifed by automake or autoconf. 
#
# ------------------------------------------------------------------------


SOURCES = $(libTSFExtended_la_SOURCES) $(EXTRA_libTSFExtended_la_SOURCES)

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/TSF_config.h.in \
	$(top_srcdir)/Makefile.common
subdir = src-solvers
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/config/tac_arg_config_chaco.m4 \
	$(top_srcdir)/config/tac_arg_config_mpi.m4 \
	$(top_srcdir)/config/tac_arg_enable_feature.m4 \
	$(top_srcdir)/config/tac_arg_with_ar.m4 \
	$(top_srcdir)/config/tac_arg_with_incdirs.m4 \
	$(top_srcdir)/config/tac_arg_with_libdirs.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src-utils/SundanceConfig.h \
	TSF_config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" \
	"$(DESTDIR)$(execincludedir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libTSFExtended_la_DEPENDENCIES =
am__objects_1 =
am__objects_2 = TSFDenseSerialVector.lo TSFEpetraGhostImporter.lo \
	TSFEpetraGhostView.lo TSFEpetraMatrix.lo TSFEpetraVector.lo \
	TSFEpetraVectorSpace.lo TSFEpetraVectorType.lo \
	TSFIfpackOperator.lo TSFLAPACKGeneralMatrix.lo
am__objects_3 = TSFAztecSolver.lo TSFLinearSolverBuilder.lo
am__objects_4 = NOX_StatusTest_SafeCombo.lo NOX_TSF_Group.lo \
	NOX_TSF_StatusTestBuilder.lo NOX_TSF_Vector.lo TSFNOXSolver.lo
am_libTSFExtended_la_OBJECTS = $(am__objects_1) $(am__objects_1) \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_1)
libTSFExtended_la_OBJECTS = $(am_libTSFExtended_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src-utils -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libTSFExtended_la_SOURCES) \
	$(EXTRA_libTSFExtended_la_SOURCES)
DIST_SOURCES = $(libTSFExtended_la_SOURCES) \
	$(EXTRA_libTSFExtended_la_SOURCES)
includeHEADERS_INSTALL = $(INSTALL_HEADER)
nodist_execincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ALTERNATE_AR = @ALTERNATE_AR@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_EXAMPLES_FALSE = @BUILD_EXAMPLES_FALSE@
BUILD_EXAMPLES_TRUE = @BUILD_EXAMPLES_TRUE@
BUILD_TESTS_FALSE = @BUILD_TESTS_FALSE@
BUILD_TESTS_TRUE = @BUILD_TESTS_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = $(TEUCHOS_CFLAGS)
CHACO_LIB = @CHACO_LIB@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = $(TEUCHOS_CXXFLAGS)
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = $(TEUCHOS_FFLAGS)
FIAT_BUILD_DIR = @FIAT_BUILD_DIR@
FIAT_STR = @FIAT_STR@
HAVE_CHACO_FALSE = @HAVE_CHACO_FALSE@
HAVE_CHACO_TRUE = @HAVE_CHACO_TRUE@
HAVE_MPI_FALSE = @HAVE_MPI_FALSE@
HAVE_MPI_TRUE = @HAVE_MPI_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = $(TEUCHOS_LDFLAGS)
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
MAKEINFO = @MAKEINFO@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@

# ------------------------------------------------------------------------
#
# include macros specified by Trilinos
#
# ------------------------------------------------------------------------
RANLIB = $(TEUCHOS_RANLIB)
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
SUNDANCE_BUILD_DIRECTORY = @SUNDANCE_BUILD_DIRECTORY@
TRILINOS_DIR = @TRILINOS_DIR@
USE_ALTERNATE_AR_FALSE = @USE_ALTERNATE_AR_FALSE@
USE_ALTERNATE_AR_TRUE = @USE_ALTERNATE_AR_TRUE@
VERSION = @VERSION@
ac_aux_dir = @ac_aux_dir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
VECTORS_H = \
	$(srcdir)/Vectors/TSFGhostImporter.hpp \
	$(srcdir)/Vectors/TSFGhostView.hpp \
	$(srcdir)/Vectors/TSFIndexableVector.hpp\
	$(srcdir)/Vectors/TSFLoadableVector.hpp\
	$(srcdir)/Vectors/TSFLinearCombination.hpp\
	$(srcdir)/Vectors/TSFLinearCombinationDecl.hpp\
	$(srcdir)/Vectors/TSFLinearCombinationImpl.hpp\
	$(srcdir)/Vectors/TSFAccessibleVector.hpp\
	$(srcdir)/Vectors/TSFProductVectorSpace.hpp\
	$(srcdir)/Vectors/TSFProductVectorSpaceDecl.hpp\
	$(srcdir)/Vectors/TSFProductVectorSpaceImpl.hpp\
	$(srcdir)/Vectors/TSFProductVector.hpp\
	$(srcdir)/Vectors/TSFProductVectorDecl.hpp\
	$(srcdir)/Vectors/TSFProductVectorImpl.hpp\
	$(srcdir)/Vectors/TSFVector.hpp \
	$(srcdir)/Vectors/TSFVectorDecl.hpp \
	$(srcdir)/Vectors/TSFVectorImpl.hpp \
	$(srcdir)/Vectors/TSFVectorSpace.hpp \
	$(srcdir)/Vectors/TSFVectorSpaceDecl.hpp \
	$(srcdir)/Vectors/TSFVectorSpaceImpl.hpp \
	$(srcdir)/Vectors/TSFVectorType.hpp \
	$(srcdir)/Vectors/TSFVectorTypeExtensions.hpp

VECTORS = 
UTILS_H = \
	$(srcdir)/Utils/TSFConfigDefs.hpp \
	$(srcdir)/Utils/TSFDescribable.hpp \
	$(srcdir)/Utils/TSFDouble.hpp \
	$(srcdir)/Utils/TSFHandle.hpp \
	$(srcdir)/Utils/TSFHandleable.hpp \
	$(srcdir)/Utils/TSFObjectWithVerbosity.hpp \
	$(srcdir)/Utils/TSFPrintable.hpp

UTILS = 
CONCRETE_H = \
	$(srcdir)/Concrete/TSFDenseSerialVector.hpp\
	$(srcdir)/Concrete/TSFEpetraGhostImporter.hpp\
	$(srcdir)/Concrete/TSFEpetraGhostView.hpp\
	$(srcdir)/Concrete/TSFEpetraMatrix.hpp\
	$(srcdir)/Concrete/TSFEpetraVector.hpp\
	$(srcdir)/Concrete/TSFEpetraVectorSpace.hpp\
	$(srcdir)/Concrete/TSFEpetraVectorType.hpp \
	$(srcdir)/Concrete/TSFIfpackOperator.hpp \
	$(srcdir)/Concrete/TSFLAPACKGeneralMatrix.hpp

CONCRETE = \
	$(srcdir)/Concrete/TSFDenseSerialVector.cpp\
	$(srcdir)/Concrete/TSFEpetraGhostImporter.cpp\
	$(srcdir)/Concrete/TSFEpetraGhostView.cpp\
	$(srcdir)/Concrete/TSFEpetraMatrix.cpp\
	$(srcdir)/Concrete/TSFEpetraVector.cpp\
	$(srcdir)/Concrete/TSFEpetraVectorSpace.cpp\
	$(srcdir)/Concrete/TSFEpetraVectorType.cpp \
	$(srcdir)/Concrete/TSFIfpackOperator.cpp \
	$(srcdir)/Concrete/TSFLAPACKGeneralMatrix.cpp

OPERATORS_H = \
	$(srcdir)/Operators/TSFBlockOperator.hpp \
	$(srcdir)/Operators/TSFBlockOperatorDecl.hpp \
	$(srcdir)/Operators/TSFBlockOperatorImpl.hpp \
	$(srcdir)/Operators/TSFComposedOperator.hpp \
	$(srcdir)/Operators/TSFDiagonalOperator.hpp\
	$(srcdir)/Operators/TSFExplicitlyTransposeableOp.hpp\
	$(srcdir)/Operators/TSFIdentityOperator.hpp \
	$(srcdir)/Operators/TSFILUFactorizableOp.hpp \
	$(srcdir)/Operators/TSFInverseOperator.hpp \
	$(srcdir)/Operators/TSFLinearOperator.hpp \
	$(srcdir)/Operators/TSFLinearOperatorDecl.hpp \
	$(srcdir)/Operators/TSFLinearOperatorImpl.hpp \
	$(srcdir)/Operators/TSFLoadableMatrix.hpp\
	$(srcdir)/Operators/TSFNonlinearOperator.hpp\
	$(srcdir)/Operators/TSFNonlinearOperatorBase.hpp\
	$(srcdir)/Operators/TSFRowAccessibleOp.hpp \
	$(srcdir)/Operators/TSFScaledOperator.hpp\
	$(srcdir)/Operators/TSFSingleScalarTypeOp.hpp\
	$(srcdir)/Operators/TSFSumOperator.hpp\
	$(srcdir)/Operators/TSFTransposeOperator.hpp\
	$(srcdir)/Operators/TSFZeroOperator.hpp 

OPERATORS = 
LINEARSOLVERS_H = \
	$(srcdir)/LinearSolvers/TSFAztecSolver.hpp \
	$(srcdir)/LinearSolvers/TSFBICGSTABSolver.hpp \
	$(srcdir)/LinearSolvers/TSFGMRESSolver.hpp \
	$(srcdir)/LinearSolvers/TSFIterativeSolver.hpp \
	$(srcdir)/LinearSolvers/TSFKrylovSolver.hpp \
	$(srcdir)/LinearSolvers/TSFLinearSolver.hpp \
	$(srcdir)/LinearSolvers/TSFLinearSolverBase.hpp \
	$(srcdir)/LinearSolvers/TSFLinearSolverBaseDecl.hpp \
	$(srcdir)/LinearSolvers/TSFLinearSolverBaseImpl.hpp \
	$(srcdir)/LinearSolvers/TSFLinearSolverBuilder.hpp \
	$(srcdir)/LinearSolvers/TSFSolverState.hpp 

LINEARSOLVERS = \
	$(srcdir)/LinearSolvers/TSFAztecSolver.cpp \
	$(srcdir)/LinearSolvers/TSFLinearSolverBuilder.cpp 

NONLINEARSOLVERS_H = \
	$(srcdir)/NonlinearSolvers/NOX_StatusTest_SafeCombo.H \
	$(srcdir)/NonlinearSolvers/NOX_TSF_Group.H \
	$(srcdir)/NonlinearSolvers/NOX_TSF.H \
	$(srcdir)/NonlinearSolvers/NOX_TSF_StatusTestBuilder.H \
	$(srcdir)/NonlinearSolvers/NOX_TSF_Vector.H \
	$(srcdir)/NonlinearSolvers/TSFNOXSolver.H 

NONLINEARSOLVERS = \
	$(srcdir)/NonlinearSolvers/NOX_StatusTest_SafeCombo.C \
	$(srcdir)/NonlinearSolvers/NOX_TSF_Group.C \
	$(srcdir)/NonlinearSolvers/NOX_TSF_StatusTestBuilder.C \
	$(srcdir)/NonlinearSolvers/NOX_TSF_Vector.C \
	$(srcdir)/NonlinearSolvers/TSFNOXSolver.C 	

PRECONDITIONERS_H = \
	$(srcdir)/Preconditioners/TSFGenericLeftPreconditioner.hpp \
	$(srcdir)/Preconditioners/TSFGenericRightPreconditioner.hpp \
	$(srcdir)/Preconditioners/TSFILUKPreconditionerFactory.hpp \
	$(srcdir)/Preconditioners/TSFPreconditioner.hpp \
	$(srcdir)/Preconditioners/TSFPreconditionerBase.hpp \
	$(srcdir)/Preconditioners/TSFPreconditionerFactory.hpp \
	$(srcdir)/Preconditioners/TSFPreconditionerFactoryBase.hpp 

PRECONDITIONERS = 
SUNDANCE_DIR = $(top_srcdir)

# ------------------------------------------------------------------------
#
# Specify libraries and library search paths. 
# 
# - SUNDANCE_LIBS and TRILINOS_LIBS are defined below. 
# - LAPACK_LIBS, BLAS_LIBS, and FLIBS are defined automatically by autoconf. 
#
# ------------------------------------------------------------------------
SOLVERS_LIB_PATH = \
-L$(top_builddir)/src-solvers

SOLVERS_INCLUDE_PATH = \
-I$(top_builddir)/src-solvers \
-I$(top_srcdir)/src-solvers/Vectors \
-I$(top_srcdir)/src-solvers/Utils \
-I$(top_srcdir)/src-solvers/Concrete \
-I$(top_srcdir)/src-solvers/Operators \
-I$(top_srcdir)/src-solvers/LinearSolvers \
-I$(top_srcdir)/src-solvers/NonlinearSolvers \
-I$(top_srcdir)/src-solvers/Preconditioners \
-I$(top_builddir)/src-solvers/Vectors \
-I$(top_builddir)/src-solvers/Utils \
-I$(top_builddir)/src-solvers/Concrete \
-I$(top_builddir)/src-solvers/Operators \
-I$(top_builddir)/src-solvers/LinearSolvers \
-I$(top_builddir)/src-solvers/NonlinearSolvers \
-I$(top_builddir)/src-solvers/Preconditioners 

SOLVERS_LIBS = $(SOLVERS_LIB_PATH) -lTSFExtended $(TRILINOS_LIBS)
SOLVERS_INCLUDES = $(SOLVERS_INCLUDE_PATH) $(TRILINOS_INCLUDES)
UTIL_LIB_PATH = -L$(top_builddir)/src-utils $(SOLVERS_LIB_PATH) 
UTIL_LIBS = $(UTIL_LIB_PATH) -lsundanceUtils $(SOLVERS_LIBS)
UTIL_INCLUDES = \
-I$(top_builddir)/src-utils \
-I$(top_srcdir)/src-utils/Utilities \
-I$(top_builddir)/src-utils/Utilities \
$(SOLVERS_INCLUDES)

CORE_LIBS = $(CORE_LIB_PATH) -lsundanceCore $(UTIL_LIBS)
CORE_LIB_PATH = \
-L$(top_builddir)/src-core 

CORE_INCLUDE_PATH = \
-I$(top_builddir)/src-core \
-I$(top_srcdir)/src-core/UserExprs \
-I$(top_srcdir)/src-core/InternalExprs \
-I$(top_srcdir)/src-core/Evaluation \
-I$(top_srcdir)/src-core/FrameworkInterface \
-I$(top_srcdir)/src-core/SymbolicTransformations \
-I$(top_srcdir)/src-core/TestingUtilities \
-I$(top_builddir)/src-core/UserExprs \
-I$(top_builddir)/src-core/InternalExprs \
-I$(top_builddir)/src-core/Evaluation \
-I$(top_builddir)/src-core/FrameworkInterface \
-I$(top_builddir)/src-core/TestingUtilities \
-I$(top_builddir)/src-core/SymbolicTransformations 

CORE_INCLUDES = $(CORE_INCLUDE_PATH) $(UTIL_INCLUDES) 
STD_MESH_LIB_PATH = \
-L$(top_builddir)/src-std-mesh 

STD_MESH_LIBS = $(STD_MESH_LIB_PATH) -lsundanceStdMesh $(UTIL_LIBS)
STD_MESH_INCLUDE_PATH = \
-I$(top_builddir)/src-std-mesh \
-I$(top_srcdir)/src-std-mesh/Concrete \
-I$(top_srcdir)/src-std-mesh/Interface \
-I$(top_srcdir)/src-std-mesh/Sources \
-I$(top_srcdir)/src-std-mesh/Transformations \
-I$(top_srcdir)/src-std-mesh/Writers \
-I$(top_builddir)/src-std-mesh/Concrete \
-I$(top_builddir)/src-std-mesh/Interface \
-I$(top_builddir)/src-std-mesh/Sources \
-I$(top_builddir)/src-std-mesh/Transformations \
-I$(top_builddir)/src-std-mesh/Writers 

STD_MESH_INCLUDES = $(STD_MESH_INCLUDE_PATH) $(UTIL_INCLUDES)
STD_FWK_LIB_PATH = \
-L$(top_builddir)/src-std-framework 

STD_FWK_INCLUDE_PATH = \
-I$(top_builddir)/src-std-framework \
-I$(top_srcdir)/src-std-framework/CellFilter \
-I$(top_srcdir)/src-std-framework/Elements \
-I$(top_srcdir)/src-std-framework/DOFMapping \
-I$(top_srcdir)/src-std-framework/Assembly \
-I$(top_srcdir)/src-std-framework/Problem \
-I$(top_builddir)/src-std-framework/CellFilter \
-I$(top_builddir)/src-std-framework/Elements \
-I$(top_builddir)/src-std-framework/DOFMapping \
-I$(top_builddir)/src-std-framework/Assembly \
-I$(top_builddir)/src-std-framework/Problem

STD_FWK_INCLUDES = $(STD_FWK_INCLUDE_PATH) $(STD_MESH_INCLUDE_PATH) \
$(CORE_INCLUDE_PATH) $(UTIL_INCLUDES) $(FIAT_INCLUDE) $(FIAT_BLITZ_INCLUDE)

STD_FWK_LIBS = $(STD_FWK_LIB_PATH) $(STD_MESH_LIB_PATH) $(CORE_LIB_PATH) \
-lsundanceStdFwk -lsundanceStdMesh -lsundanceCore $(FIAT_LIBS) $(FIAT_BLITZ_LIBS) $(UTIL_LIBS) 

XML_LIB_PATH = \
-L$(top_builddir)/src-xml 

XML_INCLUDE_PATH = \
-I$(top_srcdir)/src-xml \
-I$(top_builddir)/src-xml 

XML_INCLUDES = $(XML_INCLUDE_PATH) $(STD_FWK_INCLUDE_PATH) \
$(STD_MESH_INCLUDE_PATH) $(CORE_INCLUDE_PATH) $(UTIL_INCLUDES)

XML_LIBS = $(XML_LIB_PATH) $(STD_FWK_LIB_PATH) $(STD_MESH_LIB_PATH) \
$(CORE_LIB_PATH) -lsundanceXML -lsundanceStdFwk \
-lsundanceStdMesh -lsundanceCore $(UTIL_LIBS) 

MPI_LIBS = $(TEUCHOS_MPI_LIBS)
MPI_LIBDIR = $(TEUCHOS_MPI_LIBDIR)
MPI_INC = $(TEUCHOS_MPI_INC)
MPI_DIR = $(TEUCHOS_MPI_DIR)
FLIBS = $(TEUCHOS_FLIBS)
BLAS_LIBS = $(TEUCHOS_BLAS_LIBS)
LAPACK_LIBS = $(TEUCHOS_LAPACK_LIBS)

#
# Read macros that are common to building source and tests. We define these
# in Makefile.common to avoid maintaining the lists in multiple files.
#

#np# List locations of include files within Trilinos but outside of this 
#np# package
#np# - Add packages that this package is dependent on
#np#   Remove epetra if this package does not need it
#  
AM_CPPFLAGS = $(TEUCHOS_CXXFLAGS) $(SOLVERS_INCLUDES)

#np# The following section can be duplicated for building multiple libraries -
#np# make sure to list the correct categories with each library.
#np# replace new_package with the name of the package being autotool'ed here
# ------------------------------------------------------------------------
# New_Package library specifications
# ------------------------------------------------------------------------
#np# replace new_package with the name of the package being autotool'ed here
TSF_EXTENDED_LIB = libTSFExtended.la

#np# replace new_package with the name of the package being autotool'ed here
TSF_EXTENDED_H = \
	$(UTILS_H) \
	$(VECTORS_H) \
	$(OPERATORS_H) \
	$(CONCRETE_H) \
	$(LINEARSOLVERS_H) \
	$(NONLINEARSOLVERS_H) \
	$(PRECONDITIONERS_H) 


#np# replace new_package with the name of the package being autotool'ed here
libTSFExtended_la_SOURCES = \
	$(UTILS) \
	$(VECTORS) \
	$(OPERATORS) \
	$(CONCRETE) \
	$(LINEARSOLVERS) \
	$(NONLINEARSOLVERS) \
	$(PRECONDITIONERS) 


#np# replace new_package with the name of the package being autotool'ed here
EXTRA_libTSFExtended_la_SOURCES = 

# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# ------------------------------------------------------------------------

#np# replace new_package with the name of the package being autotool'ed here
libTSFExtended_la_LIBADD = $(XTRALDADD)

# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------

#np# replace new_package with the name of the package being autotool'ed here
lib_LTLIBRARIES = $(TSF_EXTENDED_LIB)

# ------------------------------------------------------------------------
# List of all headers to install in $(includedir)
# ------------------------------------------------------------------------

#np# replace new_package with the name of the package being autotool'ed here
include_HEADERS = $(TSF_EXTENDED_H) 

# ------------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# ------------------------------------------------------------------------

#np# replace new_package with the name of the package being autotool'ed here
# SPECIAL NOTE: New_Package_config.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.

# All Trilinos headers are now installed in the same directory
execincludedir = $(exec_prefix)/include
#np# replace new_package with the name of the package being autotool'ed here
nodist_execinclude_HEADERS = TSF_config.h

# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
all: TSF_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .C .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src-solvers/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src-solvers/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

TSF_config.h: stamp-h2
	@if test ! -f $@; then \
	  rm -f stamp-h2; \
	  $(MAKE) stamp-h2; \
	else :; fi

stamp-h2: $(srcdir)/TSF_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status src-solvers/TSF_config.h
$(srcdir)/TSF_config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	cd $(top_srcdir) && $(AUTOHEADER)
	rm -f stamp-h2
	touch $@

distclean-hdr:
	-rm -f TSF_config.h stamp-h2
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libTSFExtended.la: $(libTSFExtended_la_OBJECTS) $(libTSFExtended_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libTSFExtended_la_LDFLAGS) $(libTSFExtended_la_OBJECTS) $(libTSFExtended_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NOX_StatusTest_SafeCombo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NOX_TSF_Group.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NOX_TSF_StatusTestBuilder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NOX_TSF_Vector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFAztecSolver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFDenseSerialVector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFEpetraGhostImporter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFEpetraGhostView.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFEpetraMatrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFEpetraVector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFEpetraVectorSpace.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFEpetraVectorType.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFIfpackOperator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFLAPACKGeneralMatrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFLinearSolverBuilder.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TSFNOXSolver.Plo@am__quote@

.C.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

TSFDenseSerialVector.lo: $(srcdir)/Concrete/TSFDenseSerialVector.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFDenseSerialVector.lo -MD -MP -MF "$(DEPDIR)/TSFDenseSerialVector.Tpo" -c -o TSFDenseSerialVector.lo `test -f '$(srcdir)/Concrete/TSFDenseSerialVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFDenseSerialVector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFDenseSerialVector.Tpo" "$(DEPDIR)/TSFDenseSerialVector.Plo"; else rm -f "$(DEPDIR)/TSFDenseSerialVector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFDenseSerialVector.cpp' object='TSFDenseSerialVector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFDenseSerialVector.lo `test -f '$(srcdir)/Concrete/TSFDenseSerialVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFDenseSerialVector.cpp

TSFEpetraGhostImporter.lo: $(srcdir)/Concrete/TSFEpetraGhostImporter.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFEpetraGhostImporter.lo -MD -MP -MF "$(DEPDIR)/TSFEpetraGhostImporter.Tpo" -c -o TSFEpetraGhostImporter.lo `test -f '$(srcdir)/Concrete/TSFEpetraGhostImporter.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraGhostImporter.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFEpetraGhostImporter.Tpo" "$(DEPDIR)/TSFEpetraGhostImporter.Plo"; else rm -f "$(DEPDIR)/TSFEpetraGhostImporter.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFEpetraGhostImporter.cpp' object='TSFEpetraGhostImporter.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFEpetraGhostImporter.lo `test -f '$(srcdir)/Concrete/TSFEpetraGhostImporter.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraGhostImporter.cpp

TSFEpetraGhostView.lo: $(srcdir)/Concrete/TSFEpetraGhostView.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFEpetraGhostView.lo -MD -MP -MF "$(DEPDIR)/TSFEpetraGhostView.Tpo" -c -o TSFEpetraGhostView.lo `test -f '$(srcdir)/Concrete/TSFEpetraGhostView.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraGhostView.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFEpetraGhostView.Tpo" "$(DEPDIR)/TSFEpetraGhostView.Plo"; else rm -f "$(DEPDIR)/TSFEpetraGhostView.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFEpetraGhostView.cpp' object='TSFEpetraGhostView.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFEpetraGhostView.lo `test -f '$(srcdir)/Concrete/TSFEpetraGhostView.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraGhostView.cpp

TSFEpetraMatrix.lo: $(srcdir)/Concrete/TSFEpetraMatrix.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFEpetraMatrix.lo -MD -MP -MF "$(DEPDIR)/TSFEpetraMatrix.Tpo" -c -o TSFEpetraMatrix.lo `test -f '$(srcdir)/Concrete/TSFEpetraMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFEpetraMatrix.Tpo" "$(DEPDIR)/TSFEpetraMatrix.Plo"; else rm -f "$(DEPDIR)/TSFEpetraMatrix.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFEpetraMatrix.cpp' object='TSFEpetraMatrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFEpetraMatrix.lo `test -f '$(srcdir)/Concrete/TSFEpetraMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraMatrix.cpp

TSFEpetraVector.lo: $(srcdir)/Concrete/TSFEpetraVector.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFEpetraVector.lo -MD -MP -MF "$(DEPDIR)/TSFEpetraVector.Tpo" -c -o TSFEpetraVector.lo `test -f '$(srcdir)/Concrete/TSFEpetraVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraVector.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFEpetraVector.Tpo" "$(DEPDIR)/TSFEpetraVector.Plo"; else rm -f "$(DEPDIR)/TSFEpetraVector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFEpetraVector.cpp' object='TSFEpetraVector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFEpetraVector.lo `test -f '$(srcdir)/Concrete/TSFEpetraVector.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraVector.cpp

TSFEpetraVectorSpace.lo: $(srcdir)/Concrete/TSFEpetraVectorSpace.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFEpetraVectorSpace.lo -MD -MP -MF "$(DEPDIR)/TSFEpetraVectorSpace.Tpo" -c -o TSFEpetraVectorSpace.lo `test -f '$(srcdir)/Concrete/TSFEpetraVectorSpace.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraVectorSpace.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFEpetraVectorSpace.Tpo" "$(DEPDIR)/TSFEpetraVectorSpace.Plo"; else rm -f "$(DEPDIR)/TSFEpetraVectorSpace.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFEpetraVectorSpace.cpp' object='TSFEpetraVectorSpace.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFEpetraVectorSpace.lo `test -f '$(srcdir)/Concrete/TSFEpetraVectorSpace.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraVectorSpace.cpp

TSFEpetraVectorType.lo: $(srcdir)/Concrete/TSFEpetraVectorType.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFEpetraVectorType.lo -MD -MP -MF "$(DEPDIR)/TSFEpetraVectorType.Tpo" -c -o TSFEpetraVectorType.lo `test -f '$(srcdir)/Concrete/TSFEpetraVectorType.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraVectorType.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFEpetraVectorType.Tpo" "$(DEPDIR)/TSFEpetraVectorType.Plo"; else rm -f "$(DEPDIR)/TSFEpetraVectorType.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFEpetraVectorType.cpp' object='TSFEpetraVectorType.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFEpetraVectorType.lo `test -f '$(srcdir)/Concrete/TSFEpetraVectorType.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFEpetraVectorType.cpp

TSFIfpackOperator.lo: $(srcdir)/Concrete/TSFIfpackOperator.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFIfpackOperator.lo -MD -MP -MF "$(DEPDIR)/TSFIfpackOperator.Tpo" -c -o TSFIfpackOperator.lo `test -f '$(srcdir)/Concrete/TSFIfpackOperator.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFIfpackOperator.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFIfpackOperator.Tpo" "$(DEPDIR)/TSFIfpackOperator.Plo"; else rm -f "$(DEPDIR)/TSFIfpackOperator.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFIfpackOperator.cpp' object='TSFIfpackOperator.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFIfpackOperator.lo `test -f '$(srcdir)/Concrete/TSFIfpackOperator.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFIfpackOperator.cpp

TSFLAPACKGeneralMatrix.lo: $(srcdir)/Concrete/TSFLAPACKGeneralMatrix.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFLAPACKGeneralMatrix.lo -MD -MP -MF "$(DEPDIR)/TSFLAPACKGeneralMatrix.Tpo" -c -o TSFLAPACKGeneralMatrix.lo `test -f '$(srcdir)/Concrete/TSFLAPACKGeneralMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFLAPACKGeneralMatrix.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFLAPACKGeneralMatrix.Tpo" "$(DEPDIR)/TSFLAPACKGeneralMatrix.Plo"; else rm -f "$(DEPDIR)/TSFLAPACKGeneralMatrix.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/Concrete/TSFLAPACKGeneralMatrix.cpp' object='TSFLAPACKGeneralMatrix.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFLAPACKGeneralMatrix.lo `test -f '$(srcdir)/Concrete/TSFLAPACKGeneralMatrix.cpp' || echo '$(srcdir)/'`$(srcdir)/Concrete/TSFLAPACKGeneralMatrix.cpp

TSFAztecSolver.lo: $(srcdir)/LinearSolvers/TSFAztecSolver.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFAztecSolver.lo -MD -MP -MF "$(DEPDIR)/TSFAztecSolver.Tpo" -c -o TSFAztecSolver.lo `test -f '$(srcdir)/LinearSolvers/TSFAztecSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/LinearSolvers/TSFAztecSolver.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFAztecSolver.Tpo" "$(DEPDIR)/TSFAztecSolver.Plo"; else rm -f "$(DEPDIR)/TSFAztecSolver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/LinearSolvers/TSFAztecSolver.cpp' object='TSFAztecSolver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFAztecSolver.lo `test -f '$(srcdir)/LinearSolvers/TSFAztecSolver.cpp' || echo '$(srcdir)/'`$(srcdir)/LinearSolvers/TSFAztecSolver.cpp

TSFLinearSolverBuilder.lo: $(srcdir)/LinearSolvers/TSFLinearSolverBuilder.cpp
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFLinearSolverBuilder.lo -MD -MP -MF "$(DEPDIR)/TSFLinearSolverBuilder.Tpo" -c -o TSFLinearSolverBuilder.lo `test -f '$(srcdir)/LinearSolvers/TSFLinearSolverBuilder.cpp' || echo '$(srcdir)/'`$(srcdir)/LinearSolvers/TSFLinearSolverBuilder.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFLinearSolverBuilder.Tpo" "$(DEPDIR)/TSFLinearSolverBuilder.Plo"; else rm -f "$(DEPDIR)/TSFLinearSolverBuilder.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/LinearSolvers/TSFLinearSolverBuilder.cpp' object='TSFLinearSolverBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFLinearSolverBuilder.lo `test -f '$(srcdir)/LinearSolvers/TSFLinearSolverBuilder.cpp' || echo '$(srcdir)/'`$(srcdir)/LinearSolvers/TSFLinearSolverBuilder.cpp

NOX_StatusTest_SafeCombo.lo: $(srcdir)/NonlinearSolvers/NOX_StatusTest_SafeCombo.C
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NOX_StatusTest_SafeCombo.lo -MD -MP -MF "$(DEPDIR)/NOX_StatusTest_SafeCombo.Tpo" -c -o NOX_StatusTest_SafeCombo.lo `test -f '$(srcdir)/NonlinearSolvers/NOX_StatusTest_SafeCombo.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/NOX_StatusTest_SafeCombo.C; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NOX_StatusTest_SafeCombo.Tpo" "$(DEPDIR)/NOX_StatusTest_SafeCombo.Plo"; else rm -f "$(DEPDIR)/NOX_StatusTest_SafeCombo.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/NonlinearSolvers/NOX_StatusTest_SafeCombo.C' object='NOX_StatusTest_SafeCombo.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NOX_StatusTest_SafeCombo.lo `test -f '$(srcdir)/NonlinearSolvers/NOX_StatusTest_SafeCombo.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/NOX_StatusTest_SafeCombo.C

NOX_TSF_Group.lo: $(srcdir)/NonlinearSolvers/NOX_TSF_Group.C
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NOX_TSF_Group.lo -MD -MP -MF "$(DEPDIR)/NOX_TSF_Group.Tpo" -c -o NOX_TSF_Group.lo `test -f '$(srcdir)/NonlinearSolvers/NOX_TSF_Group.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/NOX_TSF_Group.C; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NOX_TSF_Group.Tpo" "$(DEPDIR)/NOX_TSF_Group.Plo"; else rm -f "$(DEPDIR)/NOX_TSF_Group.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/NonlinearSolvers/NOX_TSF_Group.C' object='NOX_TSF_Group.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NOX_TSF_Group.lo `test -f '$(srcdir)/NonlinearSolvers/NOX_TSF_Group.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/NOX_TSF_Group.C

NOX_TSF_StatusTestBuilder.lo: $(srcdir)/NonlinearSolvers/NOX_TSF_StatusTestBuilder.C
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NOX_TSF_StatusTestBuilder.lo -MD -MP -MF "$(DEPDIR)/NOX_TSF_StatusTestBuilder.Tpo" -c -o NOX_TSF_StatusTestBuilder.lo `test -f '$(srcdir)/NonlinearSolvers/NOX_TSF_StatusTestBuilder.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/NOX_TSF_StatusTestBuilder.C; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NOX_TSF_StatusTestBuilder.Tpo" "$(DEPDIR)/NOX_TSF_StatusTestBuilder.Plo"; else rm -f "$(DEPDIR)/NOX_TSF_StatusTestBuilder.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/NonlinearSolvers/NOX_TSF_StatusTestBuilder.C' object='NOX_TSF_StatusTestBuilder.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NOX_TSF_StatusTestBuilder.lo `test -f '$(srcdir)/NonlinearSolvers/NOX_TSF_StatusTestBuilder.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/NOX_TSF_StatusTestBuilder.C

NOX_TSF_Vector.lo: $(srcdir)/NonlinearSolvers/NOX_TSF_Vector.C
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT NOX_TSF_Vector.lo -MD -MP -MF "$(DEPDIR)/NOX_TSF_Vector.Tpo" -c -o NOX_TSF_Vector.lo `test -f '$(srcdir)/NonlinearSolvers/NOX_TSF_Vector.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/NOX_TSF_Vector.C; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/NOX_TSF_Vector.Tpo" "$(DEPDIR)/NOX_TSF_Vector.Plo"; else rm -f "$(DEPDIR)/NOX_TSF_Vector.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/NonlinearSolvers/NOX_TSF_Vector.C' object='NOX_TSF_Vector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o NOX_TSF_Vector.lo `test -f '$(srcdir)/NonlinearSolvers/NOX_TSF_Vector.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/NOX_TSF_Vector.C

TSFNOXSolver.lo: $(srcdir)/NonlinearSolvers/TSFNOXSolver.C
@am__fastdepCXX_TRUE@	if $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TSFNOXSolver.lo -MD -MP -MF "$(DEPDIR)/TSFNOXSolver.Tpo" -c -o TSFNOXSolver.lo `test -f '$(srcdir)/NonlinearSolvers/TSFNOXSolver.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/TSFNOXSolver.C; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/TSFNOXSolver.Tpo" "$(DEPDIR)/TSFNOXSolver.Plo"; else rm -f "$(DEPDIR)/TSFNOXSolver.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$(srcdir)/NonlinearSolvers/TSFNOXSolver.C' object='TSFNOXSolver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TSFNOXSolver.lo `test -f '$(srcdir)/NonlinearSolvers/TSFNOXSolver.C' || echo '$(srcdir)/'`$(srcdir)/NonlinearSolvers/TSFNOXSolver.C

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done
install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(execincludedir)" || $(mkdir_p) "$(DESTDIR)$(execincludedir)"
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_execincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(execincludedir)/$$f'"; \
	  $(nodist_execincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(execincludedir)/$$f"; \
	done

uninstall-nodist_execincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(execincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(execincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) TSF_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) TSF_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) TSF_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) TSF_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/.. $(distdir)/Concrete $(distdir)/LinearSolvers $(distdir)/NonlinearSolvers $(distdir)/Operators $(distdir)/Preconditioners $(distdir)/Utils $(distdir)/Vectors
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS) TSF_config.h
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)" "$(DESTDIR)$(execincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-libLTLIBRARIES \
	install-nodist_execincludeHEADERS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLTLIBRARIES uninstall-nodist_execincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man \
	install-nodist_execincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-includeHEADERS \
	uninstall-info-am uninstall-libLTLIBRARIES \
	uninstall-nodist_execincludeHEADERS


# ------------------------------------------------------------------------
#
# ------------------------------------------------------------------------

include $(top_builddir)/Makefile.site.sundance
include $(top_builddir)/Makefile.export.TSFExtended
include $(TRILINOS_DIR)/packages/teuchos/Makefile.export
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
