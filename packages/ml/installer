#!/bin/sh -f
#
# see if echo is messed up (i.e. -n does not work)
# and see if we can find another one
#
export echo
ee=`echo -n test | grep n | wc | sed "s/^ *//" | sed "s/ .*//"`
if test `expr ${ee}` = '1'
then
if test -x /usr/ucb/echo
then
   echo=/usr/ucb/echo
else
   echo=echo
fi
else
   echo=echo
fi
export echo
${echo} 
${echo} "                ML installer ..."
${echo}
${echo}
${echo} "This program builds optional libraries that can be used with ML:"
${echo} "    1) MPI  "
${echo} "    2) Aztec"
${echo} "    3) SuperLU or Distributed SuperLU"
${echo} "    4) ParaSails                     " 
${echo} "    5) ParMetis                      " 
${echo}
${echo} "If you are not sure what is needed, compile without libraries and"
${echo} "wait for runtime message indicating a missing library."
${echo} 
${echo} "==> If this script bombs ... you have to do things manually!!"
${echo} "==>"
${echo} "==> 1) If you don't have 'Obj/' --> 'cd etc; flatten; cd ..'"
${echo} "==> 2) Compile any package not built"
${echo} "==> 3) setenv ARCH machine (see machine list below)"
${echo} "==> 4) create 'make_\${ARCH}.variables' in ml/ with package info. For example,"
${echo} "==>        PACKAGES=-DML_MPI -DAZTEC -DSUPERLU -DPARASAILS -DMETIS"
${echo} "==>        INC_PATH=-I../lib/ParMetis-2.0/METISLib -I../lib/ParaSails \\"
${echo} "==>                 -I../lib/DSuperLU/SRC          -I../lib/Aztec/lib \\"
${echo} "==>                 -I/usr/local/mpich/include"
${echo} "==>        LIBRARIES=-L../lib/ParMetis-2.0 -L/usr/local/mpich/lib \\"
${echo} "==>                  -L../lib/Aztec/lib -L../lib/ParaSails -lmetis -lParaSails \\"
${echo} "==>                   ../lib/DSuperLU/superluPCLINUX.a -laztec -lmpich"
${echo} "==> Note: Each externally supplied blas/lapack routine must be listed on the"
${echo} "==> PACKAGES line (e.g. -DML_DDOT_FUNC). grep FUNC ml_lapack.c for a full list."
${echo}
${echo}
export USING_MPI
export GOT_BLAS
export GOT_LAPACK
export GOT_EPETRA
export ARCH
export PACKAGES
export INC_PATH
export LIBRARIES
export ML_HOME
USING_MPI=no
GOT_BLAS=no
GOT_LAPACK=no
GOT_EPETRA=no
#ARCH=
PACKAGES=-DML_PACKAGE
INC_PATH=
LIBRARIES=
PWD=`pwd`
ML_HOME=$PWD


${echo} "What platform you are using?"
${echo} " CPLANT, DEC, HP, PCLINUX, SGI, SMOS, SOLARIS, SP2, SUN, TFLOP, XTFLOP"
${echo} "Note: To add other machines, create a new etc/makefile.xxx."
${echo}
ARCH=`${echo} ${ARCH} | sed "s/_MPI//"`
tARCH=`${echo} ${ARCH},`
if test `expr $tARCH` = ','
then
ARCH=PCLINUX
fi
${echo} -n "What machine? [${ARCH}] " | sed "s/-n//"
read tARCH
ttARCH=`${echo} ${tARCH},`
if test `expr $ttARCH` != ','
then
   ARCH=$tARCH
fi
ARCH=`${echo} ${ARCH} | sed s/,//`
#
#
if test `expr $ARCH` != 'CPLANT'   &&
   test `expr $ARCH` != 'DEC'     &&
   test `expr $ARCH` != 'HP'       &&
   test `expr $ARCH` != 'PCLINUX'  && 
   test `expr $ARCH` != 'SGI'      &&
   test `expr $ARCH` != 'SMOS'     &&
   test `expr $ARCH` != 'SOLARIS'  &&
   test `expr $ARCH` != 'SP2'      &&
   test `expr $ARCH` != 'SUN'      &&
   test `expr $ARCH` != 'XTFLOP'   &&
   test `expr $ARCH` != 'TFLOP'   
then
   ${echo} Unsupported machine: $ARCH
   exit
fi
#
# Make the Obj directory with links to the source code and 
# makefile.
#
if test -d Obj 
then
  \rm -f make_${ARCH}.variables
  ${echo}  >  make_${ARCH}.variables
  cd Obj; make "ARCH=${ARCH}" clean; cd ..
  \rm -f make_${ARCH}.variables
else
  cd etc; ./flatten;  cd ..
fi
#
# Set up the machine dependent environment variables
#
rm -f .arch_env
#grep "=" etc/makefile.${ARCH} | grep -v "^\#"  \
echo "export ARCH" >  .arch_env
echo "export ARCH_FLAGS" >  .arch_env
echo "export CC"         >> .arch_env
echo "export FC"         >> .arch_env
echo "export LINKER"     >> .arch_env
echo "export ARCH_LIBS"  >> .arch_env
echo "export AR"         >> .arch_env
echo "export RANLIB"     >> .arch_env
#
# some stupid code to use ar instead of xar
# on some TFLOP environments
#
if test `expr ${ARCH}` = 'TFLOP' ||
   test `expr ${ARCH}` = 'XTFLOP' 
then
\rm -f .artemp
which xar 2>>.artemp 1>>.artemp
noar=`cat .artemp | grep " in " | wc | sed "s/^ *//" | sed "s/ .*//"`
if test `expr $noar` = '1'
then
\rm -f etc/makefile.copy
cat etc/makefile.${ARCH} | sed "s/xar/ar/" > etc/makefile.copy
\rm -f etc/makefile.${ARCH}
mv etc/makefile.copy etc/makefile.${ARCH}
fi
fi
\rm -f .artemp
#
#
grep "=" etc/makefile.${ARCH} \
         |  grep -v "^\#"  \
         | sed "s/\#.*//"  \
         | sed 's/=/=\"/' | sed 's/$/\"/' \
         | sed "s/(/{/g"  \
         | sed "s/)/}/g"  >> .arch_env
echo "./install_packages $1" >> .arch_env
chmod a+x .arch_env
sh .arch_env
\rm -f .arch_env etc/makefile.copy
