#!/bin/sh
export echo
if test -x /usr/ucb/echo
then
   echo=/usr/ucb/echo
else
   echo=echo
fi
export echo
${echo} 
${echo} "                ML installer ..."
${echo}
${echo}
${echo} "This program attempts to build all the libraries that can be used"
${echo} "with ML. We are still debugging the installer ... and so there are"
${echo} "lots of things that might go wrong (especially when compiling other"
${echo} "packages). It is recommended that casual users work with as few "
${echo} "packages as possible (e.g. just MPI or just MPI & SuperLU)."
${echo}
${echo} "Currently, the following libraries can be optionally"
${echo} "used with ML:"
${echo}
${echo} "    1) MPI  "
${echo} "    2) Aztec"
${echo} "    3) SuperLU or Distributed SuperLU"
${echo} "    4) ParaSails                     " 
${echo} "    5) ParMetis                      " 
${echo}
${echo} "If you are not sure what libraries you need, you can compile"
${echo} "without libraries and then you will get a message when executing"
${echo} "if something needs to be added."
${echo} 
${echo} "==> If something goes WRONG ... you have to do things manually"
${echo} "==>"
${echo} "==> 1) If you don't have 'Obj/' --> 'cd etc; flatten; cd ..'"
${echo} "==> 2) Compile any package not built"
${echo} "==> 3) setenv ARCH machine"
${echo} "==>       where machine is one of CPLANT, DEC, HP, PCLINUX, SGI, "
${echo} "==>       SMOS, SOLARIS, SP2, SUN, TFLOP."
${echo} "==> 4) create the file 'make_\${ARCH}.variables' in \'ml/\' listing"
${echo} "==>    all packages being used, include paths, and libraries."
${echo} "==>    For example:"
${echo} "==>            PACKAGES=-DML_MPI -DAZTEC -DSUPERLU -DPARASAILS -DMETIS"
${echo} "==>            LIB_HOME=/home/doe/ml/lib"
${echo} "==>            INC_PATH=-I\${LIB_HOME}/ParMetis-2.0/METISLib -I\${LIB_HOME}/ParaSails \\"
${echo} "==>                     -I\${LIB_HOME}/DSuperLU/SRC -I\${LIB_HOME}/Aztec/lib \\"
${echo} "==>                     -I/usr/local/mpich/include"
${echo} "==>            LIBRARIES= -L\${LIB_HOME}/ParMetis-2.0 -lmetis -L\${LIB_HOME}/ParaSails \\"
${echo} "==>                       -lParaSails \${LIB_HOME}/DSuperLU/superluPCLINUX.a \\"
${echo} "==>                       -L\${LIB_HOME}/Aztec/lib -laztec -L/usr/local/mpich/lib -lmpich"
${echo}
${echo}
export USING_MPI
export GOT_BLAS
export GOT_LAPACK
export ARCH
export PACKAGES
export INC_PATH
export LIBRARIES
export ML_HOME
USING_MPI=no
GOT_BLAS=no
GOT_LAPACK=no
ARCH=
#PACKAGES=-Dbinary
PACKAGES=
INC_PATH=
LIBRARIES=
PWD=`pwd`
ML_HOME=$PWD

${echo}
${echo}
${echo} "At this point you need to tell us what platform you are using"
${echo} "Currently available machines include:"
${echo} "    CPLANT, DEC, HP, PCLINUX, SGI, SMOS, SOLARIS, SP2, SUN, TFLOP"
${echo} "To add another machine, create a new etc/makefile.xxx and put"
${echo} "machine in this script's list."
${echo}
${echo} -n "What machine? [PCLINUX] "
read ARCH
ARCH=`${echo} ${ARCH},`
if test `expr $ARCH` = ','
then
   ARCH=PCLINUX,
fi
ARCH=`${echo} ${ARCH} | sed s/,//`
#
#
if test `expr $ARCH` != 'CPLANT'   &&
   test `expr $ARCH` != 'DEC'     &&
   test `expr $ARCH` != 'HP'       &&
   test `expr $ARCH` != 'PCLINUX'  && 
   test `expr $ARCH` != 'SGI'      &&
   test `expr $ARCH` != 'SMOS'     &&
   test `expr $ARCH` != 'SOLARIS'  &&
   test `expr $ARCH` != 'SP2'      &&
   test `expr $ARCH` != 'SUN'      &&
   test `expr $ARCH` != 'TFLOP'   
then
   ${echo} Unsupported machine
   exit
fi
#
# Make the Obj directory with links to the source code and 
# makefile.
#
if test -d Obj 
then
  \rm -f make_${ARCH}.variables
  ${echo}  >  make_${ARCH}.variables
  cd Obj; make "ARCH=${ARCH}" clean; cd ..
else
  cd etc; ./flatten;  cd ..
fi
#
# Set up the machine dependent environment variables
#
rm -f .arch_env
#grep "=" etc/makefile.${ARCH} | grep -v "^\#"  \
echo "export ARCH" >  .arch_env
echo "export ARCH_FLAGS" >  .arch_env
echo "export CC"         >> .arch_env
echo "export FC"         >> .arch_env
echo "export LINKER"     >> .arch_env
echo "export ARCH_LIBS"  >> .arch_env
echo "export AR"         >> .arch_env
echo "export RANLIB"     >> .arch_env
#
# some stupid code to use ar instead of xar
# on some TFLOP environments
#
\rm -f etc/makefile.copy
cp etc/makefile.${ARCH} etc/makefile.copy
if test `expr ${ARCH}` = 'TFLOP' 
then
\rm -f .artemp
which xar 2>>.artemp 1>>.artemp
noar=`cat .artemp | grep " in " | wc | sed "s/^ *//" | sed "s/ .*//"`
if test `expr $noar` = '1'
then
\rm -f etc/makefile.copy
cat etc/makefile.${ARCH} | sed "s/xar/ar/" > etc/makefile.copy
fi
fi
\rm -f .artemp
#
#
grep "=" etc/makefile.copy \
         |  grep -v "^\#"  \
         | sed "s/\#.*//"  \
         | sed 's/=/=\"/' | sed 's/$/\"/' \
         | sed "s/(/{/g"  \
         | sed "s/)/}/g"  >> .arch_env
echo "./install_packages" >> .arch_env
chmod a+x .arch_env
sh .arch_env
\rm -f .arch_env etc/makefile.copy
