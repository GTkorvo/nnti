===============================================================================

#  Current revision: $Revision$
#  Branch:           $Branch$
#  Last modified:    $Date$
#  Modified by:      $Author$

===============================================================================

Attention new users!!
This file contains a short description of the most relevant ML examples.

===============================================================================

Import files and directories in ml/examples:

Advanced                    Advanced usage:  filtering, preconditioner analysis
BasicExamples               ** Beginning users should start here **
Elasticity                  Solving elasticy problems (scalar)
ExampleMatrices             Input matrices for Elasticity examples
MatrixFormats               Various matrix storage types available (e.g., CSR)
MatrixReading               Reading in various matrix types from file
Maxwell                     Solving eddy current equations
MultipleRHS                 Solving systems with multiple right-hand-sides
Other                       Examples that don't fit into other categories
StandAlone                  Using ML without other Trilinos packages
TwoLevelDD                  Preconditioning with two-level domain decomposition
Visualization               Using ML's visualization capabilities
README                      this file
README.AddingExamples       (for developers) instructions on adding examples

===============================================================================


		How to use ML as a stand-alone package
		--------------------------------------

*) mlguide.c:
description of the ML interface functions for a simple, 1D problem. Must be run
with one processor.

*) mlguide_par.c:
description of the ML interface functions in parallel. Must be run with two
processors.


		How to use ML with Aztec (C version)
		------------------------------------

*) ml_aztec_simple.c:

This example creates a simple matrix, corresponding to a 2D Laplacian on a
structured grid, as an Aztec matrix. This matrix is wrapped as an ML_Operator,
then the V-cycle is built, and the resulting preconditioner is used within
Aztec (C version). The example works with the AztecOO distributed withint
Trilinos.

*) ml_simple_max.c:

Sample driver for Maxwell equation AMG solver in the ML package. The 
software is tested by setting up a 2-dimensional uniform grid example on 
a square. Two different ways of creating matrices are shown.



		How to use ML with Epetra matrices (RECOMMENDED)
		------------------------------------------------

*) ml_preconditioner.cpp:

Goal of this example is to present the basic usage of the
ML_Epetra::MultiLevelPreconditioner class.  The example builds a simple matrix
and solves the corresponding linear system using AztecOO and ML as a
preconditioner. It finally checks the accuracy of the computed solution.

*) ml_2level_DD.cpp:

Goal of this example is to present how to define domain decomposition
preconditioners using class ML_Epetra::MultiLevelPreconditioner.

*) ml_operator.cpp:

Goal of this example is to present the usage of the
ML_Epetra::MultiLevelOperator class. This can should be used if the
user wants to build all the ML components by him/herself (starting
from an Epetra_RowMatrix), then use the resulting ML preconditioner within AztecOO.
The file also shows how to read an Harwell/Boeing matrix and convert it into
Epetra_CrsMatrix, then redistribute the matrix on the available number of processors.

*) ml_maxwell.cpp:

Sample driver for Maxwell equation AMG solver in the ML package. The
software is tested by setting up a 2-dimensional uniform grid example on
a square. For details about the problem at hand, please refer to file
ml_simple_max.c, of which this file is the C++ counterpart.

*) ml_read_matrix_AIJ.cpp:

This example reads a matrix in AIJ format, and creates
the corresponding Epetra_CrsMatrix. Then matrix is then
distributed over all the available processes.
