#!/bin/sh
#
# This script is used for running a series of benchmark tests.
# Users indicate a directory containing subdirectories which 
# describe data corresponding to different problems (one directory
# for each problem). The script automatically descends each 
# subdirectory and runs the executable (given on the command line)
# within the subdirectory. All data necessary to run the executable
# must be within this subdirectory. The problem is run and the output
# is compared with an output file in this subdirectory. Some summary
# statistics are reported.
# Note: This script is often used with the executable ml_readfile
#        which contains comments on setting up problems. 
#
#echo "Usage: run_benchmarks [bench_directory executable scratch_directory]

BENCH_DIRECTORY=/home/tuminaro/ml_bench
EXECUTABLE=/home/tuminaro/codes/Aztec/ml/Obj/ml_readfile
SCRATCH_DIRECTORY=/tmp/poop

#echo "Usage: run_benchmarks [bench_directory executable scratch_directory]

echo $* $#
#
# Take command line arguments and replace defaults
#
#if test `expr ${*}` -ge `expr 3`
if test $# -ge 4
then
  echo "Usage: run_benchmarks [bench_directory executable scratch_directory]"
  exit
fi
if test $# -ge 1
then
  echo at least one argument
  BENCH_DIRECTORY=$1
fi
if test $# -ge 2
then
  echo at least two argument
  EXECUTABLE=$2
fi
if test $# -ge 3
then
  echo at least three argument
  SCRATCH_DIRECTORY=$3
fi

#
#  Check for the benchmark directory containing the 
#  valid input/output data.
#

if test -d ${BENCH_DIRECTORY}
then
  touch ${BENCH_DIRECTORY}
else
  echo "The directory ${BENCH_DIRECTORY} does not exist?"
  exit
fi

#
#  Check for the executable 
#
temp=`echo ${EXECUTABLE} | sed "s/ .*//"`
echo $temp

if test -f ${temp}
then
  ls ${temp} > /dev/null
else
  echo "The executable ${temp} does not exist?"
  exit
fi


#
#  Check for the work space directory where current run output 
#  will be stored.
#

if test -d ${SCRATCH_DIRECTORY}
then
  touch ${SCRATCH_DIRECTORY}
else
  echo "Creating the directory ${SCRATCH_DIRECTORY}"
  mkdir ${SCRATCH_DIRECTORY}
fi


#
# Run program within each subdirectory and compare output
# with that contained in the corresponding ${BENCH_DIRECTORY}.
#
rm -f ${SCRATCH_DIRECTORY}/summary
echo " *********** Summary ***************" >> ${SCRATCH_DIRECTORY}/summary
echo >> ${SCRATCH_DIRECTORY}/summary
echo >> ${SCRATCH_DIRECTORY}/summary
echo
tail -3 ${SCRATCH_DIRECTORY}/summary


cd ${BENCH_DIRECTORY}
for i in *
do 
   if test `expr ${i}` != 'CVS'
   then
      cd ${i}
#      echo -n $i "  "
      if test -d ${SCRATCH_DIRECTORY}/${i}
      then
         touch ${SCRATCH_DIRECTORY}/${i}
      else
         mkdir ${SCRATCH_DIRECTORY}/${i}
      fi
      /bin/rm -f ml_inputfile
      for j in ml_inputfile*
      do
        ttt=`echo $j | sed "s/ml_inputfile//"`
        /bin/rm -f ${SCRATCH_DIRECTORY}/${i}/output${ttt} ${SCRATCH_DIRECTORY}/${i}/difs${ttt}
        /bin/rm -f ml_inputfile
        cp $j ml_inputfile
        Nprocs=`grep -i "^Number of processors" ml_inputfile | sed s"/.*=//"`
        ${EXECUTABLE} ${Nprocs} | grep -v ime > ${SCRATCH_DIRECTORY}/${i}/output${ttt}
        diff -w output${ttt} ${SCRATCH_DIRECTORY}/${i}/output${ttt} > \
                                    ${SCRATCH_DIRECTORY}/${i}/difs${ttt}
        wc ${SCRATCH_DIRECTORY}/${i}/difs${ttt} >> ${SCRATCH_DIRECTORY}/summary
        tail -1 ${SCRATCH_DIRECTORY}/summary
      done
      /bin/rm -f ml_inputfile
      cd ..
   fi
done
