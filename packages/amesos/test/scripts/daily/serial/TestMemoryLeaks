#!/bin/csh
# ************************************************************************
# 
#                 Amesos: Direct Sparse Solver Package
#                 Copyright (2004) Sandia Corporation
# 
# Under terms of Contract DE-AC04-94AL85000, there is a non-exclusive
# license for use of this work by or on behalf of the U.S. Government.
# 
# This library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of the
# License, or (at your option) any later version.
#  
# This library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#  
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
# USA
# Questions? Contact Michael A. Heroux (maherou@sandia.gov) 
# 
# ************************************************************************

#
#  This is an ugly script.  Do not base your work on this.
#  This script should be run from the test/TestOptions directory
#  i..e  
#

# $1 - Used only for automated testing.  No action required by script owner.
#      This parameter names the subdirectory from which the script is being
#      run.  This assists a developer in figuring out which tests failed.

set error = None
set AnError = False
set printexitvalue

    # file2 is the log that is created and put into a results email if 
    # errors occur.
    set file2 = ../../../../logMpiErrors.txt
    rm -f $file2
    # Echo some important information into the log file to help developers
    # figure out which tests failed.
    #'file' is a shorter log that is retained even if all tests pass.
    set file = ../../../../log`eval uname`.txt
    rm -f $file
## IMPORTANT: Specify the script owner(s) on the following line
## For one owner type "owner@abc.com", for multiple owners
## "owner1@abc.com, owner2@def.com"
    echo "kstanley@cs.utk.edu" >>& $file
    echo "Script owner(s) is listed on the previous line." >>& $file
## List the Trilinos package being tested on the following line
    echo "Package being tested: Amesos  " >>& $file
    echo "Name of subdirectory: " $1 >>& $file
    # tempfile and tempfile2 (file3 and file4) are used only in the creation 
    #of the longer log file (file2).
    set file3 = tempfile
    rm -f $file3
    set file4 = tempfile2
    rm -f $file4
echo $file
echo "Date: " `eval date` >>& $file
echo `uname -a` >>& $file

		    rm valg.out.pid*
		    echo `pwd`
		    valgrind --logfile=valg.out --leak-check=yes --suppressions=Suppressions.exe ./TestOptions.exe
		    set save_status=$status
                    #
                    #  The following checks for memory leaks reported by valgrind.  
                    #  Memory errors found by valgring are caught by TestOptions.exe 
                    #
		    grep "loss" valg.out.pid* >/dev/null
		    if( $save_status != 0 || $status == 0) then
		    # A test failed.
			set AnError = True
			echo "  ******** Test failed ********" >>& $file
		        valgrind --logfile=valg.out --leak-check=yes --suppressions=Suppressions.exe ./TestOptions.exe  -v >> $file
			foreach  i ( valg.out.pid* ) 
			  echo "" >> $file
			  echo " $i " >> $file
			  echo "" >> $file
			  cat $i >> $file 
			end
		    else
		    # Tests passed
			echo "******** Test passed ********" >>& $file
		    endif

## At this point, it is assumed that the current directory is
## 'package_name/test'
    if( "$AnError" != "True" ) then
	rm -f $file2
    endif
