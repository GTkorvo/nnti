#!/bin/csh
#
#  B_Superludist.exe, the Direct Sparse Solver Regresion Test, tests and times 
#  Superludist on an MPI build.  This test includes a series of mid-sized matrices,
#  between 10,000 and 100,000 elements from Matrix Market 
#
#  RETURNS 0 if the test succeeds and 1 if the test fails 
#
#  Each call to amesos_test.exe performs one or more sovles on a particular 
#  matrix using a particular solver and prints a single line to SST.summary.
#  If the test worked, that line will contain OK.  Any line not containing 
#  the words OK, represents failure.
#  
#  Hence, the check for success is to make sure that all non-blank lines in 
#  SST.summary contain OK.
#
#  Each time that this script is run, it appends the result of any previous runs to 
#  AME.summary.  
#
#  More detailed logging information can be found in SST.log
#
#  A typical call to amesos_test.exe is:
#COMMENT       mpirun -np 1 amesos_test.exe SUPERLUDIST SuperLU.rua 0 1 1 0 1e-14 1e-14
#  where:
#     SUPERLUDIST SuperLU.rua - The solver to use and the matrix to solve
#     0 1 1 0                 - MatrixType, Special, NumSolves, Transpose
#     1e-14 1e-14             - max residual, max error 
#
#
#   MatType = 0 means serial (all stored on process 0) 
#   MatType = 1 means distributed (evenly) 
#   Special = number of repeats (0 means run it once)
#   NumSolves < 0 means use multiple right hand sides
#   NumSolves > 1 means use blocked right hand sides
#
touch SST.summary
cat >>AME.summary <SST.summary 
echo "COMMENT Start B_Superludist.exe, the Direct Sparse Solver Regresion Test" > SST.summary 
echo "COMMENT The values printed in columns 11 and 12 are relative."
echo "COMMENT We test against absolute errors."  
echo "COMMENT column 1 - machine name " >> SST.summary 
echo "COMMENT column 2 - solver name " >> SST.summary 
echo "COMMENT column 3 - timestamp" >> SST.summary 
echo "COMMENT column 4 - matrix file " >> SST.summary 
echo "COMMENT column 5 - Matrix type  " >> SST.summary 
echo "COMMENT column 6 - Special - only used for SuperLU serial " >> SST.summary 
echo "COMMENT column 7 - Number of processes " >> SST.summary 
echo "COMMENT column 8 - Number of right hand sides, nrhs, (-1 means multiple solves) " >> SST.summary 
echo "COMMENT column 9 - Tranpose (1 == solve A^t x = b)" >> SST.summary 
echo "COMMENT column 10 - Norm of the matrix " >> SST.summary 
echo "COMMENT column 11 - relative error - i.e. error/norm(X) " >> SST.summary 
echo "COMMENT column 12 - residual error - i.e. residual/norm(B) " >> SST.summary 
echo "COMMENT column 13 - total_time " >> SST.summary 
echo "COMMENT column 14 - multiple solves only - Factor time " >> SST.summary 
echo "COMMENT column 15 - multiple solves only - Time for one solve " >> SST.summary 
echo "COMMENT column 16 - multiple solves only - Time for nrhs-1 solves " >> SST.summary 
echo "COMMENT column 17+ - summary " >> SST.summary 

# COMMENT Singular mpirun -np 1 amesos_test.exe SUPERLUDIST mbeause.rua 0 0 1 0 1e-14 5e-14 >>SST.stdout
# COMMENT Singular mpirun -np 1 amesos_test.exe SUPERLUDIST mbeaflw.rua 0 0 1 0 1e-14 5e-14 >>SST.stdout
# COMMENT Singular mpirun -np 1 amesos_test.exe SUPERLUDIST mbeacxc.rua 0 0 1 0 1e-14 5e-14 >>SST.stdout

mpirun -np 1 amesos_test.exe SUPERLUDIST watt__1.rua 0 0 1 0 1e-12 5e-16 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST utm5940.rua 0 0 1 0 4e-8 5e-14 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST utm1700b.rua 0 0 1 0 4e-9 5e-14 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST sherman5.rua 0 0 1 0 4e-12 5e-12 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST rbs480b.rua 0 0 1 0 1e-12 5e-12 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST olm5000.rua 0 0 1 0 1e-12 5e-13 >>SST.stdout
# COMMENT fails mpirun -np 1 amesos_test.exe SUPERLUDIST rw5151.rua 0 0 1 0 1e+37 5e+20 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST mhd3200a.rua 0 0 1 0 1000000000 5e-4 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST add20.rua 0 0 1 0 1e-11 5e-14 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST add32.rua 0 0 1 0 1e-13 5e-14 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST gemat12.rua 0 0 1 0 1e-10 5e-12 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST orani678.rua 0 0 1 0 3e-13 5e-14 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST dw2048.rua 0 0 1 0 4e-13 5e-14 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST cavity13.rua 0 0 1 0 1e-10 5e-13 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST cavity09.rua 0 0 1 0 8e-6 5e-6 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST cavity05.rua 0 0 1 0 1e-9 5e-11 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST cry10000.rua 0 0 1 0 3e-3 5e-11 >>SST.stdout
mpirun -np 1 amesos_test.exe SUPERLUDIST mcfe.rua 0 0 1 0 5e-13 1000 >>SST.stdout

mpirun -np 4 amesos_test.exe SUPERLUDIST watt__1.rua 0 0 1 0 1e-12 5e-16 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST utm5940.rua 0 0 1 0 4e-8 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST utm1700b.rua 0 0 1 0 4e-9 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST sherman5.rua 0 0 1 0 4e-12 5e-12 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST rbs480b.rua 0 0 1 0 1e-12 5e-12 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST olm5000.rua 0 0 1 0 1e-12 5e-13 >>SST.stdout
# COMMENT fails mpirun -np 4 amesos_test.exe SUPERLUDIST rw5151.rua 0 0 1 0 1e+37 5e+20 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST mhd3200a.rua 0 0 1 0 1000000000 5e-4 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST add20.rua 0 0 1 0 1e-11 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST add32.rua 0 0 1 0 1e-13 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST gemat12.rua 0 0 1 0 1e-10 5e-12 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST orani678.rua 0 0 1 0 3e-13 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST dw2048.rua 0 0 1 0 4e-13 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST cavity13.rua 0 0 1 0 1e-10 5e-16 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST cavity09.rua 0 0 1 0 8e-6 5e-6 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST cavity05.rua 0 0 1 0 1e-9 5e-11 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST cry10000.rua 0 0 1 0 3e-3 5e-11 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST mcfe.rua 0 0 1 0 5e-13 1000 >>SST.stdout

mpirun -np 4 amesos_test.exe SUPERLUDIST watt__1.rua 1 1 -10 0 1e-12 5e-16 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST utm5940.rua 1 1 -10 0 4e-8 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST utm1700b.rua 1 1 -10 0 4e-9 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST sherman5.rua 1 1 -10 0 4e-12 5e-12 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST rbs480b.rua 1 1 -10 0 1e-12 5e-12 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST olm5000.rua 1 1 -10 0 1e-12 5e-13 >>SST.stdout
# COMMENT fails mpirun -np 4 amesos_test.exe SUPERLUDIST rw5151.rua 1 1 -10 0 1e+37 5e+20 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST mhd3200a.rua 1 1 -10 0 1000000000 5e-4 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST add20.rua 1 1 -10 0 1e-11 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST add32.rua 1 1 -10 0 1e-13 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST gemat12.rua 1 1 -10 0 1e-10 5e-12 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST orani678.rua 1 1 -10 0 3e-13 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST dw2048.rua 1 1 -10 0 4e-13 5e-14 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST cavity13.rua 1 1 -10 0 1e-10 5e-16 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST cavity09.rua 1 1 -10 0 8e-6 5e-6 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST cavity05.rua 1 1 -10 0 1e-9 5e-11 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST cry10000.rua 1 1 -10 0 3e-3 5e-11 >>SST.stdout
mpirun -np 4 amesos_test.exe SUPERLUDIST mcfe.rua 1 1 -10 0 5e-13 1000 >>SST.stdout



echo "" >> SST.summary 
echo "COMMENT End B_Superludist.exe" >> SST.summary 

#
#  Make sure that the tests ran 
#
set expected_lines = `grep mpirun B_Superludist.exe | grep -v COMMENT | wc`
set results = `grep OK SST.summary | wc`
if ($results[1] != $expected_lines[1] ) then
    echo 'I expected ' $expected_lines[1] ' correct test results, but only saw: ' $results[1] 
    grep -v OK SST.summary | grep -v COMMENT | grep " " && echo "Direct Sparse Solver Regression Test FAILED" 
    exit(1)
endif
#
#  Prints out success or failure and exit 
#
grep -v OK SST.summary | grep -v COMMENT | grep " " > /dev/null || echo "Direct Sparse Solver Regression Test passed on all" $expected_lines[1] " tests"
#
#  This should not generaly print anything as errors should have been caught in the if test above
#
grep -v OK SST.summary  | grep -v COMMENT | grep " " && echo "Direct Sparse Solver Regression Test FAILED" 
exit($status == 0)
