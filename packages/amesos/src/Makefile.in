# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# @HEADER
# @HEADER

# -----------------------------------------------------------------------
# For each category, create two variables - NAME and NAME_H. The
# second is the list of headers to be installed, i.e., any header that
# might someday be needed by some other code outside Amesos. The first is
# the list of all source and any other header files.
# ------------------------------------------------------------------------
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
ALTERNATE_AR = @ALTERNATE_AR@
AMESOS_LIBS = @AMESOS_LIBS@
AMTAR = @AMTAR@
AWK = @AWK@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
F77 = @F77@
FLIBS = @FLIBS@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LAPACK_LIBS = @LAPACK_LIBS@
MAINT = @MAINT@
MPI_CC_EXISTS = @MPI_CC_EXISTS@
MPI_CXX = @MPI_CXX@
MPI_CXX_EXISTS = @MPI_CXX_EXISTS@
MPI_F77_EXISTS = @MPI_F77_EXISTS@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
XTRALDADD = @XTRALDADD@
ac_aux_dir = @ac_aux_dir@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@

@HAVE_AMESOS_SUPERLUDIST_TRUE@SUPERLUDIST_H = \
@HAVE_AMESOS_SUPERLUDIST_TRUE@	$(srcdir)/Amesos_Superludist.h

@HAVE_AMESOS_SUPERLUDIST_FALSE@SUPERLUDIST_H = 
@HAVE_AMESOS_SUPERLUDIST_TRUE@SUPERLUDIST = \
@HAVE_AMESOS_SUPERLUDIST_TRUE@	$(srcdir)/Amesos_Superludist.cpp

@HAVE_AMESOS_SUPERLUDIST_FALSE@SUPERLUDIST = 

@HAVE_AMESOS_SLUD_TRUE@SLUDIST_H = \
@HAVE_AMESOS_SLUD_TRUE@	$(srcdir)/SuperludistOO.h

@HAVE_AMESOS_SLUD_FALSE@SLUDIST_H = 
@HAVE_AMESOS_SLUD_TRUE@SLUDIST = \
@HAVE_AMESOS_SLUD_TRUE@	$(srcdir)/SuperludistOO.cpp

@HAVE_AMESOS_SLUD_FALSE@SLUDIST = 

#
#  If the parameter list cannot be made portable to all 
#  platforms, we will have to add a NEED_PARAMETER_LIST
#  flag to configure.ac 
#
@NEED_PARAMETER_LIST_TRUE@PARAM_H = \
@NEED_PARAMETER_LIST_TRUE@	$(srcdir)/Amesos_Parameter_List.h \
@NEED_PARAMETER_LIST_TRUE@	$(srcdir)/Amesos_Parameter_Arbitrary.h \
@NEED_PARAMETER_LIST_TRUE@	$(srcdir)/Amesos_Parameter_Entry.h

@NEED_PARAMETER_LIST_FALSE@PARAM_H = 
@NEED_PARAMETER_LIST_TRUE@PARAM = \
@NEED_PARAMETER_LIST_TRUE@	$(srcdir)/Amesos_Parameter_List.cpp \
@NEED_PARAMETER_LIST_TRUE@	$(srcdir)/Amesos_Parameter_Entry.cpp

@NEED_PARAMETER_LIST_FALSE@PARAM = 

@HAVE_AMESOS_DSCPACK_TRUE@DSCPACK_H = \
@HAVE_AMESOS_DSCPACK_TRUE@	$(srcdir)/DscpackOO.h \
@HAVE_AMESOS_DSCPACK_TRUE@	$(srcdir)/Amesos_Dscpack.h

@HAVE_AMESOS_DSCPACK_FALSE@DSCPACK_H = 
@HAVE_AMESOS_DSCPACK_TRUE@DSCPACK = \
@HAVE_AMESOS_DSCPACK_TRUE@	$(srcdir)/DscpackOO.cpp \
@HAVE_AMESOS_DSCPACK_TRUE@	$(srcdir)/Amesos_Dscpack.cpp

@HAVE_AMESOS_DSCPACK_FALSE@DSCPACK = 

@HAVE_AMESOS_UMFPACK_TRUE@UMFPACK_H = \
@HAVE_AMESOS_UMFPACK_TRUE@	$(srcdir)/Amesos_Umfpack.h

@HAVE_AMESOS_UMFPACK_FALSE@UMFPACK_H = 
@HAVE_AMESOS_UMFPACK_TRUE@UMFPACK = \
@HAVE_AMESOS_UMFPACK_TRUE@	$(srcdir)/Amesos_Umfpack.cpp

@HAVE_AMESOS_UMFPACK_FALSE@UMFPACK = 

#
#  Here is where we will add Tim Davis' files 
#
@HAVE_AMESOS_KLU_TRUE@KLU_H = \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_btf.h \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/ \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/ \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/Amesos_Klu.h \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/cbtf.h \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu.h \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_dump.h \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_kernel.h

@HAVE_AMESOS_KLU_FALSE@KLU_H = 
@HAVE_AMESOS_KLU_TRUE@KLU = \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/btf.f \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/mc21a.f \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/mc21b.f \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/mc13e.f \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/mc13d.f \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_btf_factor.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_btf_free_symbolic.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_btf_free_numeric.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_btf_refactor.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_btf_scale.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_btf_solve.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_btf_analyze.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_dump.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/cbtf.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/Amesos_Klu.cpp \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_kernel.c \
@HAVE_AMESOS_KLU_TRUE@	$(srcdir)/klu/klu_noprune_kernel.c

@HAVE_AMESOS_KLU_FALSE@KLU = 

@HAVE_AMESOS_MUMPS_TRUE@MUMPS_H = \
@HAVE_AMESOS_MUMPS_TRUE@	$(srcdir)/Amesos_Mumps.h

@HAVE_AMESOS_MUMPS_FALSE@MUMPS_H = 
@HAVE_AMESOS_MUMPS_TRUE@MUMPS = \
@HAVE_AMESOS_MUMPS_TRUE@	$(srcdir)/Amesos_Mumps.cpp

@HAVE_AMESOS_MUMPS_FALSE@MUMPS = 

@HAVE_AMESOS_SLUD2_TRUE@SLUDIST2_H = \
@HAVE_AMESOS_SLUD2_TRUE@	$(srcdir)/Superludist2_OO.h

@HAVE_AMESOS_SLUD2_FALSE@SLUDIST2_H = 
@HAVE_AMESOS_SLUD2_TRUE@SLUDIST2 = \
@HAVE_AMESOS_SLUD2_TRUE@	$(srcdir)/Superludist2_OO.cpp

@HAVE_AMESOS_SLUD2_FALSE@SLUDIST2 = 

@HAVE_AMESOS_SLUS_TRUE@SLUSERIAL_H = \
@HAVE_AMESOS_SLUS_TRUE@       $(srcdir)/Epetra_SLU.h

@HAVE_AMESOS_SLUS_FALSE@SLUSERIAL_H = 
@HAVE_AMESOS_SLUS_TRUE@SLUSERIAL = \
@HAVE_AMESOS_SLUS_TRUE@       $(srcdir)/Epetra_SLU.cpp

@HAVE_AMESOS_SLUS_FALSE@SLUSERIAL = 

@HAVE_AMESOS_KUNDERT_TRUE@KUNDERT_H = \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/Epetra_CrsKundertSparse.h

@HAVE_AMESOS_KUNDERT_FALSE@KUNDERT_H = 
@HAVE_AMESOS_KUNDERT_TRUE@KUNDERT = \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/Epetra_CrsKundertSparse.cpp \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/alloc.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/smplinkrows.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/spbuild.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/spoutput.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/spsolve.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/driver.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/spalloc.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/spfactor.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/spsmp.c \
@HAVE_AMESOS_KUNDERT_TRUE@       $(srcdir)/ksparse/sputils.c

@HAVE_AMESOS_KUNDERT_FALSE@KUNDERT = 

COMP_H = \
	$(srcdir)/CrsMatrixTranspose.h

COMP = \
	$(srcdir)/CrsMatrixTranspose.cpp


FACTORY_H = \
	$(srcdir)/Amesos_Factory.h

FACTORY = \
	$(srcdir)/Amesos_Factory.cpp



#
#  I turned off the addition of external/slu to the include path 
#  so that I could get SLU dist to work.  Ken Feb 11, 2003
#
#Specify locations of include files within Trilinos, but outside Amesos
# AM_CPPFLAGS = -I$(top_srcdir)/../epetra/src -I$(top_builddir)/../epetra/src \
#	       -I$(top_srcdir)/../../external/slu -I$(top_srcdir)/src/ksparse

# if BUILD_SLUSERIAL
# SLUSERIAL_CPPFLAGS = -I$(top_srcdir)/../../external/slu
# else
# SLUSERIAL_CPPFLAGS = 
# endif
@HAVE_AMESOS_KUNDERT_TRUE@KUNDERT_CPPFLAGS = -I$(top_srcdir)/src/ksparse
@HAVE_AMESOS_KUNDERT_FALSE@KUNDERT_CPPFLAGS = 

AM_CPPFLAGS = -I$(top_srcdir)/../epetra/src  -I$(top_srcdir)/../amd/src \
		-I$(top_builddir)/../epetra/src \
	      $(SLUSERIAL_CPPFLAGS) $(KUNDERT_CPPFLAGS)



# ------------------------------------------------------------------------
# Amesos library specifications
# ------------------------------------------------------------------------
AMESOS_LIB = libamesos.a

AMESOS_H = \
	$(PARAM_H) \
	$(DSCPACK_H) \
	$(UMFPACK_H) \
	$(KLU_H) \
	$(MUMPS_H) \
	$(FACTORY_H) \
	$(SUPERLUDIST_H) \
	$(SLUDIST_H) \
	$(SLUDIST2_H) \
	$(SLUSERIAL_H) \
	$(KUNDERT_H) \
	$(COMP_H)


libamesos_a_SOURCES = \
	$(PARAM) \
	$(DSCPACK) \
	$(KLU) \
	$(UMFPACK) \
	$(MUMPS) \
	$(FACTORY) \
	$(SUPERLUDIST) \
	$(SLUDIST) \
	$(SLUDIST2) \
	$(SLUSERIAL) \
	$(KUNDERT) \
	$(COMP)


EXTRA_libamesos_a_SOURCES = \
	$(EXTRA_MPI) \
	$(EXTRA_MPI_H) \
	$(EXTRA_MPISMP) \
	$(EXTRA_MPISMP_H)



#We need the following to support separate build directories
#AM_CPPFLAGS=-I$(builddir)/src
# ------------------------------------------------------------------------
# For using a special archiver
# ------------------------------------------------------------------------

# SPECIAL NOTE: Why is the "else" there?  For some reason, automake
# fails to define <lib>_AR of USE_ALTERNATE_AR is false, so we have to
# define it manually.
@USE_ALTERNATE_AR_TRUE@libamesos_a_AR = $(ALTERNATE_AR)
@USE_ALTERNATE_AR_FALSE@libamesos_a_AR = $(AR) cru


# ------------------------------------------------------------------------
# Some C++ compilers create extra .o-files for templates. We need to
# be sure to include these, and this is the hack to do it.
# ------------------------------------------------------------------------
libamesos_a_LIBADD = $(XTRALDADD)


# ------------------------------------------------------------------------
# List of all libraries to install in $(libexecdir)
# ------------------------------------------------------------------------
lib_LIBRARIES = $(AMESOS_LIB)


# ------------------------------------------------------------------------
# List of all headers to install in $(includedir)
# ------------------------------------------------------------------------
include_HEADERS = $(AMESOS_H) 


# ------------------------------------------------------------------------
# Special stuff to install in our special $(execincludedir)
# ------------------------------------------------------------------------

# SPECIAL NOTE: Amesos_config.h is a machine-dependent file, so we need
# to install it in the machine-dependent directory. However, that is
# not a default installation directory, so we had to create it
# special.
execincludedir = $(exec_prefix)/include
nodist_execinclude_HEADERS = Amesos_config.h


# ------------------------------------------------------------------------
# Files to be deleted by 'make maintainer-clean'
# ------------------------------------------------------------------------
MAINTAINERCLEANFILES = Makefile.in 
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = Amesos_config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libamesos_a_DEPENDENCIES =
@NEED_PARAMETER_LIST_TRUE@am__objects_1 = \
@NEED_PARAMETER_LIST_TRUE@	Amesos_Parameter_List.$(OBJEXT) \
@NEED_PARAMETER_LIST_TRUE@	Amesos_Parameter_Entry.$(OBJEXT)
@NEED_PARAMETER_LIST_FALSE@am__objects_1 =
@HAVE_AMESOS_DSCPACK_TRUE@am__objects_2 = DscpackOO.$(OBJEXT) \
@HAVE_AMESOS_DSCPACK_TRUE@	Amesos_Dscpack.$(OBJEXT)
@HAVE_AMESOS_DSCPACK_FALSE@am__objects_2 =
@HAVE_AMESOS_KLU_TRUE@am__objects_3 = btf.$(OBJEXT) mc21a.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	mc21b.$(OBJEXT) mc13e.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	mc13d.$(OBJEXT) klu_btf_factor.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_btf_free_symbolic.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_btf_free_numeric.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_btf_refactor.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_btf_scale.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_btf_solve.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_btf_analyze.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_dump.$(OBJEXT) cbtf.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	Amesos_Klu.$(OBJEXT) klu.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_kernel.$(OBJEXT) \
@HAVE_AMESOS_KLU_TRUE@	klu_noprune_kernel.$(OBJEXT)
@HAVE_AMESOS_KLU_FALSE@am__objects_3 =
@HAVE_AMESOS_UMFPACK_TRUE@am__objects_4 = Amesos_Umfpack.$(OBJEXT)
@HAVE_AMESOS_UMFPACK_FALSE@am__objects_4 =
@HAVE_AMESOS_MUMPS_TRUE@am__objects_5 = Amesos_Mumps.$(OBJEXT)
@HAVE_AMESOS_MUMPS_FALSE@am__objects_5 =
am__objects_6 = Amesos_Factory.$(OBJEXT)
@HAVE_AMESOS_SUPERLUDIST_TRUE@am__objects_7 = \
@HAVE_AMESOS_SUPERLUDIST_TRUE@	Amesos_Superludist.$(OBJEXT)
@HAVE_AMESOS_SUPERLUDIST_FALSE@am__objects_7 =
@HAVE_AMESOS_SLUD_TRUE@am__objects_8 = SuperludistOO.$(OBJEXT)
@HAVE_AMESOS_SLUD_FALSE@am__objects_8 =
@HAVE_AMESOS_SLUD2_TRUE@am__objects_9 = Superludist2_OO.$(OBJEXT)
@HAVE_AMESOS_SLUD2_FALSE@am__objects_9 =
@HAVE_AMESOS_SLUS_TRUE@am__objects_10 = Epetra_SLU.$(OBJEXT)
@HAVE_AMESOS_SLUS_FALSE@am__objects_10 =
@HAVE_AMESOS_KUNDERT_TRUE@am__objects_11 = \
@HAVE_AMESOS_KUNDERT_TRUE@	Epetra_CrsKundertSparse.$(OBJEXT) \
@HAVE_AMESOS_KUNDERT_TRUE@	alloc.$(OBJEXT) smplinkrows.$(OBJEXT) \
@HAVE_AMESOS_KUNDERT_TRUE@	spbuild.$(OBJEXT) spoutput.$(OBJEXT) \
@HAVE_AMESOS_KUNDERT_TRUE@	spsolve.$(OBJEXT) driver.$(OBJEXT) \
@HAVE_AMESOS_KUNDERT_TRUE@	spalloc.$(OBJEXT) spfactor.$(OBJEXT) \
@HAVE_AMESOS_KUNDERT_TRUE@	spsmp.$(OBJEXT) sputils.$(OBJEXT)
@HAVE_AMESOS_KUNDERT_FALSE@am__objects_11 =
am__objects_12 = CrsMatrixTranspose.$(OBJEXT)
am_libamesos_a_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6) $(am__objects_7) $(am__objects_8) \
	$(am__objects_9) $(am__objects_10) $(am__objects_11) \
	$(am__objects_12)
libamesos_a_OBJECTS = $(am_libamesos_a_OBJECTS)

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Amesos_Dscpack.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Amesos_Factory.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Amesos_Klu.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Amesos_Mumps.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Amesos_Parameter_Entry.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Amesos_Parameter_List.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Amesos_Superludist.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Amesos_Umfpack.Po \
@AMDEP_TRUE@	./$(DEPDIR)/CrsMatrixTranspose.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DscpackOO.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_CrsKundertSparse.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Epetra_SLU.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Superludist2_OO.Po \
@AMDEP_TRUE@	./$(DEPDIR)/SuperludistOO.Po ./$(DEPDIR)/alloc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/cbtf.Po ./$(DEPDIR)/driver.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu.Po ./$(DEPDIR)/klu_btf_analyze.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu_btf_factor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu_btf_free_numeric.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu_btf_free_symbolic.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu_btf_refactor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu_btf_scale.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu_btf_solve.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu_dump.Po ./$(DEPDIR)/klu_kernel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/klu_noprune_kernel.Po \
@AMDEP_TRUE@	./$(DEPDIR)/smplinkrows.Po ./$(DEPDIR)/spalloc.Po \
@AMDEP_TRUE@	./$(DEPDIR)/spbuild.Po ./$(DEPDIR)/spfactor.Po \
@AMDEP_TRUE@	./$(DEPDIR)/spoutput.Po ./$(DEPDIR)/spsmp.Po \
@AMDEP_TRUE@	./$(DEPDIR)/spsolve.Po ./$(DEPDIR)/sputils.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = @CFLAGS@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
F77LD = $(F77)
F77LINK = $(F77LD) $(AM_FFLAGS) $(FFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
FFLAGS = @FFLAGS@
DIST_SOURCES = $(libamesos_a_SOURCES) $(EXTRA_libamesos_a_SOURCES)
HEADERS = $(include_HEADERS) $(nodist_execinclude_HEADERS)

DIST_COMMON = $(include_HEADERS) Amesos_config.h.in Makefile.am \
	Makefile.in
SOURCES = $(libamesos_a_SOURCES) $(EXTRA_libamesos_a_SOURCES)

all: Amesos_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .f .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

Amesos_config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/Amesos_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/Amesos_config.h

$(srcdir)/Amesos_config.h.in: @MAINTAINER_MODE_TRUE@ $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/Amesos_config.h.in

distclean-hdr:
	-rm -f Amesos_config.h stamp-h1

AR = ar
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
Amesos_Parameter_List.$(OBJEXT): $(srcdir)/Amesos_Parameter_List.cpp
Amesos_Parameter_Entry.$(OBJEXT): $(srcdir)/Amesos_Parameter_Entry.cpp
DscpackOO.$(OBJEXT): $(srcdir)/DscpackOO.cpp
Amesos_Dscpack.$(OBJEXT): $(srcdir)/Amesos_Dscpack.cpp
btf.$(OBJEXT): $(srcdir)/klu/btf.f
mc21a.$(OBJEXT): $(srcdir)/klu/mc21a.f
mc21b.$(OBJEXT): $(srcdir)/klu/mc21b.f
mc13e.$(OBJEXT): $(srcdir)/klu/mc13e.f
mc13d.$(OBJEXT): $(srcdir)/klu/mc13d.f
klu_btf_factor.$(OBJEXT): $(srcdir)/klu/klu_btf_factor.c
klu_btf_free_symbolic.$(OBJEXT): $(srcdir)/klu/klu_btf_free_symbolic.c
klu_btf_free_numeric.$(OBJEXT): $(srcdir)/klu/klu_btf_free_numeric.c
klu_btf_refactor.$(OBJEXT): $(srcdir)/klu/klu_btf_refactor.c
klu_btf_scale.$(OBJEXT): $(srcdir)/klu/klu_btf_scale.c
klu_btf_solve.$(OBJEXT): $(srcdir)/klu/klu_btf_solve.c
klu_btf_analyze.$(OBJEXT): $(srcdir)/klu/klu_btf_analyze.c
klu_dump.$(OBJEXT): $(srcdir)/klu/klu_dump.c
cbtf.$(OBJEXT): $(srcdir)/klu/cbtf.c
Amesos_Klu.$(OBJEXT): $(srcdir)/Amesos_Klu.cpp
klu.$(OBJEXT): $(srcdir)/klu/klu.c
klu_kernel.$(OBJEXT): $(srcdir)/klu/klu_kernel.c
klu_noprune_kernel.$(OBJEXT): $(srcdir)/klu/klu_noprune_kernel.c
Amesos_Umfpack.$(OBJEXT): $(srcdir)/Amesos_Umfpack.cpp
Amesos_Mumps.$(OBJEXT): $(srcdir)/Amesos_Mumps.cpp
Amesos_Factory.$(OBJEXT): $(srcdir)/Amesos_Factory.cpp
Amesos_Superludist.$(OBJEXT): $(srcdir)/Amesos_Superludist.cpp
SuperludistOO.$(OBJEXT): $(srcdir)/SuperludistOO.cpp
Superludist2_OO.$(OBJEXT): $(srcdir)/Superludist2_OO.cpp
Epetra_SLU.$(OBJEXT): $(srcdir)/Epetra_SLU.cpp
Epetra_CrsKundertSparse.$(OBJEXT): $(srcdir)/Epetra_CrsKundertSparse.cpp
alloc.$(OBJEXT): $(srcdir)/ksparse/alloc.c
smplinkrows.$(OBJEXT): $(srcdir)/ksparse/smplinkrows.c
spbuild.$(OBJEXT): $(srcdir)/ksparse/spbuild.c
spoutput.$(OBJEXT): $(srcdir)/ksparse/spoutput.c
spsolve.$(OBJEXT): $(srcdir)/ksparse/spsolve.c
driver.$(OBJEXT): $(srcdir)/ksparse/driver.c
spalloc.$(OBJEXT): $(srcdir)/ksparse/spalloc.c
spfactor.$(OBJEXT): $(srcdir)/ksparse/spfactor.c
spsmp.$(OBJEXT): $(srcdir)/ksparse/spsmp.c
sputils.$(OBJEXT): $(srcdir)/ksparse/sputils.c
CrsMatrixTranspose.$(OBJEXT): $(srcdir)/CrsMatrixTranspose.cpp
libamesos.a: $(libamesos_a_OBJECTS) $(libamesos_a_DEPENDENCIES) 
	-rm -f libamesos.a
	$(libamesos_a_AR) libamesos.a $(libamesos_a_OBJECTS) $(libamesos_a_LIBADD)
	$(RANLIB) libamesos.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Amesos_Dscpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Amesos_Factory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Amesos_Klu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Amesos_Mumps.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Amesos_Parameter_Entry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Amesos_Parameter_List.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Amesos_Superludist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Amesos_Umfpack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CrsMatrixTranspose.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DscpackOO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_CrsKundertSparse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Epetra_SLU.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Superludist2_OO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SuperludistOO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/alloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cbtf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/driver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_btf_analyze.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_btf_factor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_btf_free_numeric.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_btf_free_symbolic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_btf_refactor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_btf_scale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_btf_solve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_dump.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_kernel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/klu_noprune_kernel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smplinkrows.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spalloc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spbuild.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spfactor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spoutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spsmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/spsolve.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sputils.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(COMPILE) -c `cygpath -w $<`

klu_btf_factor.o: $(srcdir)/klu/klu_btf_factor.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_factor.c' object='klu_btf_factor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_factor.Po' tmpdepfile='$(DEPDIR)/klu_btf_factor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_factor.o `test -f '$(srcdir)/klu/klu_btf_factor.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_btf_factor.c

klu_btf_factor.obj: $(srcdir)/klu/klu_btf_factor.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_factor.c' object='klu_btf_factor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_factor.Po' tmpdepfile='$(DEPDIR)/klu_btf_factor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_factor.obj `cygpath -w $(srcdir)/klu/klu_btf_factor.c`

klu_btf_free_symbolic.o: $(srcdir)/klu/klu_btf_free_symbolic.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_free_symbolic.c' object='klu_btf_free_symbolic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_free_symbolic.Po' tmpdepfile='$(DEPDIR)/klu_btf_free_symbolic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_free_symbolic.o `test -f '$(srcdir)/klu/klu_btf_free_symbolic.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_btf_free_symbolic.c

klu_btf_free_symbolic.obj: $(srcdir)/klu/klu_btf_free_symbolic.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_free_symbolic.c' object='klu_btf_free_symbolic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_free_symbolic.Po' tmpdepfile='$(DEPDIR)/klu_btf_free_symbolic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_free_symbolic.obj `cygpath -w $(srcdir)/klu/klu_btf_free_symbolic.c`

klu_btf_free_numeric.o: $(srcdir)/klu/klu_btf_free_numeric.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_free_numeric.c' object='klu_btf_free_numeric.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_free_numeric.Po' tmpdepfile='$(DEPDIR)/klu_btf_free_numeric.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_free_numeric.o `test -f '$(srcdir)/klu/klu_btf_free_numeric.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_btf_free_numeric.c

klu_btf_free_numeric.obj: $(srcdir)/klu/klu_btf_free_numeric.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_free_numeric.c' object='klu_btf_free_numeric.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_free_numeric.Po' tmpdepfile='$(DEPDIR)/klu_btf_free_numeric.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_free_numeric.obj `cygpath -w $(srcdir)/klu/klu_btf_free_numeric.c`

klu_btf_refactor.o: $(srcdir)/klu/klu_btf_refactor.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_refactor.c' object='klu_btf_refactor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_refactor.Po' tmpdepfile='$(DEPDIR)/klu_btf_refactor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_refactor.o `test -f '$(srcdir)/klu/klu_btf_refactor.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_btf_refactor.c

klu_btf_refactor.obj: $(srcdir)/klu/klu_btf_refactor.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_refactor.c' object='klu_btf_refactor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_refactor.Po' tmpdepfile='$(DEPDIR)/klu_btf_refactor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_refactor.obj `cygpath -w $(srcdir)/klu/klu_btf_refactor.c`

klu_btf_scale.o: $(srcdir)/klu/klu_btf_scale.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_scale.c' object='klu_btf_scale.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_scale.Po' tmpdepfile='$(DEPDIR)/klu_btf_scale.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_scale.o `test -f '$(srcdir)/klu/klu_btf_scale.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_btf_scale.c

klu_btf_scale.obj: $(srcdir)/klu/klu_btf_scale.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_scale.c' object='klu_btf_scale.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_scale.Po' tmpdepfile='$(DEPDIR)/klu_btf_scale.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_scale.obj `cygpath -w $(srcdir)/klu/klu_btf_scale.c`

klu_btf_solve.o: $(srcdir)/klu/klu_btf_solve.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_solve.c' object='klu_btf_solve.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_solve.Po' tmpdepfile='$(DEPDIR)/klu_btf_solve.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_solve.o `test -f '$(srcdir)/klu/klu_btf_solve.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_btf_solve.c

klu_btf_solve.obj: $(srcdir)/klu/klu_btf_solve.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_solve.c' object='klu_btf_solve.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_solve.Po' tmpdepfile='$(DEPDIR)/klu_btf_solve.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_solve.obj `cygpath -w $(srcdir)/klu/klu_btf_solve.c`

klu_btf_analyze.o: $(srcdir)/klu/klu_btf_analyze.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_analyze.c' object='klu_btf_analyze.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_analyze.Po' tmpdepfile='$(DEPDIR)/klu_btf_analyze.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_analyze.o `test -f '$(srcdir)/klu/klu_btf_analyze.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_btf_analyze.c

klu_btf_analyze.obj: $(srcdir)/klu/klu_btf_analyze.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_btf_analyze.c' object='klu_btf_analyze.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_btf_analyze.Po' tmpdepfile='$(DEPDIR)/klu_btf_analyze.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_btf_analyze.obj `cygpath -w $(srcdir)/klu/klu_btf_analyze.c`

klu_dump.o: $(srcdir)/klu/klu_dump.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_dump.c' object='klu_dump.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_dump.Po' tmpdepfile='$(DEPDIR)/klu_dump.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_dump.o `test -f '$(srcdir)/klu/klu_dump.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_dump.c

klu_dump.obj: $(srcdir)/klu/klu_dump.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_dump.c' object='klu_dump.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_dump.Po' tmpdepfile='$(DEPDIR)/klu_dump.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_dump.obj `cygpath -w $(srcdir)/klu/klu_dump.c`

cbtf.o: $(srcdir)/klu/cbtf.c
@AMDEP_TRUE@	source='$(srcdir)/klu/cbtf.c' object='cbtf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/cbtf.Po' tmpdepfile='$(DEPDIR)/cbtf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cbtf.o `test -f '$(srcdir)/klu/cbtf.c' || echo '$(srcdir)/'`$(srcdir)/klu/cbtf.c

cbtf.obj: $(srcdir)/klu/cbtf.c
@AMDEP_TRUE@	source='$(srcdir)/klu/cbtf.c' object='cbtf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/cbtf.Po' tmpdepfile='$(DEPDIR)/cbtf.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o cbtf.obj `cygpath -w $(srcdir)/klu/cbtf.c`

klu.o: $(srcdir)/klu/klu.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu.c' object='klu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu.Po' tmpdepfile='$(DEPDIR)/klu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu.o `test -f '$(srcdir)/klu/klu.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu.c

klu.obj: $(srcdir)/klu/klu.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu.c' object='klu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu.Po' tmpdepfile='$(DEPDIR)/klu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu.obj `cygpath -w $(srcdir)/klu/klu.c`

klu_kernel.o: $(srcdir)/klu/klu_kernel.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_kernel.c' object='klu_kernel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_kernel.Po' tmpdepfile='$(DEPDIR)/klu_kernel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_kernel.o `test -f '$(srcdir)/klu/klu_kernel.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_kernel.c

klu_kernel.obj: $(srcdir)/klu/klu_kernel.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_kernel.c' object='klu_kernel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_kernel.Po' tmpdepfile='$(DEPDIR)/klu_kernel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_kernel.obj `cygpath -w $(srcdir)/klu/klu_kernel.c`

klu_noprune_kernel.o: $(srcdir)/klu/klu_noprune_kernel.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_noprune_kernel.c' object='klu_noprune_kernel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_noprune_kernel.Po' tmpdepfile='$(DEPDIR)/klu_noprune_kernel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_noprune_kernel.o `test -f '$(srcdir)/klu/klu_noprune_kernel.c' || echo '$(srcdir)/'`$(srcdir)/klu/klu_noprune_kernel.c

klu_noprune_kernel.obj: $(srcdir)/klu/klu_noprune_kernel.c
@AMDEP_TRUE@	source='$(srcdir)/klu/klu_noprune_kernel.c' object='klu_noprune_kernel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/klu_noprune_kernel.Po' tmpdepfile='$(DEPDIR)/klu_noprune_kernel.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o klu_noprune_kernel.obj `cygpath -w $(srcdir)/klu/klu_noprune_kernel.c`

alloc.o: $(srcdir)/ksparse/alloc.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/alloc.c' object='alloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/alloc.Po' tmpdepfile='$(DEPDIR)/alloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alloc.o `test -f '$(srcdir)/ksparse/alloc.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/alloc.c

alloc.obj: $(srcdir)/ksparse/alloc.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/alloc.c' object='alloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/alloc.Po' tmpdepfile='$(DEPDIR)/alloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o alloc.obj `cygpath -w $(srcdir)/ksparse/alloc.c`

smplinkrows.o: $(srcdir)/ksparse/smplinkrows.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/smplinkrows.c' object='smplinkrows.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/smplinkrows.Po' tmpdepfile='$(DEPDIR)/smplinkrows.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smplinkrows.o `test -f '$(srcdir)/ksparse/smplinkrows.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/smplinkrows.c

smplinkrows.obj: $(srcdir)/ksparse/smplinkrows.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/smplinkrows.c' object='smplinkrows.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/smplinkrows.Po' tmpdepfile='$(DEPDIR)/smplinkrows.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o smplinkrows.obj `cygpath -w $(srcdir)/ksparse/smplinkrows.c`

spbuild.o: $(srcdir)/ksparse/spbuild.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spbuild.c' object='spbuild.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spbuild.Po' tmpdepfile='$(DEPDIR)/spbuild.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spbuild.o `test -f '$(srcdir)/ksparse/spbuild.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/spbuild.c

spbuild.obj: $(srcdir)/ksparse/spbuild.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spbuild.c' object='spbuild.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spbuild.Po' tmpdepfile='$(DEPDIR)/spbuild.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spbuild.obj `cygpath -w $(srcdir)/ksparse/spbuild.c`

spoutput.o: $(srcdir)/ksparse/spoutput.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spoutput.c' object='spoutput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spoutput.Po' tmpdepfile='$(DEPDIR)/spoutput.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spoutput.o `test -f '$(srcdir)/ksparse/spoutput.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/spoutput.c

spoutput.obj: $(srcdir)/ksparse/spoutput.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spoutput.c' object='spoutput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spoutput.Po' tmpdepfile='$(DEPDIR)/spoutput.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spoutput.obj `cygpath -w $(srcdir)/ksparse/spoutput.c`

spsolve.o: $(srcdir)/ksparse/spsolve.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spsolve.c' object='spsolve.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spsolve.Po' tmpdepfile='$(DEPDIR)/spsolve.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spsolve.o `test -f '$(srcdir)/ksparse/spsolve.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/spsolve.c

spsolve.obj: $(srcdir)/ksparse/spsolve.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spsolve.c' object='spsolve.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spsolve.Po' tmpdepfile='$(DEPDIR)/spsolve.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spsolve.obj `cygpath -w $(srcdir)/ksparse/spsolve.c`

driver.o: $(srcdir)/ksparse/driver.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/driver.c' object='driver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/driver.Po' tmpdepfile='$(DEPDIR)/driver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o driver.o `test -f '$(srcdir)/ksparse/driver.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/driver.c

driver.obj: $(srcdir)/ksparse/driver.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/driver.c' object='driver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/driver.Po' tmpdepfile='$(DEPDIR)/driver.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o driver.obj `cygpath -w $(srcdir)/ksparse/driver.c`

spalloc.o: $(srcdir)/ksparse/spalloc.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spalloc.c' object='spalloc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spalloc.Po' tmpdepfile='$(DEPDIR)/spalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spalloc.o `test -f '$(srcdir)/ksparse/spalloc.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/spalloc.c

spalloc.obj: $(srcdir)/ksparse/spalloc.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spalloc.c' object='spalloc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spalloc.Po' tmpdepfile='$(DEPDIR)/spalloc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spalloc.obj `cygpath -w $(srcdir)/ksparse/spalloc.c`

spfactor.o: $(srcdir)/ksparse/spfactor.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spfactor.c' object='spfactor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spfactor.Po' tmpdepfile='$(DEPDIR)/spfactor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spfactor.o `test -f '$(srcdir)/ksparse/spfactor.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/spfactor.c

spfactor.obj: $(srcdir)/ksparse/spfactor.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spfactor.c' object='spfactor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spfactor.Po' tmpdepfile='$(DEPDIR)/spfactor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spfactor.obj `cygpath -w $(srcdir)/ksparse/spfactor.c`

spsmp.o: $(srcdir)/ksparse/spsmp.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spsmp.c' object='spsmp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spsmp.Po' tmpdepfile='$(DEPDIR)/spsmp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spsmp.o `test -f '$(srcdir)/ksparse/spsmp.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/spsmp.c

spsmp.obj: $(srcdir)/ksparse/spsmp.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/spsmp.c' object='spsmp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/spsmp.Po' tmpdepfile='$(DEPDIR)/spsmp.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o spsmp.obj `cygpath -w $(srcdir)/ksparse/spsmp.c`

sputils.o: $(srcdir)/ksparse/sputils.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/sputils.c' object='sputils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sputils.Po' tmpdepfile='$(DEPDIR)/sputils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sputils.o `test -f '$(srcdir)/ksparse/sputils.c' || echo '$(srcdir)/'`$(srcdir)/ksparse/sputils.c

sputils.obj: $(srcdir)/ksparse/sputils.c
@AMDEP_TRUE@	source='$(srcdir)/ksparse/sputils.c' object='sputils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/sputils.Po' tmpdepfile='$(DEPDIR)/sputils.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sputils.obj `cygpath -w $(srcdir)/ksparse/sputils.c`
CCDEPMODE = @CCDEPMODE@

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

Amesos_Parameter_List.o: $(srcdir)/Amesos_Parameter_List.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Parameter_List.cpp' object='Amesos_Parameter_List.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Parameter_List.Po' tmpdepfile='$(DEPDIR)/Amesos_Parameter_List.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Parameter_List.o `test -f '$(srcdir)/Amesos_Parameter_List.cpp' || echo '$(srcdir)/'`$(srcdir)/Amesos_Parameter_List.cpp

Amesos_Parameter_List.obj: $(srcdir)/Amesos_Parameter_List.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Parameter_List.cpp' object='Amesos_Parameter_List.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Parameter_List.Po' tmpdepfile='$(DEPDIR)/Amesos_Parameter_List.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Parameter_List.obj `cygpath -w $(srcdir)/Amesos_Parameter_List.cpp`

Amesos_Parameter_Entry.o: $(srcdir)/Amesos_Parameter_Entry.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Parameter_Entry.cpp' object='Amesos_Parameter_Entry.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Parameter_Entry.Po' tmpdepfile='$(DEPDIR)/Amesos_Parameter_Entry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Parameter_Entry.o `test -f '$(srcdir)/Amesos_Parameter_Entry.cpp' || echo '$(srcdir)/'`$(srcdir)/Amesos_Parameter_Entry.cpp

Amesos_Parameter_Entry.obj: $(srcdir)/Amesos_Parameter_Entry.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Parameter_Entry.cpp' object='Amesos_Parameter_Entry.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Parameter_Entry.Po' tmpdepfile='$(DEPDIR)/Amesos_Parameter_Entry.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Parameter_Entry.obj `cygpath -w $(srcdir)/Amesos_Parameter_Entry.cpp`

DscpackOO.o: $(srcdir)/DscpackOO.cpp
@AMDEP_TRUE@	source='$(srcdir)/DscpackOO.cpp' object='DscpackOO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DscpackOO.Po' tmpdepfile='$(DEPDIR)/DscpackOO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DscpackOO.o `test -f '$(srcdir)/DscpackOO.cpp' || echo '$(srcdir)/'`$(srcdir)/DscpackOO.cpp

DscpackOO.obj: $(srcdir)/DscpackOO.cpp
@AMDEP_TRUE@	source='$(srcdir)/DscpackOO.cpp' object='DscpackOO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DscpackOO.Po' tmpdepfile='$(DEPDIR)/DscpackOO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DscpackOO.obj `cygpath -w $(srcdir)/DscpackOO.cpp`

Amesos_Dscpack.o: $(srcdir)/Amesos_Dscpack.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Dscpack.cpp' object='Amesos_Dscpack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Dscpack.Po' tmpdepfile='$(DEPDIR)/Amesos_Dscpack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Dscpack.o `test -f '$(srcdir)/Amesos_Dscpack.cpp' || echo '$(srcdir)/'`$(srcdir)/Amesos_Dscpack.cpp

Amesos_Dscpack.obj: $(srcdir)/Amesos_Dscpack.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Dscpack.cpp' object='Amesos_Dscpack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Dscpack.Po' tmpdepfile='$(DEPDIR)/Amesos_Dscpack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Dscpack.obj `cygpath -w $(srcdir)/Amesos_Dscpack.cpp`

Amesos_Klu.o: $(srcdir)/Amesos_Klu.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Klu.cpp' object='Amesos_Klu.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Klu.Po' tmpdepfile='$(DEPDIR)/Amesos_Klu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Klu.o `test -f '$(srcdir)/Amesos_Klu.cpp' || echo '$(srcdir)/'`$(srcdir)/Amesos_Klu.cpp

Amesos_Klu.obj: $(srcdir)/Amesos_Klu.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Klu.cpp' object='Amesos_Klu.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Klu.Po' tmpdepfile='$(DEPDIR)/Amesos_Klu.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Klu.obj `cygpath -w $(srcdir)/Amesos_Klu.cpp`

Amesos_Umfpack.o: $(srcdir)/Amesos_Umfpack.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Umfpack.cpp' object='Amesos_Umfpack.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Umfpack.Po' tmpdepfile='$(DEPDIR)/Amesos_Umfpack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Umfpack.o `test -f '$(srcdir)/Amesos_Umfpack.cpp' || echo '$(srcdir)/'`$(srcdir)/Amesos_Umfpack.cpp

Amesos_Umfpack.obj: $(srcdir)/Amesos_Umfpack.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Umfpack.cpp' object='Amesos_Umfpack.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Umfpack.Po' tmpdepfile='$(DEPDIR)/Amesos_Umfpack.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Umfpack.obj `cygpath -w $(srcdir)/Amesos_Umfpack.cpp`

Amesos_Mumps.o: $(srcdir)/Amesos_Mumps.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Mumps.cpp' object='Amesos_Mumps.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Mumps.Po' tmpdepfile='$(DEPDIR)/Amesos_Mumps.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Mumps.o `test -f '$(srcdir)/Amesos_Mumps.cpp' || echo '$(srcdir)/'`$(srcdir)/Amesos_Mumps.cpp

Amesos_Mumps.obj: $(srcdir)/Amesos_Mumps.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Mumps.cpp' object='Amesos_Mumps.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Mumps.Po' tmpdepfile='$(DEPDIR)/Amesos_Mumps.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Mumps.obj `cygpath -w $(srcdir)/Amesos_Mumps.cpp`

Amesos_Factory.o: $(srcdir)/Amesos_Factory.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Factory.cpp' object='Amesos_Factory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Factory.Po' tmpdepfile='$(DEPDIR)/Amesos_Factory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Factory.o `test -f '$(srcdir)/Amesos_Factory.cpp' || echo '$(srcdir)/'`$(srcdir)/Amesos_Factory.cpp

Amesos_Factory.obj: $(srcdir)/Amesos_Factory.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Factory.cpp' object='Amesos_Factory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Factory.Po' tmpdepfile='$(DEPDIR)/Amesos_Factory.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Factory.obj `cygpath -w $(srcdir)/Amesos_Factory.cpp`

Amesos_Superludist.o: $(srcdir)/Amesos_Superludist.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Superludist.cpp' object='Amesos_Superludist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Superludist.Po' tmpdepfile='$(DEPDIR)/Amesos_Superludist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Superludist.o `test -f '$(srcdir)/Amesos_Superludist.cpp' || echo '$(srcdir)/'`$(srcdir)/Amesos_Superludist.cpp

Amesos_Superludist.obj: $(srcdir)/Amesos_Superludist.cpp
@AMDEP_TRUE@	source='$(srcdir)/Amesos_Superludist.cpp' object='Amesos_Superludist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Amesos_Superludist.Po' tmpdepfile='$(DEPDIR)/Amesos_Superludist.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Amesos_Superludist.obj `cygpath -w $(srcdir)/Amesos_Superludist.cpp`

SuperludistOO.o: $(srcdir)/SuperludistOO.cpp
@AMDEP_TRUE@	source='$(srcdir)/SuperludistOO.cpp' object='SuperludistOO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SuperludistOO.Po' tmpdepfile='$(DEPDIR)/SuperludistOO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SuperludistOO.o `test -f '$(srcdir)/SuperludistOO.cpp' || echo '$(srcdir)/'`$(srcdir)/SuperludistOO.cpp

SuperludistOO.obj: $(srcdir)/SuperludistOO.cpp
@AMDEP_TRUE@	source='$(srcdir)/SuperludistOO.cpp' object='SuperludistOO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/SuperludistOO.Po' tmpdepfile='$(DEPDIR)/SuperludistOO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SuperludistOO.obj `cygpath -w $(srcdir)/SuperludistOO.cpp`

Superludist2_OO.o: $(srcdir)/Superludist2_OO.cpp
@AMDEP_TRUE@	source='$(srcdir)/Superludist2_OO.cpp' object='Superludist2_OO.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Superludist2_OO.Po' tmpdepfile='$(DEPDIR)/Superludist2_OO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Superludist2_OO.o `test -f '$(srcdir)/Superludist2_OO.cpp' || echo '$(srcdir)/'`$(srcdir)/Superludist2_OO.cpp

Superludist2_OO.obj: $(srcdir)/Superludist2_OO.cpp
@AMDEP_TRUE@	source='$(srcdir)/Superludist2_OO.cpp' object='Superludist2_OO.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Superludist2_OO.Po' tmpdepfile='$(DEPDIR)/Superludist2_OO.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Superludist2_OO.obj `cygpath -w $(srcdir)/Superludist2_OO.cpp`

Epetra_SLU.o: $(srcdir)/Epetra_SLU.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SLU.cpp' object='Epetra_SLU.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SLU.Po' tmpdepfile='$(DEPDIR)/Epetra_SLU.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SLU.o `test -f '$(srcdir)/Epetra_SLU.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_SLU.cpp

Epetra_SLU.obj: $(srcdir)/Epetra_SLU.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_SLU.cpp' object='Epetra_SLU.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_SLU.Po' tmpdepfile='$(DEPDIR)/Epetra_SLU.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_SLU.obj `cygpath -w $(srcdir)/Epetra_SLU.cpp`

Epetra_CrsKundertSparse.o: $(srcdir)/Epetra_CrsKundertSparse.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsKundertSparse.cpp' object='Epetra_CrsKundertSparse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsKundertSparse.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsKundertSparse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsKundertSparse.o `test -f '$(srcdir)/Epetra_CrsKundertSparse.cpp' || echo '$(srcdir)/'`$(srcdir)/Epetra_CrsKundertSparse.cpp

Epetra_CrsKundertSparse.obj: $(srcdir)/Epetra_CrsKundertSparse.cpp
@AMDEP_TRUE@	source='$(srcdir)/Epetra_CrsKundertSparse.cpp' object='Epetra_CrsKundertSparse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Epetra_CrsKundertSparse.Po' tmpdepfile='$(DEPDIR)/Epetra_CrsKundertSparse.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Epetra_CrsKundertSparse.obj `cygpath -w $(srcdir)/Epetra_CrsKundertSparse.cpp`

CrsMatrixTranspose.o: $(srcdir)/CrsMatrixTranspose.cpp
@AMDEP_TRUE@	source='$(srcdir)/CrsMatrixTranspose.cpp' object='CrsMatrixTranspose.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CrsMatrixTranspose.Po' tmpdepfile='$(DEPDIR)/CrsMatrixTranspose.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CrsMatrixTranspose.o `test -f '$(srcdir)/CrsMatrixTranspose.cpp' || echo '$(srcdir)/'`$(srcdir)/CrsMatrixTranspose.cpp

CrsMatrixTranspose.obj: $(srcdir)/CrsMatrixTranspose.cpp
@AMDEP_TRUE@	source='$(srcdir)/CrsMatrixTranspose.cpp' object='CrsMatrixTranspose.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CrsMatrixTranspose.Po' tmpdepfile='$(DEPDIR)/CrsMatrixTranspose.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CrsMatrixTranspose.obj `cygpath -w $(srcdir)/CrsMatrixTranspose.cpp`
CXXDEPMODE = @CXXDEPMODE@

.f.o:
	$(F77COMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.f.obj:
	$(F77COMPILE) -c -o $@ `cygpath -w $<`

btf.o: $(srcdir)/klu/btf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o btf.o `test -f '$(srcdir)/klu/btf.f' || echo '$(srcdir)/'`$(srcdir)/klu/btf.f

btf.obj: $(srcdir)/klu/btf.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o btf.obj `cygpath -w $(srcdir)/klu/btf.f`

mc21a.o: $(srcdir)/klu/mc21a.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mc21a.o `test -f '$(srcdir)/klu/mc21a.f' || echo '$(srcdir)/'`$(srcdir)/klu/mc21a.f

mc21a.obj: $(srcdir)/klu/mc21a.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mc21a.obj `cygpath -w $(srcdir)/klu/mc21a.f`

mc21b.o: $(srcdir)/klu/mc21b.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mc21b.o `test -f '$(srcdir)/klu/mc21b.f' || echo '$(srcdir)/'`$(srcdir)/klu/mc21b.f

mc21b.obj: $(srcdir)/klu/mc21b.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mc21b.obj `cygpath -w $(srcdir)/klu/mc21b.f`

mc13e.o: $(srcdir)/klu/mc13e.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mc13e.o `test -f '$(srcdir)/klu/mc13e.f' || echo '$(srcdir)/'`$(srcdir)/klu/mc13e.f

mc13e.obj: $(srcdir)/klu/mc13e.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mc13e.obj `cygpath -w $(srcdir)/klu/mc13e.f`

mc13d.o: $(srcdir)/klu/mc13d.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mc13d.o `test -f '$(srcdir)/klu/mc13d.f' || echo '$(srcdir)/'`$(srcdir)/klu/mc13d.f

mc13d.obj: $(srcdir)/klu/mc13d.f
	$(F77) $(AM_FFLAGS) $(FFLAGS) -c -o mc13d.obj `cygpath -w $(srcdir)/klu/mc13d.f`
uninstall-info-am:
includeHEADERS_INSTALL = $(INSTALL_HEADER)
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(includedir)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f"; \
	  $(includeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(includedir)/$$f; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(includedir)/$$f"; \
	  rm -f $(DESTDIR)$(includedir)/$$f; \
	done
nodist_execincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-nodist_execincludeHEADERS: $(nodist_execinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(execincludedir)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(nodist_execincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(execincludedir)/$$f"; \
	  $(nodist_execincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(execincludedir)/$$f; \
	done

uninstall-nodist_execincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_execinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(execincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(execincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) Amesos_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) Amesos_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	$(mkinstalldirs) $(distdir)/$(srcdir) $(distdir)/$(srcdir)/klu
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS) Amesos_config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(includedir) $(DESTDIR)$(execincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-libLIBRARIES install-nodist_execincludeHEADERS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_execincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES distclean distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man \
	install-nodist_execincludeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES uninstall-nodist_execincludeHEADERS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
