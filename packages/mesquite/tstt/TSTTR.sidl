import TSTTB;

package TSTTR version 0.01
{

//This file shows the high level organization of the methods into
//interface groupings and classes

//===========================================================================
//  Fundamental interface from which all associate related interfaces inherit.
//===========================================================================
/**
 * This serves as a base interface for all the TSTTB associate query interfaces.
 * This interface does not have any methods.
 */
  interface Relate {

//==========================relateAllEntities====================
/**
 *   make relations between all geometry entities and corresponding
 *   mesh entity sets 
 */
    void relateAllEntities(in opaque geom,
                           in opaque mesh)
      throws TSTTB.Error;


//==========================relateGeomEntities====================
/**
 *   make relations between geometry entities and corresponding
 *   mesh entity sets
 */
    void relateGeomEntities(in opaque geom, in opaque mesh,
                            in array<opaque> geom_handles,
                            in int geom_handles_size)
      throws TSTTB.Error;


//==========================relateMeshEntities====================
/**
 *   make relations between mesh entity sets for geometry entities
 *   and corresponding geometry entities
 */
    void relateMeshEntities(in opaque geom, in opaque mesh,
	                    in array<opaque> mesh_handles,
                            in int mesh_handles_size)
      throws TSTTB.Error;


//==========================getGeomRelatedEntities====================
/**
 *   get related mesh entity sets of requested geometry entities
 */
    void getGeomRelatedEntities(in opaque geom, in opaque mesh,
                                in array<opaque> from_geom_handles,
                                in int from_geom_handles_size,
                                inout array<opaque> to_mesh_handles,
                                inout int to_mesh_handles_size)
      throws TSTTB.Error;

//==========================getGeomOwnedMesh====================
/**
 *   get related mesh entities of requested geometry entities
 */
    void getGeomOwnedMesh(in opaque geom, in opaque mesh,
                          in opaque from_geom_handle,
                          in int requested_mesh_entity_dim,
                          inout array<opaque> to_mesh_handles,
                          inout int to_mesh_handles_size)
      throws TSTTB.Error;

//==========================getMeshRelatedEntities====================
/**
 *   get related geometry entities of requested mesh entities
 */
    void getMeshRelatedEntities(in opaque geom, in opaque mesh,
                                in array<opaque> from_mesh_handles,
                                in int from_mesh_handles_size,
                                inout array<opaque> to_geom_handles,
                                inout int to_geom_handles_size)
      throws TSTTB.Error;

//==========================getMeshSetRelatedEntities====================
/**
 *   get related geometry entities of requested mesh entity sets
 */
    void getMeshSetRelatedEntities(in opaque geom, in opaque mesh,
                                   in array<opaque> from_mesh_handles,
                                   in int from_mesh_handles_size,
                                   inout array<opaque> to_geom_handles,
                                   inout int to_geom_handles_size)
      throws TSTTB.Error;

//==========================moveTo====================
/**
 *   move mesh on a geometry entity to that entity
 */
    void moveTo(in opaque geom, in opaque mesh,
                in opaque geom_entity_handle)
      throws TSTTB.Error;

//==========================removeRelations====================
/**
 *   remove relations data between geometry and mesh
 */
    void removeRelations(in opaque geom, in opaque mesh)
      throws TSTTB.Error;
  }

}  // end of TSTTR package




