//========================================================
// TSTT UTITLIES COMMON ACROSS INTERFACES
//   ERRORS, TAGS
//========================================================

package TSTT version 0.6
{

   enum ErrorActions {
      SILENT,
      WARN_ONLY,		 
      ABORT_ON_ERROR,
      PRINT_AND_THROW_ERROR, 
      THROW_ERROR		 
   };


   enum ErrorType {
      SUCCESS,	
      MESH_ALREADY_LOADED,	
      NO_MESH_DATA,	
      FILE_NOT_FOUND,	
      FILE_WRITE_ERROR,	
      NIL_ARRAY,	
      BAD_ARRAY_SIZE,	
      BAD_ARRAY_DIMENSION,	
      INVALID_ENTITY_HANDLE,	
      INVALID_ENTITY_COUNT,	
      INVALID_ENTITY_TYPE,	
      INVALID_ENTITY_TOPOLOGY,
      BAD_TYPE_AND_TOPO,	
      ENTITY_CREATION_ERROR,
      INVALID_TAG_HANDLE,
      TAG_NOT_FOUND,	
      TAG_ALREADY_EXISTS,
      TAG_IN_USE,
      INVALID_ENTITYSET_HANDLE,	
      INVALID_ITERATOR_HANDLE,	
      INVALID_ARGUMENT,	
      MEMORY_ALLOCATION_FAILED,
      NOT_SUPPORTED,	
      FAILURE	
   }; 


   class Error extends sidl.SIDLException {
      void set(in ErrorType error, in string description);
      ErrorType getErrorType();
      void get(out ErrorType err, out string description);
      void getDescription(out string description);
      void echo(in string label);
   };


   enum TagValueType {
      INTEGER,
      DOUBLE,
      BOOLEAN,
      ENTITY_HANDLE,
      OPAQUE 
   };


   //====================================================
   //  BASCI TAG FUNCTIONALITY
   //====================================================
   interface Tag {
      void createTag(in string tag_name, in int tag_size,
                     in TagValueType tag_type,
                     out opaque tag_handle) throws Error;
      void destroyTag(in opaque tag_handle, in bool forced) throws Error;
      string getTagName(in opaque tag_handle) throws Error;
      int getTagSize(in opaque tag_handle) throws Error;
      opaque getTagHandle(in string tag_name) throws Error;
      TagValueType getTagType(in opaque tag_handle) throws Error;
   };


   //====================================================
   //  ENTITY TAGS
   //====================================================
   interface EntTag extends Tag {
      void getData( in opaque entity_handle, 
                    in opaque tag_handle,
                    inout array<opaque> tag_value,
                    out int tag_value_size,
                    out int tag_size) throws Error;
      int getIntData( in opaque entity_handle, 
                      in opaque tag_handle) throws Error;
      double getDblData( in opaque entity_handle, 
                         in opaque tag_handle) throws Error;
      bool getBoolData( in opaque entity_handle, 
                        in opaque tag_handle) throws Error;
      opaque getEHData( in opaque entity_handle, 
                        in opaque tag_handle) throws Error;
      void setData( in opaque entity_handle, in opaque tag_handle, 
                    in array<opaque> tag_value, in int tag_value_size,
                    in int tag_size) throws Error; 
      void setIntData( in opaque entity_handle, in opaque tag_handle, 
                       in int tag_value) throws Error; 
      void setDblData( in opaque entity_handle, in opaque tag_handle, 
                       in double tag_value) throws Error; 
      void setBoolData( in opaque entity_handle, in opaque tag_handle, 
                        in bool tag_value) throws Error;
      void setEHData( in opaque entity_handle, in opaque tag_handle,
                      in opaque tag_value) throws Error;
      void getAllTags( in opaque entity_handle, 
                       inout array<opaque> tag_handles,
                       out int tag_handles_size) throws Error;
      void rmvTag( in opaque entity_handle,
                   in opaque tag_handle) throws Error;
   };

   //====================================================
   //  ENTITY ARRAY TAGS
   //====================================================
   interface ArrTag extends Tag {
      void getArrData( in array<opaque> entity_handles, 
                        in int entity_handles_size,
                        in opaque tag_handle,
                        inout array<opaque> tag_value,
                        out int tag_value_size,
                        out int tag_size) throws TSTT.Error;
      void getIntArrData( in array<opaque> entity_handles, 
                          in int entity_handles_size,
                          in opaque tag_handle,
                          inout array<int> tag_value,
                          out int tag_value_size) throws TSTT.Error;
      void getDblArrData( in array<opaque> entity_handles, 
                          in int entity_handles_size,
                          in opaque tag_handle,
                          inout array<double> tag_value,
                          out int tag_value_size) throws TSTT.Error;
      void getBoolArrData( in array<opaque> entity_handles, 
                           in int entity_handles_size,
                           in opaque tag_handle,
                           inout array<bool> tag_value,
                           out int tag_value_size) throws TSTT.Error;
      void getEHArrData( in array<opaque> entity_handles,
                         in int entity_handles_size, 
                         in opaque tag_handle,
                         inout array<opaque> tag_value,
                         out int tag_value_size) throws TSTT.Error;
      void setArrData( in array<opaque> entity_handles, 
                       in int entity_handles_size,
                       in opaque tag_handle, 
                       in array<opaque> tag_values, 
                       in int tag_values_size,
                       in int tag_size) throws TSTT.Error;
      void setIntArrData( in array<opaque> entity_handles, 
                          in int entity_handles_size,
                          in opaque tag_handle, 
                          in array<int> tag_values, 
                          in int tag_values_size) throws TSTT.Error;
      void setDblArrData( in array<opaque> entity_handles, 
                          in int entity_handles_size,
                          in opaque tag_handle, 
                          in array<double> tag_values, 
                          in int tag_values_size) throws TSTT.Error;
      void setBoolArrData( in array<opaque> entity_handles, 
                           in int entity_handles_size,
                           in opaque tag_handle, 
                           in array<bool> tag_values, 
                           in int tag_values_size) throws TSTT.Error;
      void setEHArrData( in array<opaque> entity_handles,
                         in int entity_handles_size, 
                         in opaque tag_handle,
                         in array<opaque> tag_values, 
                         in int tag_values_size) throws TSTT.Error;
      void rmvArrTag( in array<opaque> entity_handles,
                      in int entity_handles_size,
                      in opaque tag_handle) throws TSTT.Error;
   };


   //===================================================
   // ENTITY SET TAGS
   //===================================================

   interface SetTag extends Tag {
      //tags 
      void setEntSetData( in opaque entity_set,
                          in opaque tag_handle, in array<opaque> tag_value, 
                          in int tag_value_size,
                          in int tag_size) throws TSTT.Error;
      void setEntSetIntData( in opaque entity_set,
                             in opaque tag_handle, in int tag_value)
            throws TSTT.Error;
      void setEntSetDblData( in opaque entity_set,
                             in opaque tag_handle, in double tag_value) 
            throws TSTT.Error;
      void setEntSetBoolData( in opaque entity_set,
                              in opaque tag_handle, in bool tag_value)
            throws TSTT.Error;
      void setEntSetEHData( in opaque entity_set, 
                            in opaque tag_handle, in opaque tag_value) 
            throws TSTT.Error;
      void getEntSetData( in opaque entity_set,
                          in opaque tag_handle, 
                          inout array<opaque> tag_value, 
                          inout int tag_value_size,
                          out int tag_size) throws TSTT.Error;
      int getEntSetIntData( in opaque entity_set, 
                            in opaque tag_handle) throws TSTT.Error;
      double getEntSetDblData( in opaque entity_set, 
                               in opaque tag_handle) throws TSTT.Error;
      bool getEntSetBoolData( in opaque entity_set, 
                              in opaque tag_handle) throws TSTT.Error;
      opaque getEntSetEHData( in opaque entity_set, 
                              in opaque tag_handle) throws TSTT.Error;

      void getAllEntSetTags( in opaque entity_set, 
                             inout array<opaque> tag_handles,
                             out int tag_handles_size) throws TSTT.Error;
      void rmvEntSetTag( in opaque entity_set, 
                         in opaque tag_handle) throws TSTT.Error;
   };


   interface EntSet {

      // create/destroy 
      void createEntSet( in bool isList,
                         out opaque entity_set) throws TSTT.Error;

      void destroyEntSet( in opaque entity_set) throws TSTT.Error;

      // is this set ordered?
      bool isList(in opaque entity_set) throws TSTT.Error;

      // get the entity sets
      int getNumEntSets( in opaque entity_set, 
                         in int num_hops) throws TSTT.Error;

      void getEntSets ( in opaque entity_set, in int num_hops,
                        inout array<opaque> contained_entity_set_handles,
                        out int contained_entity_set_handles_size) throws TSTT.Error;

      // add and remove entities 
      void addEntToSet(in opaque entity_handle,
                       inout opaque entity_set) throws TSTT.Error;

      void rmvEntFromSet( in opaque entity_handle,
                          inout opaque entity_set) throws TSTT.Error;

      void addEntArrToSet( in array<opaque> entity_handles,
                           in int entity_handles_size,
                           inout opaque entity_set) throws TSTT.Error;

      void rmvEntArrFromSet( in array<opaque> entity_handles,
                             in int entity_handles_size,
                             inout opaque entity_set) throws TSTT.Error;

      // add/remove entity sets
      void addEntSet( in opaque entity_set_to_add, 
                      inout opaque entity_set_handle) 
                      throws TSTT.Error;

      void rmvEntSet( in opaque entity_set_to_remove, 
                      inout opaque entity_set_handle) 
                      throws TSTT.Error;

      // check whether an entity set is contained in another
      bool isContainedIn(in opaque containing_entity_set,
			in opaque contained_entity_set) throws TSTT.Error;
   };



   interface SetRelation extends EntSet {
      void addPrntChld( inout opaque parent_entity_set, 
			inout opaque child_entity_set) throws TSTT.Error;
      void rmvPrntChld( inout opaque parent_entity_set, 
			inout opaque child_entity_set) throws TSTT.Error;

      bool isChildOf( in opaque parent_entity_set, 
		      in opaque child_entity_set) throws TSTT.Error;

      int  getNumChld( in opaque entity_set, in int num_hops) throws TSTT.Error;
      int  getNumPrnt( in opaque entity_set, in int num_hops) throws TSTT.Error;

      void getChldn( in opaque from_entity_set, in int num_hops, 
                     inout array<opaque> entity_set_handles,
                     out int entity_set_handles_size) throws TSTT.Error;
      void getPrnts( in opaque from_entity_set, in int num_hops, 
                     inout array<opaque> entity_set_handles,
                     out int entity_set_handles_size) throws TSTT.Error;
   };


   interface SetBoolOps extends EntSet {
      void subtract( in opaque entity_set_1, 
                     in opaque entity_set_2,
                     out opaque result_entity_set) throws TSTT.Error;

      void intersect( in opaque entity_set_1, 
                      in opaque entity_set_2,
                      out opaque result_entity_set) throws TSTT.Error;

      void unite( in opaque entity_set_1, 
                  in opaque entity_set_2,
                  out opaque result_entity_set) throws TSTT.Error;
   };

}  // END TSTT
