
Echoing the command-line:

./test_single_stratimikos_solver_driver.exe --echo-command-line --input-file=FourByFour.belos.ifpack.xml 

Teuchos::GlobalMPISession::GlobalMPISession(): started serial run

Reading parameters from XML file "FourByFour.belos.ifpack.xml" ...

Echoing input parameters ...
  Matrix File : string = FourByFour.mtx
  Linear Solver Builder -> 
    Linear Solver Type : string = Belos
    Preconditioner Type : string = Ifpack
  LinearOpTester -> 
    [empty list]
  LinearOpWithSolveTester -> 
    [empty list]

Validating top-level input parameters ...

Reading in an epetra matrix A from the file 'FourByFour.mtx' ...

Creating a Thyra::DefaultRealLinearSolverBuilder object ...

Valid parameters for DefaultRealLinearSolverBuilder ...
  Linear Solver Type : string = Amesos
  Preconditioner Type : string = ML
  Linear Solver Types -> 
    Amesos -> 
      Refactorization Policy : string = RepivotOnRefactorization
      Solver Type : string = Klu
      Throw on Preconditioner Input : bool = 1
      Amesos Settings -> 
        AddToDiag : double = 0
        AddZeroToDiag : bool = 0
        ComputeTrueResidual : bool = 0
        ComputeVectorNorms : bool = 0
        DebugLevel : int = 0
        MatrixProperty : string = general
        MaxProcs : int = -1
        NoDestroy : bool = 0
        OutputLevel : int = 1
        PrintTiming : bool = 0
        RcondThreshold : double = 1e-12
        Redistribute : bool = 0
        Refactorize : bool = 0
        Reindex : int = 0
        ScaleMethod : int = 0
        TrustMe : bool = 0
        Lapack -> 
          Equilibrate : bool = 1
        Mumps -> 
          ColScaling : double* = 0
          Equilibrate : bool = 1
          RowScaling : double* = 0
        Pardiso -> 
          IPARM(1) : int = 0
          IPARM(10) : int = 0
          IPARM(11) : int = 0
          IPARM(18) : int = 0
          IPARM(19) : int = 0
          IPARM(2) : int = 0
          IPARM(21) : int = 0
          IPARM(3) : int = 0
          IPARM(4) : int = 0
          IPARM(8) : int = 0
          MSGLVL : int = 0
        Scalapack -> 
          2D distribution : bool = 1
          grid_nb : int = 32
        Superludist -> 
          ColPerm : string = NOT SET
          Equil : bool = 0
          Fact : string = SamePattern
          IterRefine : string = NOT SET
          PrintNonzeros : bool = 0
          ReplaceTinyPivot : bool = 1
          ReuseSymbolic : bool = 0
          RowPerm : string = NOT SET
          perm_c : int* = 0
          perm_r : int* = 0
      VerboseObject -> 
        Output File : string = none
        Verbosity Level : string = default
    AztecOO -> 
      Output Every RHS : bool = 0
      Adjoint Solve -> 
        Max Iterations : int = 400
        Tolerance : double = 1e-06
        AztecOO Settings -> 
          Aztec Preconditioner : string = ilu
          Aztec Solver : string = GMRES
          Convergence Test : string = r0
          Drop Tolerance : double = 0
          Fill Factor : double = 1
          Graph Fill : int = 0
          Ill-Conditioning Threshold : double = 1e+11
          Orthogonalization : string = Classical
          Output Frequency : int = 0
          Overlap : int = 0
          Polynomial Order : int = 3
          RCM Reordering : string = Disabled
          Size of Krylov Subspace : int = 300
          Steps : int = 3
      Forward Solve -> 
        Max Iterations : int = 400
        Tolerance : double = 1e-06
        AztecOO Settings -> 
          Aztec Preconditioner : string = ilu
          Aztec Solver : string = GMRES
          Convergence Test : string = r0
          Drop Tolerance : double = 0
          Fill Factor : double = 1
          Graph Fill : int = 0
          Ill-Conditioning Threshold : double = 1e+11
          Orthogonalization : string = Classical
          Output Frequency : int = 0
          Overlap : int = 0
          Polynomial Order : int = 3
          RCM Reordering : string = Disabled
          Size of Krylov Subspace : int = 300
          Steps : int = 3
      VerboseObject -> 
        Output File : string = none
        Verbosity Level : string = default
    Belos -> 
      Adjustable Block Size : bool = 1
      Block Size : int = 1
      Def*** Caught standard exception : /home/rabartl/PROJECTS/Trilinos.base/Trilinos/packages/teuchos/src/Teuchos_RefCountPtr.cpp:59:

Throw test that evaluated to true: itr != extra_data_map_->end()

Error, the type:name pair 'RefCountPtr<Thyra::PreconditionerBase<double, double>>:Belos::InternalPrec' already exists and force_unique==true!
ault Rel Res Norm : double = 1e-06
      Max Iters : int = 400
      Max Restarts : int = 25
      Solver Type : string = GMRES
      GMRES -> 
        Max Number of Krylov Vectors : int = 300
        Ortho Type : string = DGKS
        Restart Timers : bool = 1
        Variant : string = Standard
      Outputter -> 
        Output Frequency : int = 10
        Output Max Res Only : bool = 1
      VerboseObject -> 
        Output File : string = none
        Verbosity Level : string = default
  Preconditioner Types -> 
    Ifpack -> 
      Overlap : int = 0
      Prec Type : string = ILU
      Ifpack Settings -> 
        amesos: solver type : string = Amesos_Klu
        fact: absolute threshold : double = 0
        fact: drop tolerance : double = 0
        fact: ict level-of-fill : double = 1
        fact: ilut level-of-fill : double = 1
        fact: level-of-fill : int = 0
        fact: relative threshold : double = 1
        fact: relax value : double = 0
        fact: sparskit: alph : double = 0
        fact: sparskit: droptol : double = 0
        fact: sparskit: lfil : int = 0
        fact: sparskit: mbloc : int = -1
        fact: sparskit: permtol : double = 0.1
        fact: sparskit: tol : double = 0
        fact: sparskit: type : string = ILUT
        partitioner: local parts : int = 1
        partitioner: overlap : int = 0
        partitioner: print level : int = 0
        partitioner: type : string = greedy
        partitioner: use symmetric graph : bool = 1
        relaxation: damping factor : double = 1
        relaxation: min diagonal value : double = 1
        relaxation: sweeps : int = 1
        relaxation: type : string = Jacobi
        relaxation: zero starting solution : bool = 1
        schwarz: combine mode : string = Zero
        schwarz: compute condest : bool = 1
        schwarz: filter singletons : bool = 0
        schwarz: reordering type : string = none
      VerboseObject -> 
        Output File : string = none
        Verbosity Level : string = default
    ML -> 
      Base Method Defaults : string = DD
      ML Settings -> 
        aggregation: damping factor : double = 1.333
        aggregation: edge prolongator drop threshold : double = 0
        aggregation: local aggregates : int = 1
        aggregation: next-level aggregates per process : int = 128
        aggregation: nodes per aggregate : int = 512
        aggregation: type : string = Uncoupled-MIS
        coarse: max size : int = 128
        coarse: type : string = Amesos-KLU
        default values : string = maxwell
        eigen-analysis: iterations : int = 10
        eigen-analysis: type : string = cg
        increasing or decreasing : string = decreasing
        max levels : int = 10
        prec type : string = MGV
        smoother: Aztec as solver : bool = 0
        smoother: Aztec options : int* = 0xb234d0
        smoother: Aztec params : double* = 0xb23d90
        smoother: Hiptmair efficient symmetric : bool = 1
        smoother: damping factor : double = 1
        smoother: pre or post : string = both
        smoother: sweeps : int = 1
        smoother: type : string = Hiptmair
        subsmoother: Chebyshev alpha : double = 27
        subsmoother: edge sweeps : int = 4
        subsmoother: node sweeps : int = 4
        subsmoother: type : string = Chebyshev

Creating the LinearOpWithSolveFactoryBase object lowsFactory ...

lowsFactory described as:
  Thyra::BelosLinearOpWithSolveFactory


Running example use cases ...
  
  Running example use cases for a LinearOpWithSolveFactoryBase object ...
    
    Performing a single linear solve ...
    
    Solve status:
      solveStatus = SOLVE_STATUS_UNKNOWN
      achievedTol = unknownTolerance()
      message: "The Belos solver of type "Belos::BlockGmres<...,double>{Variant='Standard',Ortho Type='DGKS'}" returned a solve status of "Converged" in 1 iterations and achieved an approximate max tolerance of 0 with total CPU time of 0.002527 sec"
      extraParameters: NONE
    
    Performing a solve, changing the operator, then performing another solve ...

Oh no! At least one of the tests failed!
