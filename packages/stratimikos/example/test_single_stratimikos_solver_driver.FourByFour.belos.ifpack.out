
Echoing the command-line:

./test_single_stratimikos_solver_driver.exe --echo-command-line --input-file=FourByFour.belos.ifpack.xml 

Teuchos::GlobalMPISession::GlobalMPISession(): started serial run

Reading parameters from XML file "FourByFour.belos.ifpack.xml" ...

Echoing input parameters ...
  Matrix File : string = FourByFour.mtx
  Linear Solver Builder -> 
    Linear Solver Type : string = Belos
    Preconditioner Type : string = Ifpack
  LinearOpTester -> 
    [empty list]
  LinearOpWithSolveTester -> 
    [empty list]

Validating top-level input parameters ...

Reading in an epetra matrix A from the file 'FourByFour.mtx' ...

Creating a Thyra::DefaultRealLinearSolverBuilder object ...

Valid parameters for DefaultRealLinearSolverBuilder ...
  Linear Solver Type : string = Amesos
  Preconditioner Type : string = ML
  Linear Solver Types -> 
    Amesos -> 
      Refactorization Policy : string = RepivotOnRefactorization
      Solver Type : string = Klu
      Throw on Preconditioner Input : bool = 1
      Amesos Settings -> 
        AddToDiag : double = 0
        AddZeroToDiag : bool = 0
        ComputeTrueResidual : bool = 0
        ComputeVectorNorms : bool = 0
        DebugLevel : int = 0
        MatrixProperty : string = general
        MaxProcs : int = -1
        NoDestroy : bool = 0
        OutputLevel : int = 1
        PrintTiming : bool = 0
        RcondThreshold : double = 1e-12
        Redistribute : bool = 0
        Refactorize : bool = 0
        Reindex : int = 0
        ScaleMethod : int = 0
        TrustMe : bool = 0
        Lapack -> 
          [empty list]
        Mumps -> 
          [empty list]
        Pardiso -> 
          [empty list]
        Scalapack -> 
          [empty list]
        Superludist -> 
          [empty list]
    AztecOO -> 
      Output Every RHS : bool = 0
      Adjoint Solve -> 
        Max Iterations : int = 400
        Tolerance : double = 1e-06
        AztecOO Settings -> 
          Aztec Preconditioner : string = ilu
          Aztec Solver : string = GMRES
          Convergence Test : string = r0
          Drop Tolerance : double = 0
          Fill Factor : double = 1
          Graph Fill : int = 0
          Ill-Conditioning Threshold : double = 1e+11
          Orthogonalization : string = Classical
          Output Frequency : int = 0
          Overlap : int = 0
          Polynomial Order : int = 3
          RCM Reordering : string = Disabled
          Size of Krylov Subspace : int = 300
          Steps : int = 3
      Forward Solve -> 
        Max Iterations : int = 400
        Tolerance : double = 1e-06
        AztecOO Settings -> 
          Aztec Preconditioner : string = ilu
          Aztec Solver : string = GMRES
          Convergence Test : string = r0
          Drop Tolerance : double = 0
          Fill Factor : double = 1
          Graph Fill : int = 0
          Ill-Conditioning Threshold : double = 1e+11
          Orthogonalization : string = Classical
          Output Frequency : int = 0
          Overlap : int = 0
          Polynomial Order : int = 3
          RCM Reordering : string = Disabled
          Size of Krylov Subspace : int = 300
          Steps : int = 3
    Belos -> 
      Adjustable Block Size : bool = 1
      Block Size : int = 1
      Default Rel Res Norm : double = 1e-06
      Max Iters : int = 400
      Max Restarts : int = 25
      Solver Type : string = GMRES
      GMRES -> 
        Max Number of Krylov Vectors : int = 300
        Variant : string = Standard
      Outputter -> 
        Output Frequency : int = 10
        Output Max Res Only : bool = 1
  Preconditioner Types -> 
    Ifpack -> 
      Overlap : int = 0
      Prec Type : string = ILU
      Ifpack Settings -> 
        amesos: solver type : string = Amesos_Klu
        fact: absolute threshold : double = 0
        fact: drop tolerance : double = 0
        fact: ict level-of-fill : double = 1
        fact: ilut level-of-fill : double = 1
        fact: level-of-fill : int = 0
        fact: relative threshold : double = 1
        fact: relax value : double = 0
        fact: sparskit: alph : double = 0
        fact: sparskit: droptol : double = 0
        fact: sparskit: lfil : int = 0
        fact: sparskit: mbloc : int = -1
        fact: sparskit: permtol : double = 0.1
        fact: sparskit: tol : double = 0
        fact: sparskit: type : string = ILUT
        partitioner: local parts : int = 1
        partitioner: overlap : int = 0
        partitioner: print level : int = 0
        partitioner: type : string = greedy
        partitioner: use symmetric graph : bool = 1
        relaxation: damping factor : double = 1
        relaxation: min diagonal value : double = 1
        relaxation: sweeps : int = 1
        relaxation: type : string = Jacobi
        relaxation: zero starting solution : bool = 1
        schwarz: combine mode : string = Zero
        schwarz: compute condest : bool = 1
        schwarz: filter singletons : bool = 0
        schwarz: reordering type : string = none
    ML -> 
      PDE equations : int = 1
      aggregation: damping factor : double = 1.333
      aggregation: local aggregates : int = 128
      aggregation: threshold : double = 0
      aggregation: type : string = METIS
      coarse: max size : int = 128
      coarse: type : string = Amesos-KLU
      default values : string = DD
      increasing or decreasing : string = increasing
      max levels : int = 2
      output : int = 8
      prec type : string = MGV
      print unused : int = -2
      smoother: Aztec as solver : bool = 0
      smoother: Aztec options : int* = 0xaa5900
      smoother: Aztec params : double* = 0xaa59d0
      smoother: damping factor : double = 0.67
      smoother: pre or post : string = both
      smoother: sweeps : int = 2
      smoother: type : string = Aztec

Creating the LinearOpWithSolveFactoryBase object lowsFactory ...

lowsFactory described as:
  Thyra::BelosLinearOpWithSolveFactory


Running example use cases ...
  
  Running example use cases for a LinearOpWithSolveFactoryBase object ...
    
    Performing a single linear solve ...
    
    Solve status:
      solveStatus = SOLVE_STATUS_UNKNOWN
      achievedTol = unknownTolerance()
      message: "The Belos solver of type "Belos::BlockGmres<...,double>{Variant='Standard'}" returned a solve status of "Converged" in 4 iterations and achieved an approximate max tolerance of 0 with total CPU time of 0.004904 sec"
      extraParameters: NONE
    
    Performing a solve, changing the operator, then performing another solve ...
    
    Performing a solve, changing the operator in a very small way, then performing another solve ...
    
    Performing a solve, changing the operator in a major way, then performing another solve ...

Printing the parameter list (showing what was used) ...
  Matrix File : string = FourByFour.mtx
  Linear Solver Builder -> 
    Linear Solver Type : string = Belos
    Preconditioner Type : string = Ifpack
    Linear Solver Types -> 
      Belos -> 
        Adjustable Block Size : bool = 1   [default]
        Block Size : int = 1   [default]
        Default Rel Res Norm : double = 1e-06   [default]
        Max Iters : int = 400   [default]
        Max Restarts : int = 25   [default]
        Solver Type : string = GMRES   [default]
        GMRES -> 
          Max Number of Krylov Vectors : int = 300   [default]
          Variant : string = Standard   [default]
        Outputter -> 
          Output Frequency : int = 10   [default]
          Output Max Res Only : bool = 1   [default]
    Preconditioner Types -> 
      Ifpack -> 
        Overlap : int = 0   [default]
        Prec Type : string = ILU   [default]
  LinearOpTester -> 
    [empty list]
  LinearOpWithSolveTester -> 
    [empty list]

Congratulations! All of the tests checked out!
